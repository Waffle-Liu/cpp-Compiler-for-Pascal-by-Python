Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PACKED
    NUMBER

Grammar

Rule 0     S' -> program
Rule 1     program -> program_head routine DOT
Rule 2     program_head -> PROGRAM NAME SEMI
Rule 3     routine -> routine_head routine_body
Rule 4     sub_routine -> routine_head routine_body
Rule 5     routine_head -> label_part const_part type_part var_part routine_part
Rule 6     label_part -> empty
Rule 7     const_part -> CONST const_expr_list
Rule 8     const_part -> empty
Rule 9     const_expr_list -> const_expr_list const_expr
Rule 10    const_expr_list -> const_expr
Rule 11    const_expr -> NAME EQUAL const_value SEMI
Rule 12    const_value -> INTEGER
Rule 13    const_value -> REAL
Rule 14    const_value -> CHAR
Rule 15    const_value -> STRING
Rule 16    const_value -> SYS_CON
Rule 17    type_part -> TYPE type_decl_list
Rule 18    type_part -> empty
Rule 19    type_decl_list -> type_decl_list type_definition
Rule 20    type_decl_list -> type_definition
Rule 21    type_definition -> NAME EQUAL type_decl SEMI
Rule 22    type_decl -> simple_type_decl
Rule 23    type_decl -> array_type_decl
Rule 24    type_decl -> record_type_decl
Rule 25    simple_type_decl -> SYS_TYPE
Rule 26    simple_type_decl -> NAME
Rule 27    simple_type_decl -> LP name_list RP
Rule 28    simple_type_decl -> const_value DOTDOT const_value
Rule 29    simple_type_decl -> MINUS const_value DOTDOT const_value
Rule 30    simple_type_decl -> MINUS const_value DOTDOT MINUS const_value
Rule 31    simple_type_decl -> NAME DOTDOT NAME
Rule 32    array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl
Rule 33    record_type_decl -> RECORD field_decl_list END
Rule 34    field_decl_list -> field_decl_list field_decl
Rule 35    field_decl_list -> field_decl
Rule 36    field_decl -> name_list COLON type_decl SEMI
Rule 37    name_list -> name_list COMMA NAME
Rule 38    name_list -> NAME
Rule 39    var_part -> VAR var_decl_list
Rule 40    var_part -> empty
Rule 41    var_decl_list -> var_decl_list var_decl
Rule 42    var_decl_list -> var_decl
Rule 43    var_decl -> name_list COLON type_decl SEMI
Rule 44    routine_part -> routine_part function_decl
Rule 45    routine_part -> routine_part procedure_decl
Rule 46    routine_part -> function_decl
Rule 47    routine_part -> procedure_decl
Rule 48    routine_part -> empty
Rule 49    function_decl -> function_head SEMI sub_routine SEMI
Rule 50    function_head -> FUNCTION NAME parameters COLON simple_type_decl
Rule 51    procedure_decl -> procedure_head SEMI sub_routine SEMI
Rule 52    procedure_head -> PROCEDURE NAME parameters
Rule 53    parameters -> LP para_decl_list RP
Rule 54    parameters -> empty
Rule 55    para_decl_list -> para_decl_list SEMI para_type_list
Rule 56    para_decl_list -> para_type_list
Rule 57    para_type_list -> var_para_list COLON simple_type_decl
Rule 58    para_type_list -> val_para_list COLON simple_type_decl
Rule 59    var_para_list -> VAR name_list
Rule 60    val_para_list -> name_list
Rule 61    routine_body -> compound_stmt
Rule 62    compound_stmt -> BEGIN stmt_list END
Rule 63    stmt_list -> stmt_list stmt SEMI
Rule 64    stmt_list -> empty
Rule 65    stmt -> INTEGER COLON non_label_stmt
Rule 66    stmt -> non_label_stmt
Rule 67    non_label_stmt -> assign_stmt
Rule 68    non_label_stmt -> proc_stmt
Rule 69    non_label_stmt -> compound_stmt
Rule 70    non_label_stmt -> if_stmt
Rule 71    non_label_stmt -> repeat_stmt
Rule 72    non_label_stmt -> while_stmt
Rule 73    non_label_stmt -> for_stmt
Rule 74    non_label_stmt -> case_stmt
Rule 75    non_label_stmt -> goto_stmt
Rule 76    assign_stmt -> NAME ASSIGN expression
Rule 77    assign_stmt -> NAME LB expression RB ASSIGN expression
Rule 78    assign_stmt -> NAME DOT NAME ASSIGN expression
Rule 79    proc_stmt -> NAME
Rule 80    proc_stmt -> NAME LP args_list RP
Rule 81    proc_stmt -> SYS_PROC
Rule 82    proc_stmt -> SYS_PROC LP expression_list RP
Rule 83    proc_stmt -> READ LP factor RP
Rule 84    if_stmt -> IF expression THEN stmt else_clause
Rule 85    else_clause -> ELSE stmt
Rule 86    else_clause -> empty
Rule 87    repeat_stmt -> REPEAT stmt_list UNTIL expression
Rule 88    while_stmt -> WHILE expression DO stmt
Rule 89    for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt
Rule 90    direction -> TO
Rule 91    direction -> DOWNTO
Rule 92    case_stmt -> CASE expression OF case_expr_list END
Rule 93    case_expr_list -> case_expr_list case_expr
Rule 94    case_expr_list -> case_expr
Rule 95    case_expr -> const_value COLON stmt SEMI
Rule 96    case_expr -> ID COLON stmt SEMI
Rule 97    goto_stmt -> GOTO INTEGER
Rule 98    expression_list -> expression_list COMMA expression
Rule 99    expression_list -> expression
Rule 100   expression -> expression GE expr
Rule 101   expression -> expression GT expr
Rule 102   expression -> expression LE expr
Rule 103   expression -> expression LT expr
Rule 104   expression -> expression EQUAL expr
Rule 105   expression -> expression UNEQUAL expr
Rule 106   expression -> expr
Rule 107   expr -> expr PLUS term
Rule 108   expr -> expr MINUS term
Rule 109   expr -> expr OR term
Rule 110   expr -> term
Rule 111   term -> term MUL factor
Rule 112   term -> term DIV factor
Rule 113   term -> term MOD factor
Rule 114   term -> term AND factor
Rule 115   term -> factor
Rule 116   factor -> NAME
Rule 117   factor -> NAME LP args_list RP
Rule 118   factor -> SYS_FUNCT
Rule 119   factor -> SYS_FUNCT LP args_list RP
Rule 120   factor -> const_value
Rule 121   factor -> LP expression RP
Rule 122   factor -> NOT factor
Rule 123   factor -> MINUS factor
Rule 124   factor -> NAME LB expression RB
Rule 125   factor -> NAME DOT NAME
Rule 126   args_list -> args_list COMMA expression
Rule 127   args_list -> expression
Rule 128   empty -> <empty>

Terminals, with rules where they appear

AND                  : 114
ARRAY                : 32
ASSIGN               : 76 77 78 89
BEGIN                : 62
CASE                 : 92
CHAR                 : 14
COLON                : 36 43 50 57 58 65 95 96
COMMA                : 37 98 126
CONST                : 7
DIV                  : 112
DO                   : 88 89
DOT                  : 1 78 125
DOTDOT               : 28 29 30 31
DOWNTO               : 91
ELSE                 : 85
END                  : 33 62 92
EQUAL                : 11 21 104
FOR                  : 89
FUNCTION             : 50
GE                   : 100
GOTO                 : 97
GT                   : 101
ID                   : 96
IF                   : 84
INTEGER              : 12 65 97
LB                   : 32 77 124
LE                   : 102
LP                   : 27 53 80 82 83 117 119 121
LT                   : 103
MINUS                : 29 30 30 108 123
MOD                  : 113
MUL                  : 111
NAME                 : 2 11 21 26 31 31 37 38 50 52 76 77 78 78 79 80 89 116 117 124 125 125
NOT                  : 122
NUMBER               : 
OF                   : 32 92
OR                   : 109
PACKED               : 
PLUS                 : 107
PROCEDURE            : 52
PROGRAM              : 2
RB                   : 32 77 124
READ                 : 83
REAL                 : 13
RECORD               : 33
REPEAT               : 87
RP                   : 27 53 80 82 83 117 119 121
SEMI                 : 2 11 21 36 43 49 49 51 51 55 63 95 96
STRING               : 15
SYS_CON              : 16
SYS_FUNCT            : 118 119
SYS_PROC             : 81 82
SYS_TYPE             : 25
THEN                 : 84
TO                   : 90
TYPE                 : 17
UNEQUAL              : 105
UNTIL                : 87
VAR                  : 39 59
WHILE                : 88
error                : 

Nonterminals, with rules where they appear

args_list            : 80 117 119 126
array_type_decl      : 23
assign_stmt          : 67
case_expr            : 93 94
case_expr_list       : 92 93
case_stmt            : 74
compound_stmt        : 61 69
const_expr           : 9 10
const_expr_list      : 7 9
const_part           : 5
const_value          : 11 28 28 29 29 30 30 95 120
direction            : 89
else_clause          : 84
empty                : 6 8 18 40 48 54 64 86
expr                 : 100 101 102 103 104 105 106 107 108 109
expression           : 76 77 77 78 84 87 88 89 89 92 98 99 100 101 102 103 104 105 121 124 126 127
expression_list      : 82 98
factor               : 83 111 112 113 114 115 122 123
field_decl           : 34 35
field_decl_list      : 33 34
for_stmt             : 73
function_decl        : 44 46
function_head        : 49
goto_stmt            : 75
if_stmt              : 70
label_part           : 5
name_list            : 27 36 37 43 59 60
non_label_stmt       : 65 66
para_decl_list       : 53 55
para_type_list       : 55 56
parameters           : 50 52
proc_stmt            : 68
procedure_decl       : 45 47
procedure_head       : 51
program              : 0
program_head         : 1
record_type_decl     : 24
repeat_stmt          : 71
routine              : 1
routine_body         : 3 4
routine_head         : 3 4
routine_part         : 5 44 45
simple_type_decl     : 22 32 50 57 58
stmt                 : 63 84 85 88 89 95 96
stmt_list            : 62 63 87
sub_routine          : 49 51
term                 : 107 108 109 110 111 112 113 114
type_decl            : 21 32 36 43
type_decl_list       : 17 19
type_definition      : 19 20
type_part            : 5
val_para_list        : 58
var_decl             : 41 42
var_decl_list        : 39 41
var_para_list        : 57
var_part             : 5
while_stmt           : 72

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_head routine DOT
    (2) program_head -> . PROGRAM NAME SEMI

    PROGRAM         shift and go to state 3

    program_head                   shift and go to state 2
    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> program_head . routine DOT
    (3) routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . empty
    (128) empty -> .

    CONST           reduce using rule 128 (empty -> .)
    TYPE            reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    FUNCTION        reduce using rule 128 (empty -> .)
    PROCEDURE       reduce using rule 128 (empty -> .)
    BEGIN           reduce using rule 128 (empty -> .)

    label_part                     shift and go to state 5
    routine_head                   shift and go to state 6
    routine                        shift and go to state 7
    empty                          shift and go to state 4

state 3

    (2) program_head -> PROGRAM . NAME SEMI

    NAME            shift and go to state 8


state 4

    (6) label_part -> empty .

    CONST           reduce using rule 6 (label_part -> empty .)
    TYPE            reduce using rule 6 (label_part -> empty .)
    VAR             reduce using rule 6 (label_part -> empty .)
    FUNCTION        reduce using rule 6 (label_part -> empty .)
    PROCEDURE       reduce using rule 6 (label_part -> empty .)
    BEGIN           reduce using rule 6 (label_part -> empty .)


state 5

    (5) routine_head -> label_part . const_part type_part var_part routine_part
    (7) const_part -> . CONST const_expr_list
    (8) const_part -> . empty
    (128) empty -> .

    CONST           shift and go to state 10
    TYPE            reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    FUNCTION        reduce using rule 128 (empty -> .)
    PROCEDURE       reduce using rule 128 (empty -> .)
    BEGIN           reduce using rule 128 (empty -> .)

    const_part                     shift and go to state 9
    empty                          shift and go to state 11

state 6

    (3) routine -> routine_head . routine_body
    (61) routine_body -> . compound_stmt
    (62) compound_stmt -> . BEGIN stmt_list END

    BEGIN           shift and go to state 12

    routine_body                   shift and go to state 13
    compound_stmt                  shift and go to state 14

state 7

    (1) program -> program_head routine . DOT

    DOT             shift and go to state 15


state 8

    (2) program_head -> PROGRAM NAME . SEMI

    SEMI            shift and go to state 16


state 9

    (5) routine_head -> label_part const_part . type_part var_part routine_part
    (17) type_part -> . TYPE type_decl_list
    (18) type_part -> . empty
    (128) empty -> .

    TYPE            shift and go to state 18
    VAR             reduce using rule 128 (empty -> .)
    FUNCTION        reduce using rule 128 (empty -> .)
    PROCEDURE       reduce using rule 128 (empty -> .)
    BEGIN           reduce using rule 128 (empty -> .)

    type_part                      shift and go to state 17
    empty                          shift and go to state 19

state 10

    (7) const_part -> CONST . const_expr_list
    (9) const_expr_list -> . const_expr_list const_expr
    (10) const_expr_list -> . const_expr
    (11) const_expr -> . NAME EQUAL const_value SEMI

    NAME            shift and go to state 21

    const_expr                     shift and go to state 22
    const_expr_list                shift and go to state 20

state 11

    (8) const_part -> empty .

    TYPE            reduce using rule 8 (const_part -> empty .)
    VAR             reduce using rule 8 (const_part -> empty .)
    FUNCTION        reduce using rule 8 (const_part -> empty .)
    PROCEDURE       reduce using rule 8 (const_part -> empty .)
    BEGIN           reduce using rule 8 (const_part -> empty .)


state 12

    (62) compound_stmt -> BEGIN . stmt_list END
    (63) stmt_list -> . stmt_list stmt SEMI
    (64) stmt_list -> . empty
    (128) empty -> .

    END             reduce using rule 128 (empty -> .)
    INTEGER         reduce using rule 128 (empty -> .)
    NAME            reduce using rule 128 (empty -> .)
    SYS_PROC        reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    BEGIN           reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    REPEAT          reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    CASE            reduce using rule 128 (empty -> .)
    GOTO            reduce using rule 128 (empty -> .)

    stmt_list                      shift and go to state 23
    empty                          shift and go to state 24

state 13

    (3) routine -> routine_head routine_body .

    DOT             reduce using rule 3 (routine -> routine_head routine_body .)


state 14

    (61) routine_body -> compound_stmt .

    SEMI            reduce using rule 61 (routine_body -> compound_stmt .)
    DOT             reduce using rule 61 (routine_body -> compound_stmt .)


state 15

    (1) program -> program_head routine DOT .

    $end            reduce using rule 1 (program -> program_head routine DOT .)


state 16

    (2) program_head -> PROGRAM NAME SEMI .

    BEGIN           reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    CONST           reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    TYPE            reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    VAR             reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    FUNCTION        reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    PROCEDURE       reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)


state 17

    (5) routine_head -> label_part const_part type_part . var_part routine_part
    (39) var_part -> . VAR var_decl_list
    (40) var_part -> . empty
    (128) empty -> .

    VAR             shift and go to state 26
    FUNCTION        reduce using rule 128 (empty -> .)
    PROCEDURE       reduce using rule 128 (empty -> .)
    BEGIN           reduce using rule 128 (empty -> .)

    var_part                       shift and go to state 25
    empty                          shift and go to state 27

state 18

    (17) type_part -> TYPE . type_decl_list
    (19) type_decl_list -> . type_decl_list type_definition
    (20) type_decl_list -> . type_definition
    (21) type_definition -> . NAME EQUAL type_decl SEMI

    NAME            shift and go to state 28

    type_decl_list                 shift and go to state 30
    type_definition                shift and go to state 29

state 19

    (18) type_part -> empty .

    VAR             reduce using rule 18 (type_part -> empty .)
    FUNCTION        reduce using rule 18 (type_part -> empty .)
    PROCEDURE       reduce using rule 18 (type_part -> empty .)
    BEGIN           reduce using rule 18 (type_part -> empty .)


state 20

    (7) const_part -> CONST const_expr_list .
    (9) const_expr_list -> const_expr_list . const_expr
    (11) const_expr -> . NAME EQUAL const_value SEMI

    TYPE            reduce using rule 7 (const_part -> CONST const_expr_list .)
    VAR             reduce using rule 7 (const_part -> CONST const_expr_list .)
    FUNCTION        reduce using rule 7 (const_part -> CONST const_expr_list .)
    PROCEDURE       reduce using rule 7 (const_part -> CONST const_expr_list .)
    BEGIN           reduce using rule 7 (const_part -> CONST const_expr_list .)
    NAME            shift and go to state 21

    const_expr                     shift and go to state 31

state 21

    (11) const_expr -> NAME . EQUAL const_value SEMI

    EQUAL           shift and go to state 32


state 22

    (10) const_expr_list -> const_expr .

    NAME            reduce using rule 10 (const_expr_list -> const_expr .)
    TYPE            reduce using rule 10 (const_expr_list -> const_expr .)
    VAR             reduce using rule 10 (const_expr_list -> const_expr .)
    FUNCTION        reduce using rule 10 (const_expr_list -> const_expr .)
    PROCEDURE       reduce using rule 10 (const_expr_list -> const_expr .)
    BEGIN           reduce using rule 10 (const_expr_list -> const_expr .)


state 23

    (62) compound_stmt -> BEGIN stmt_list . END
    (63) stmt_list -> stmt_list . stmt SEMI
    (65) stmt -> . INTEGER COLON non_label_stmt
    (66) stmt -> . non_label_stmt
    (67) non_label_stmt -> . assign_stmt
    (68) non_label_stmt -> . proc_stmt
    (69) non_label_stmt -> . compound_stmt
    (70) non_label_stmt -> . if_stmt
    (71) non_label_stmt -> . repeat_stmt
    (72) non_label_stmt -> . while_stmt
    (73) non_label_stmt -> . for_stmt
    (74) non_label_stmt -> . case_stmt
    (75) non_label_stmt -> . goto_stmt
    (76) assign_stmt -> . NAME ASSIGN expression
    (77) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (78) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (79) proc_stmt -> . NAME
    (80) proc_stmt -> . NAME LP args_list RP
    (81) proc_stmt -> . SYS_PROC
    (82) proc_stmt -> . SYS_PROC LP expression_list RP
    (83) proc_stmt -> . READ LP factor RP
    (62) compound_stmt -> . BEGIN stmt_list END
    (84) if_stmt -> . IF expression THEN stmt else_clause
    (87) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (88) while_stmt -> . WHILE expression DO stmt
    (89) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (92) case_stmt -> . CASE expression OF case_expr_list END
    (97) goto_stmt -> . GOTO INTEGER

    END             shift and go to state 45
    INTEGER         shift and go to state 42
    NAME            shift and go to state 50
    SYS_PROC        shift and go to state 35
    READ            shift and go to state 33
    BEGIN           shift and go to state 12
    IF              shift and go to state 43
    REPEAT          shift and go to state 44
    WHILE           shift and go to state 51
    FOR             shift and go to state 46
    CASE            shift and go to state 37
    GOTO            shift and go to state 36

    case_stmt                      shift and go to state 38
    non_label_stmt                 shift and go to state 39
    for_stmt                       shift and go to state 48
    stmt                           shift and go to state 47
    assign_stmt                    shift and go to state 40
    proc_stmt                      shift and go to state 34
    repeat_stmt                    shift and go to state 41
    while_stmt                     shift and go to state 53
    goto_stmt                      shift and go to state 54
    compound_stmt                  shift and go to state 52
    if_stmt                        shift and go to state 49

state 24

    (64) stmt_list -> empty .

    UNTIL           reduce using rule 64 (stmt_list -> empty .)
    INTEGER         reduce using rule 64 (stmt_list -> empty .)
    NAME            reduce using rule 64 (stmt_list -> empty .)
    SYS_PROC        reduce using rule 64 (stmt_list -> empty .)
    READ            reduce using rule 64 (stmt_list -> empty .)
    BEGIN           reduce using rule 64 (stmt_list -> empty .)
    IF              reduce using rule 64 (stmt_list -> empty .)
    REPEAT          reduce using rule 64 (stmt_list -> empty .)
    WHILE           reduce using rule 64 (stmt_list -> empty .)
    FOR             reduce using rule 64 (stmt_list -> empty .)
    CASE            reduce using rule 64 (stmt_list -> empty .)
    GOTO            reduce using rule 64 (stmt_list -> empty .)
    END             reduce using rule 64 (stmt_list -> empty .)


state 25

    (5) routine_head -> label_part const_part type_part var_part . routine_part
    (44) routine_part -> . routine_part function_decl
    (45) routine_part -> . routine_part procedure_decl
    (46) routine_part -> . function_decl
    (47) routine_part -> . procedure_decl
    (48) routine_part -> . empty
    (49) function_decl -> . function_head SEMI sub_routine SEMI
    (51) procedure_decl -> . procedure_head SEMI sub_routine SEMI
    (128) empty -> .
    (50) function_head -> . FUNCTION NAME parameters COLON simple_type_decl
    (52) procedure_head -> . PROCEDURE NAME parameters

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PROCEDURE resolved as shift
    BEGIN           reduce using rule 128 (empty -> .)
    FUNCTION        shift and go to state 55
    PROCEDURE       shift and go to state 58

  ! FUNCTION        [ reduce using rule 128 (empty -> .) ]
  ! PROCEDURE       [ reduce using rule 128 (empty -> .) ]

    function_decl                  shift and go to state 56
    procedure_head                 shift and go to state 62
    routine_part                   shift and go to state 57
    function_head                  shift and go to state 59
    procedure_decl                 shift and go to state 60
    empty                          shift and go to state 61

state 26

    (39) var_part -> VAR . var_decl_list
    (41) var_decl_list -> . var_decl_list var_decl
    (42) var_decl_list -> . var_decl
    (43) var_decl -> . name_list COLON type_decl SEMI
    (37) name_list -> . name_list COMMA NAME
    (38) name_list -> . NAME

    NAME            shift and go to state 63

    var_decl_list                  shift and go to state 66
    name_list                      shift and go to state 64
    var_decl                       shift and go to state 65

state 27

    (40) var_part -> empty .

    FUNCTION        reduce using rule 40 (var_part -> empty .)
    PROCEDURE       reduce using rule 40 (var_part -> empty .)
    BEGIN           reduce using rule 40 (var_part -> empty .)


state 28

    (21) type_definition -> NAME . EQUAL type_decl SEMI

    EQUAL           shift and go to state 67


state 29

    (20) type_decl_list -> type_definition .

    NAME            reduce using rule 20 (type_decl_list -> type_definition .)
    VAR             reduce using rule 20 (type_decl_list -> type_definition .)
    FUNCTION        reduce using rule 20 (type_decl_list -> type_definition .)
    PROCEDURE       reduce using rule 20 (type_decl_list -> type_definition .)
    BEGIN           reduce using rule 20 (type_decl_list -> type_definition .)


state 30

    (17) type_part -> TYPE type_decl_list .
    (19) type_decl_list -> type_decl_list . type_definition
    (21) type_definition -> . NAME EQUAL type_decl SEMI

    VAR             reduce using rule 17 (type_part -> TYPE type_decl_list .)
    FUNCTION        reduce using rule 17 (type_part -> TYPE type_decl_list .)
    PROCEDURE       reduce using rule 17 (type_part -> TYPE type_decl_list .)
    BEGIN           reduce using rule 17 (type_part -> TYPE type_decl_list .)
    NAME            shift and go to state 28

    type_definition                shift and go to state 68

state 31

    (9) const_expr_list -> const_expr_list const_expr .

    NAME            reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    TYPE            reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    VAR             reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    FUNCTION        reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    PROCEDURE       reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    BEGIN           reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)


state 32

    (11) const_expr -> NAME EQUAL . const_value SEMI
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 71

state 33

    (83) proc_stmt -> READ . LP factor RP

    LP              shift and go to state 75


state 34

    (68) non_label_stmt -> proc_stmt .

    SEMI            reduce using rule 68 (non_label_stmt -> proc_stmt .)
    ELSE            reduce using rule 68 (non_label_stmt -> proc_stmt .)


state 35

    (81) proc_stmt -> SYS_PROC .
    (82) proc_stmt -> SYS_PROC . LP expression_list RP

    SEMI            reduce using rule 81 (proc_stmt -> SYS_PROC .)
    ELSE            reduce using rule 81 (proc_stmt -> SYS_PROC .)
    LP              shift and go to state 76


state 36

    (97) goto_stmt -> GOTO . INTEGER

    INTEGER         shift and go to state 77


state 37

    (92) case_stmt -> CASE . expression OF case_expr_list END
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 87

state 38

    (74) non_label_stmt -> case_stmt .

    SEMI            reduce using rule 74 (non_label_stmt -> case_stmt .)
    ELSE            reduce using rule 74 (non_label_stmt -> case_stmt .)


state 39

    (66) stmt -> non_label_stmt .

    SEMI            reduce using rule 66 (stmt -> non_label_stmt .)
    ELSE            reduce using rule 66 (stmt -> non_label_stmt .)


state 40

    (67) non_label_stmt -> assign_stmt .

    SEMI            reduce using rule 67 (non_label_stmt -> assign_stmt .)
    ELSE            reduce using rule 67 (non_label_stmt -> assign_stmt .)


state 41

    (71) non_label_stmt -> repeat_stmt .

    SEMI            reduce using rule 71 (non_label_stmt -> repeat_stmt .)
    ELSE            reduce using rule 71 (non_label_stmt -> repeat_stmt .)


state 42

    (65) stmt -> INTEGER . COLON non_label_stmt

    COLON           shift and go to state 88


state 43

    (84) if_stmt -> IF . expression THEN stmt else_clause
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 89

state 44

    (87) repeat_stmt -> REPEAT . stmt_list UNTIL expression
    (63) stmt_list -> . stmt_list stmt SEMI
    (64) stmt_list -> . empty
    (128) empty -> .

    UNTIL           reduce using rule 128 (empty -> .)
    INTEGER         reduce using rule 128 (empty -> .)
    NAME            reduce using rule 128 (empty -> .)
    SYS_PROC        reduce using rule 128 (empty -> .)
    READ            reduce using rule 128 (empty -> .)
    BEGIN           reduce using rule 128 (empty -> .)
    IF              reduce using rule 128 (empty -> .)
    REPEAT          reduce using rule 128 (empty -> .)
    WHILE           reduce using rule 128 (empty -> .)
    FOR             reduce using rule 128 (empty -> .)
    CASE            reduce using rule 128 (empty -> .)
    GOTO            reduce using rule 128 (empty -> .)

    stmt_list                      shift and go to state 90
    empty                          shift and go to state 24

state 45

    (62) compound_stmt -> BEGIN stmt_list END .

    SEMI            reduce using rule 62 (compound_stmt -> BEGIN stmt_list END .)
    ELSE            reduce using rule 62 (compound_stmt -> BEGIN stmt_list END .)
    DOT             reduce using rule 62 (compound_stmt -> BEGIN stmt_list END .)


state 46

    (89) for_stmt -> FOR . NAME ASSIGN expression direction expression DO stmt

    NAME            shift and go to state 91


state 47

    (63) stmt_list -> stmt_list stmt . SEMI

    SEMI            shift and go to state 92


state 48

    (73) non_label_stmt -> for_stmt .

    SEMI            reduce using rule 73 (non_label_stmt -> for_stmt .)
    ELSE            reduce using rule 73 (non_label_stmt -> for_stmt .)


state 49

    (70) non_label_stmt -> if_stmt .

    SEMI            reduce using rule 70 (non_label_stmt -> if_stmt .)
    ELSE            reduce using rule 70 (non_label_stmt -> if_stmt .)


state 50

    (76) assign_stmt -> NAME . ASSIGN expression
    (77) assign_stmt -> NAME . LB expression RB ASSIGN expression
    (78) assign_stmt -> NAME . DOT NAME ASSIGN expression
    (79) proc_stmt -> NAME .
    (80) proc_stmt -> NAME . LP args_list RP

    ASSIGN          shift and go to state 95
    LB              shift and go to state 93
    DOT             shift and go to state 96
    SEMI            reduce using rule 79 (proc_stmt -> NAME .)
    ELSE            reduce using rule 79 (proc_stmt -> NAME .)
    LP              shift and go to state 94


state 51

    (88) while_stmt -> WHILE . expression DO stmt
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 97

state 52

    (69) non_label_stmt -> compound_stmt .

    SEMI            reduce using rule 69 (non_label_stmt -> compound_stmt .)
    ELSE            reduce using rule 69 (non_label_stmt -> compound_stmt .)


state 53

    (72) non_label_stmt -> while_stmt .

    SEMI            reduce using rule 72 (non_label_stmt -> while_stmt .)
    ELSE            reduce using rule 72 (non_label_stmt -> while_stmt .)


state 54

    (75) non_label_stmt -> goto_stmt .

    SEMI            reduce using rule 75 (non_label_stmt -> goto_stmt .)
    ELSE            reduce using rule 75 (non_label_stmt -> goto_stmt .)


state 55

    (50) function_head -> FUNCTION . NAME parameters COLON simple_type_decl

    NAME            shift and go to state 98


state 56

    (46) routine_part -> function_decl .

    FUNCTION        reduce using rule 46 (routine_part -> function_decl .)
    PROCEDURE       reduce using rule 46 (routine_part -> function_decl .)
    BEGIN           reduce using rule 46 (routine_part -> function_decl .)


state 57

    (5) routine_head -> label_part const_part type_part var_part routine_part .
    (44) routine_part -> routine_part . function_decl
    (45) routine_part -> routine_part . procedure_decl
    (49) function_decl -> . function_head SEMI sub_routine SEMI
    (51) procedure_decl -> . procedure_head SEMI sub_routine SEMI
    (50) function_head -> . FUNCTION NAME parameters COLON simple_type_decl
    (52) procedure_head -> . PROCEDURE NAME parameters

    BEGIN           reduce using rule 5 (routine_head -> label_part const_part type_part var_part routine_part .)
    FUNCTION        shift and go to state 55
    PROCEDURE       shift and go to state 58

    function_decl                  shift and go to state 99
    procedure_head                 shift and go to state 62
    function_head                  shift and go to state 59
    procedure_decl                 shift and go to state 100

state 58

    (52) procedure_head -> PROCEDURE . NAME parameters

    NAME            shift and go to state 101


state 59

    (49) function_decl -> function_head . SEMI sub_routine SEMI

    SEMI            shift and go to state 102


state 60

    (47) routine_part -> procedure_decl .

    FUNCTION        reduce using rule 47 (routine_part -> procedure_decl .)
    PROCEDURE       reduce using rule 47 (routine_part -> procedure_decl .)
    BEGIN           reduce using rule 47 (routine_part -> procedure_decl .)


state 61

    (48) routine_part -> empty .

    FUNCTION        reduce using rule 48 (routine_part -> empty .)
    PROCEDURE       reduce using rule 48 (routine_part -> empty .)
    BEGIN           reduce using rule 48 (routine_part -> empty .)


state 62

    (51) procedure_decl -> procedure_head . SEMI sub_routine SEMI

    SEMI            shift and go to state 103


state 63

    (38) name_list -> NAME .

    COLON           reduce using rule 38 (name_list -> NAME .)
    COMMA           reduce using rule 38 (name_list -> NAME .)
    RP              reduce using rule 38 (name_list -> NAME .)


state 64

    (43) var_decl -> name_list . COLON type_decl SEMI
    (37) name_list -> name_list . COMMA NAME

    COLON           shift and go to state 105
    COMMA           shift and go to state 104


state 65

    (42) var_decl_list -> var_decl .

    NAME            reduce using rule 42 (var_decl_list -> var_decl .)
    FUNCTION        reduce using rule 42 (var_decl_list -> var_decl .)
    PROCEDURE       reduce using rule 42 (var_decl_list -> var_decl .)
    BEGIN           reduce using rule 42 (var_decl_list -> var_decl .)


state 66

    (39) var_part -> VAR var_decl_list .
    (41) var_decl_list -> var_decl_list . var_decl
    (43) var_decl -> . name_list COLON type_decl SEMI
    (37) name_list -> . name_list COMMA NAME
    (38) name_list -> . NAME

    FUNCTION        reduce using rule 39 (var_part -> VAR var_decl_list .)
    PROCEDURE       reduce using rule 39 (var_part -> VAR var_decl_list .)
    BEGIN           reduce using rule 39 (var_part -> VAR var_decl_list .)
    NAME            shift and go to state 63

    name_list                      shift and go to state 64
    var_decl                       shift and go to state 106

state 67

    (21) type_definition -> NAME EQUAL . type_decl SEMI
    (22) type_decl -> . simple_type_decl
    (23) type_decl -> . array_type_decl
    (24) type_decl -> . record_type_decl
    (25) simple_type_decl -> . SYS_TYPE
    (26) simple_type_decl -> . NAME
    (27) simple_type_decl -> . LP name_list RP
    (28) simple_type_decl -> . const_value DOTDOT const_value
    (29) simple_type_decl -> . MINUS const_value DOTDOT const_value
    (30) simple_type_decl -> . MINUS const_value DOTDOT MINUS const_value
    (31) simple_type_decl -> . NAME DOTDOT NAME
    (32) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (33) record_type_decl -> . RECORD field_decl_list END
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 114
    NAME            shift and go to state 115
    LP              shift and go to state 110
    MINUS           shift and go to state 108
    ARRAY           shift and go to state 111
    RECORD          shift and go to state 109
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    array_type_decl                shift and go to state 112
    const_value                    shift and go to state 107
    record_type_decl               shift and go to state 116
    type_decl                      shift and go to state 113
    simple_type_decl               shift and go to state 117

state 68

    (19) type_decl_list -> type_decl_list type_definition .

    NAME            reduce using rule 19 (type_decl_list -> type_decl_list type_definition .)
    VAR             reduce using rule 19 (type_decl_list -> type_decl_list type_definition .)
    FUNCTION        reduce using rule 19 (type_decl_list -> type_decl_list type_definition .)
    PROCEDURE       reduce using rule 19 (type_decl_list -> type_decl_list type_definition .)
    BEGIN           reduce using rule 19 (type_decl_list -> type_decl_list type_definition .)


state 69

    (13) const_value -> REAL .

    DOTDOT          reduce using rule 13 (const_value -> REAL .)
    MUL             reduce using rule 13 (const_value -> REAL .)
    DIV             reduce using rule 13 (const_value -> REAL .)
    MOD             reduce using rule 13 (const_value -> REAL .)
    AND             reduce using rule 13 (const_value -> REAL .)
    PLUS            reduce using rule 13 (const_value -> REAL .)
    MINUS           reduce using rule 13 (const_value -> REAL .)
    OR              reduce using rule 13 (const_value -> REAL .)
    GE              reduce using rule 13 (const_value -> REAL .)
    GT              reduce using rule 13 (const_value -> REAL .)
    LE              reduce using rule 13 (const_value -> REAL .)
    LT              reduce using rule 13 (const_value -> REAL .)
    EQUAL           reduce using rule 13 (const_value -> REAL .)
    UNEQUAL         reduce using rule 13 (const_value -> REAL .)
    RP              reduce using rule 13 (const_value -> REAL .)
    COMMA           reduce using rule 13 (const_value -> REAL .)
    SEMI            reduce using rule 13 (const_value -> REAL .)
    ELSE            reduce using rule 13 (const_value -> REAL .)
    OF              reduce using rule 13 (const_value -> REAL .)
    THEN            reduce using rule 13 (const_value -> REAL .)
    DO              reduce using rule 13 (const_value -> REAL .)
    RB              reduce using rule 13 (const_value -> REAL .)
    TO              reduce using rule 13 (const_value -> REAL .)
    DOWNTO          reduce using rule 13 (const_value -> REAL .)
    COLON           reduce using rule 13 (const_value -> REAL .)


state 70

    (14) const_value -> CHAR .

    DOTDOT          reduce using rule 14 (const_value -> CHAR .)
    MUL             reduce using rule 14 (const_value -> CHAR .)
    DIV             reduce using rule 14 (const_value -> CHAR .)
    MOD             reduce using rule 14 (const_value -> CHAR .)
    AND             reduce using rule 14 (const_value -> CHAR .)
    PLUS            reduce using rule 14 (const_value -> CHAR .)
    MINUS           reduce using rule 14 (const_value -> CHAR .)
    OR              reduce using rule 14 (const_value -> CHAR .)
    GE              reduce using rule 14 (const_value -> CHAR .)
    GT              reduce using rule 14 (const_value -> CHAR .)
    LE              reduce using rule 14 (const_value -> CHAR .)
    LT              reduce using rule 14 (const_value -> CHAR .)
    EQUAL           reduce using rule 14 (const_value -> CHAR .)
    UNEQUAL         reduce using rule 14 (const_value -> CHAR .)
    RP              reduce using rule 14 (const_value -> CHAR .)
    COMMA           reduce using rule 14 (const_value -> CHAR .)
    SEMI            reduce using rule 14 (const_value -> CHAR .)
    ELSE            reduce using rule 14 (const_value -> CHAR .)
    OF              reduce using rule 14 (const_value -> CHAR .)
    THEN            reduce using rule 14 (const_value -> CHAR .)
    DO              reduce using rule 14 (const_value -> CHAR .)
    RB              reduce using rule 14 (const_value -> CHAR .)
    TO              reduce using rule 14 (const_value -> CHAR .)
    DOWNTO          reduce using rule 14 (const_value -> CHAR .)
    COLON           reduce using rule 14 (const_value -> CHAR .)


state 71

    (11) const_expr -> NAME EQUAL const_value . SEMI

    SEMI            shift and go to state 118


state 72

    (12) const_value -> INTEGER .

    DOTDOT          reduce using rule 12 (const_value -> INTEGER .)
    MUL             reduce using rule 12 (const_value -> INTEGER .)
    DIV             reduce using rule 12 (const_value -> INTEGER .)
    MOD             reduce using rule 12 (const_value -> INTEGER .)
    AND             reduce using rule 12 (const_value -> INTEGER .)
    PLUS            reduce using rule 12 (const_value -> INTEGER .)
    MINUS           reduce using rule 12 (const_value -> INTEGER .)
    OR              reduce using rule 12 (const_value -> INTEGER .)
    GE              reduce using rule 12 (const_value -> INTEGER .)
    GT              reduce using rule 12 (const_value -> INTEGER .)
    LE              reduce using rule 12 (const_value -> INTEGER .)
    LT              reduce using rule 12 (const_value -> INTEGER .)
    EQUAL           reduce using rule 12 (const_value -> INTEGER .)
    UNEQUAL         reduce using rule 12 (const_value -> INTEGER .)
    RP              reduce using rule 12 (const_value -> INTEGER .)
    COMMA           reduce using rule 12 (const_value -> INTEGER .)
    SEMI            reduce using rule 12 (const_value -> INTEGER .)
    ELSE            reduce using rule 12 (const_value -> INTEGER .)
    OF              reduce using rule 12 (const_value -> INTEGER .)
    THEN            reduce using rule 12 (const_value -> INTEGER .)
    DO              reduce using rule 12 (const_value -> INTEGER .)
    RB              reduce using rule 12 (const_value -> INTEGER .)
    TO              reduce using rule 12 (const_value -> INTEGER .)
    DOWNTO          reduce using rule 12 (const_value -> INTEGER .)
    COLON           reduce using rule 12 (const_value -> INTEGER .)


state 73

    (16) const_value -> SYS_CON .

    DOTDOT          reduce using rule 16 (const_value -> SYS_CON .)
    MUL             reduce using rule 16 (const_value -> SYS_CON .)
    DIV             reduce using rule 16 (const_value -> SYS_CON .)
    MOD             reduce using rule 16 (const_value -> SYS_CON .)
    AND             reduce using rule 16 (const_value -> SYS_CON .)
    PLUS            reduce using rule 16 (const_value -> SYS_CON .)
    MINUS           reduce using rule 16 (const_value -> SYS_CON .)
    OR              reduce using rule 16 (const_value -> SYS_CON .)
    GE              reduce using rule 16 (const_value -> SYS_CON .)
    GT              reduce using rule 16 (const_value -> SYS_CON .)
    LE              reduce using rule 16 (const_value -> SYS_CON .)
    LT              reduce using rule 16 (const_value -> SYS_CON .)
    EQUAL           reduce using rule 16 (const_value -> SYS_CON .)
    UNEQUAL         reduce using rule 16 (const_value -> SYS_CON .)
    RP              reduce using rule 16 (const_value -> SYS_CON .)
    COMMA           reduce using rule 16 (const_value -> SYS_CON .)
    SEMI            reduce using rule 16 (const_value -> SYS_CON .)
    ELSE            reduce using rule 16 (const_value -> SYS_CON .)
    OF              reduce using rule 16 (const_value -> SYS_CON .)
    THEN            reduce using rule 16 (const_value -> SYS_CON .)
    DO              reduce using rule 16 (const_value -> SYS_CON .)
    RB              reduce using rule 16 (const_value -> SYS_CON .)
    TO              reduce using rule 16 (const_value -> SYS_CON .)
    DOWNTO          reduce using rule 16 (const_value -> SYS_CON .)
    COLON           reduce using rule 16 (const_value -> SYS_CON .)


state 74

    (15) const_value -> STRING .

    DOTDOT          reduce using rule 15 (const_value -> STRING .)
    MUL             reduce using rule 15 (const_value -> STRING .)
    DIV             reduce using rule 15 (const_value -> STRING .)
    MOD             reduce using rule 15 (const_value -> STRING .)
    AND             reduce using rule 15 (const_value -> STRING .)
    PLUS            reduce using rule 15 (const_value -> STRING .)
    MINUS           reduce using rule 15 (const_value -> STRING .)
    OR              reduce using rule 15 (const_value -> STRING .)
    GE              reduce using rule 15 (const_value -> STRING .)
    GT              reduce using rule 15 (const_value -> STRING .)
    LE              reduce using rule 15 (const_value -> STRING .)
    LT              reduce using rule 15 (const_value -> STRING .)
    EQUAL           reduce using rule 15 (const_value -> STRING .)
    UNEQUAL         reduce using rule 15 (const_value -> STRING .)
    RP              reduce using rule 15 (const_value -> STRING .)
    COMMA           reduce using rule 15 (const_value -> STRING .)
    SEMI            reduce using rule 15 (const_value -> STRING .)
    ELSE            reduce using rule 15 (const_value -> STRING .)
    OF              reduce using rule 15 (const_value -> STRING .)
    THEN            reduce using rule 15 (const_value -> STRING .)
    DO              reduce using rule 15 (const_value -> STRING .)
    RB              reduce using rule 15 (const_value -> STRING .)
    TO              reduce using rule 15 (const_value -> STRING .)
    DOWNTO          reduce using rule 15 (const_value -> STRING .)
    COLON           reduce using rule 15 (const_value -> STRING .)


state 75

    (83) proc_stmt -> READ LP . factor RP
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 79
    factor                         shift and go to state 119

state 76

    (82) proc_stmt -> SYS_PROC LP . expression_list RP
    (98) expression_list -> . expression_list COMMA expression
    (99) expression_list -> . expression
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    expression_list                shift and go to state 120
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 121

state 77

    (97) goto_stmt -> GOTO INTEGER .

    SEMI            reduce using rule 97 (goto_stmt -> GOTO INTEGER .)
    ELSE            reduce using rule 97 (goto_stmt -> GOTO INTEGER .)


state 78

    (118) factor -> SYS_FUNCT .
    (119) factor -> SYS_FUNCT . LP args_list RP

    MUL             reduce using rule 118 (factor -> SYS_FUNCT .)
    DIV             reduce using rule 118 (factor -> SYS_FUNCT .)
    MOD             reduce using rule 118 (factor -> SYS_FUNCT .)
    AND             reduce using rule 118 (factor -> SYS_FUNCT .)
    PLUS            reduce using rule 118 (factor -> SYS_FUNCT .)
    MINUS           reduce using rule 118 (factor -> SYS_FUNCT .)
    OR              reduce using rule 118 (factor -> SYS_FUNCT .)
    GE              reduce using rule 118 (factor -> SYS_FUNCT .)
    GT              reduce using rule 118 (factor -> SYS_FUNCT .)
    LE              reduce using rule 118 (factor -> SYS_FUNCT .)
    LT              reduce using rule 118 (factor -> SYS_FUNCT .)
    EQUAL           reduce using rule 118 (factor -> SYS_FUNCT .)
    UNEQUAL         reduce using rule 118 (factor -> SYS_FUNCT .)
    RP              reduce using rule 118 (factor -> SYS_FUNCT .)
    COMMA           reduce using rule 118 (factor -> SYS_FUNCT .)
    OF              reduce using rule 118 (factor -> SYS_FUNCT .)
    THEN            reduce using rule 118 (factor -> SYS_FUNCT .)
    DO              reduce using rule 118 (factor -> SYS_FUNCT .)
    RB              reduce using rule 118 (factor -> SYS_FUNCT .)
    SEMI            reduce using rule 118 (factor -> SYS_FUNCT .)
    ELSE            reduce using rule 118 (factor -> SYS_FUNCT .)
    TO              reduce using rule 118 (factor -> SYS_FUNCT .)
    DOWNTO          reduce using rule 118 (factor -> SYS_FUNCT .)
    LP              shift and go to state 122


state 79

    (120) factor -> const_value .

    MUL             reduce using rule 120 (factor -> const_value .)
    DIV             reduce using rule 120 (factor -> const_value .)
    MOD             reduce using rule 120 (factor -> const_value .)
    AND             reduce using rule 120 (factor -> const_value .)
    PLUS            reduce using rule 120 (factor -> const_value .)
    MINUS           reduce using rule 120 (factor -> const_value .)
    OR              reduce using rule 120 (factor -> const_value .)
    GE              reduce using rule 120 (factor -> const_value .)
    GT              reduce using rule 120 (factor -> const_value .)
    LE              reduce using rule 120 (factor -> const_value .)
    LT              reduce using rule 120 (factor -> const_value .)
    EQUAL           reduce using rule 120 (factor -> const_value .)
    UNEQUAL         reduce using rule 120 (factor -> const_value .)
    RP              reduce using rule 120 (factor -> const_value .)
    COMMA           reduce using rule 120 (factor -> const_value .)
    OF              reduce using rule 120 (factor -> const_value .)
    THEN            reduce using rule 120 (factor -> const_value .)
    DO              reduce using rule 120 (factor -> const_value .)
    RB              reduce using rule 120 (factor -> const_value .)
    SEMI            reduce using rule 120 (factor -> const_value .)
    ELSE            reduce using rule 120 (factor -> const_value .)
    TO              reduce using rule 120 (factor -> const_value .)
    DOWNTO          reduce using rule 120 (factor -> const_value .)


state 80

    (123) factor -> MINUS . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 79
    factor                         shift and go to state 123

state 81

    (121) factor -> LP . expression RP
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 124

state 82

    (115) term -> factor .

    MUL             reduce using rule 115 (term -> factor .)
    DIV             reduce using rule 115 (term -> factor .)
    MOD             reduce using rule 115 (term -> factor .)
    AND             reduce using rule 115 (term -> factor .)
    PLUS            reduce using rule 115 (term -> factor .)
    MINUS           reduce using rule 115 (term -> factor .)
    OR              reduce using rule 115 (term -> factor .)
    OF              reduce using rule 115 (term -> factor .)
    GE              reduce using rule 115 (term -> factor .)
    GT              reduce using rule 115 (term -> factor .)
    LE              reduce using rule 115 (term -> factor .)
    LT              reduce using rule 115 (term -> factor .)
    EQUAL           reduce using rule 115 (term -> factor .)
    UNEQUAL         reduce using rule 115 (term -> factor .)
    THEN            reduce using rule 115 (term -> factor .)
    DO              reduce using rule 115 (term -> factor .)
    RP              reduce using rule 115 (term -> factor .)
    COMMA           reduce using rule 115 (term -> factor .)
    RB              reduce using rule 115 (term -> factor .)
    SEMI            reduce using rule 115 (term -> factor .)
    ELSE            reduce using rule 115 (term -> factor .)
    TO              reduce using rule 115 (term -> factor .)
    DOWNTO          reduce using rule 115 (term -> factor .)


state 83

    (110) expr -> term .
    (111) term -> term . MUL factor
    (112) term -> term . DIV factor
    (113) term -> term . MOD factor
    (114) term -> term . AND factor

    PLUS            reduce using rule 110 (expr -> term .)
    MINUS           reduce using rule 110 (expr -> term .)
    OR              reduce using rule 110 (expr -> term .)
    OF              reduce using rule 110 (expr -> term .)
    GE              reduce using rule 110 (expr -> term .)
    GT              reduce using rule 110 (expr -> term .)
    LE              reduce using rule 110 (expr -> term .)
    LT              reduce using rule 110 (expr -> term .)
    EQUAL           reduce using rule 110 (expr -> term .)
    UNEQUAL         reduce using rule 110 (expr -> term .)
    THEN            reduce using rule 110 (expr -> term .)
    DO              reduce using rule 110 (expr -> term .)
    RP              reduce using rule 110 (expr -> term .)
    COMMA           reduce using rule 110 (expr -> term .)
    RB              reduce using rule 110 (expr -> term .)
    SEMI            reduce using rule 110 (expr -> term .)
    ELSE            reduce using rule 110 (expr -> term .)
    TO              reduce using rule 110 (expr -> term .)
    DOWNTO          reduce using rule 110 (expr -> term .)
    MUL             shift and go to state 126
    DIV             shift and go to state 127
    MOD             shift and go to state 128
    AND             shift and go to state 125


state 84

    (116) factor -> NAME .
    (117) factor -> NAME . LP args_list RP
    (124) factor -> NAME . LB expression RB
    (125) factor -> NAME . DOT NAME

    MUL             reduce using rule 116 (factor -> NAME .)
    DIV             reduce using rule 116 (factor -> NAME .)
    MOD             reduce using rule 116 (factor -> NAME .)
    AND             reduce using rule 116 (factor -> NAME .)
    PLUS            reduce using rule 116 (factor -> NAME .)
    MINUS           reduce using rule 116 (factor -> NAME .)
    OR              reduce using rule 116 (factor -> NAME .)
    GE              reduce using rule 116 (factor -> NAME .)
    GT              reduce using rule 116 (factor -> NAME .)
    LE              reduce using rule 116 (factor -> NAME .)
    LT              reduce using rule 116 (factor -> NAME .)
    EQUAL           reduce using rule 116 (factor -> NAME .)
    UNEQUAL         reduce using rule 116 (factor -> NAME .)
    RP              reduce using rule 116 (factor -> NAME .)
    COMMA           reduce using rule 116 (factor -> NAME .)
    OF              reduce using rule 116 (factor -> NAME .)
    THEN            reduce using rule 116 (factor -> NAME .)
    DO              reduce using rule 116 (factor -> NAME .)
    RB              reduce using rule 116 (factor -> NAME .)
    SEMI            reduce using rule 116 (factor -> NAME .)
    ELSE            reduce using rule 116 (factor -> NAME .)
    TO              reduce using rule 116 (factor -> NAME .)
    DOWNTO          reduce using rule 116 (factor -> NAME .)
    LP              shift and go to state 130
    LB              shift and go to state 129
    DOT             shift and go to state 131


state 85

    (106) expression -> expr .
    (107) expr -> expr . PLUS term
    (108) expr -> expr . MINUS term
    (109) expr -> expr . OR term

    THEN            reduce using rule 106 (expression -> expr .)
    GE              reduce using rule 106 (expression -> expr .)
    GT              reduce using rule 106 (expression -> expr .)
    LE              reduce using rule 106 (expression -> expr .)
    LT              reduce using rule 106 (expression -> expr .)
    EQUAL           reduce using rule 106 (expression -> expr .)
    UNEQUAL         reduce using rule 106 (expression -> expr .)
    SEMI            reduce using rule 106 (expression -> expr .)
    ELSE            reduce using rule 106 (expression -> expr .)
    DO              reduce using rule 106 (expression -> expr .)
    RB              reduce using rule 106 (expression -> expr .)
    RP              reduce using rule 106 (expression -> expr .)
    COMMA           reduce using rule 106 (expression -> expr .)
    OF              reduce using rule 106 (expression -> expr .)
    TO              reduce using rule 106 (expression -> expr .)
    DOWNTO          reduce using rule 106 (expression -> expr .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    OR              shift and go to state 134


state 86

    (122) factor -> NOT . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 79
    factor                         shift and go to state 135

state 87

    (92) case_stmt -> CASE expression . OF case_expr_list END
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    OF              shift and go to state 138
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 88

    (65) stmt -> INTEGER COLON . non_label_stmt
    (67) non_label_stmt -> . assign_stmt
    (68) non_label_stmt -> . proc_stmt
    (69) non_label_stmt -> . compound_stmt
    (70) non_label_stmt -> . if_stmt
    (71) non_label_stmt -> . repeat_stmt
    (72) non_label_stmt -> . while_stmt
    (73) non_label_stmt -> . for_stmt
    (74) non_label_stmt -> . case_stmt
    (75) non_label_stmt -> . goto_stmt
    (76) assign_stmt -> . NAME ASSIGN expression
    (77) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (78) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (79) proc_stmt -> . NAME
    (80) proc_stmt -> . NAME LP args_list RP
    (81) proc_stmt -> . SYS_PROC
    (82) proc_stmt -> . SYS_PROC LP expression_list RP
    (83) proc_stmt -> . READ LP factor RP
    (62) compound_stmt -> . BEGIN stmt_list END
    (84) if_stmt -> . IF expression THEN stmt else_clause
    (87) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (88) while_stmt -> . WHILE expression DO stmt
    (89) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (92) case_stmt -> . CASE expression OF case_expr_list END
    (97) goto_stmt -> . GOTO INTEGER

    NAME            shift and go to state 50
    SYS_PROC        shift and go to state 35
    READ            shift and go to state 33
    BEGIN           shift and go to state 12
    IF              shift and go to state 43
    REPEAT          shift and go to state 44
    WHILE           shift and go to state 51
    FOR             shift and go to state 46
    CASE            shift and go to state 37
    GOTO            shift and go to state 36

    case_stmt                      shift and go to state 38
    if_stmt                        shift and go to state 49
    for_stmt                       shift and go to state 48
    assign_stmt                    shift and go to state 40
    proc_stmt                      shift and go to state 34
    repeat_stmt                    shift and go to state 41
    while_stmt                     shift and go to state 53
    goto_stmt                      shift and go to state 54
    compound_stmt                  shift and go to state 52
    non_label_stmt                 shift and go to state 143

state 89

    (84) if_stmt -> IF expression . THEN stmt else_clause
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    THEN            shift and go to state 144
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 90

    (87) repeat_stmt -> REPEAT stmt_list . UNTIL expression
    (63) stmt_list -> stmt_list . stmt SEMI
    (65) stmt -> . INTEGER COLON non_label_stmt
    (66) stmt -> . non_label_stmt
    (67) non_label_stmt -> . assign_stmt
    (68) non_label_stmt -> . proc_stmt
    (69) non_label_stmt -> . compound_stmt
    (70) non_label_stmt -> . if_stmt
    (71) non_label_stmt -> . repeat_stmt
    (72) non_label_stmt -> . while_stmt
    (73) non_label_stmt -> . for_stmt
    (74) non_label_stmt -> . case_stmt
    (75) non_label_stmt -> . goto_stmt
    (76) assign_stmt -> . NAME ASSIGN expression
    (77) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (78) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (79) proc_stmt -> . NAME
    (80) proc_stmt -> . NAME LP args_list RP
    (81) proc_stmt -> . SYS_PROC
    (82) proc_stmt -> . SYS_PROC LP expression_list RP
    (83) proc_stmt -> . READ LP factor RP
    (62) compound_stmt -> . BEGIN stmt_list END
    (84) if_stmt -> . IF expression THEN stmt else_clause
    (87) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (88) while_stmt -> . WHILE expression DO stmt
    (89) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (92) case_stmt -> . CASE expression OF case_expr_list END
    (97) goto_stmt -> . GOTO INTEGER

    UNTIL           shift and go to state 145
    INTEGER         shift and go to state 42
    NAME            shift and go to state 50
    SYS_PROC        shift and go to state 35
    READ            shift and go to state 33
    BEGIN           shift and go to state 12
    IF              shift and go to state 43
    REPEAT          shift and go to state 44
    WHILE           shift and go to state 51
    FOR             shift and go to state 46
    CASE            shift and go to state 37
    GOTO            shift and go to state 36

    case_stmt                      shift and go to state 38
    non_label_stmt                 shift and go to state 39
    for_stmt                       shift and go to state 48
    stmt                           shift and go to state 47
    assign_stmt                    shift and go to state 40
    proc_stmt                      shift and go to state 34
    repeat_stmt                    shift and go to state 41
    while_stmt                     shift and go to state 53
    goto_stmt                      shift and go to state 54
    compound_stmt                  shift and go to state 52
    if_stmt                        shift and go to state 49

state 91

    (89) for_stmt -> FOR NAME . ASSIGN expression direction expression DO stmt

    ASSIGN          shift and go to state 146


state 92

    (63) stmt_list -> stmt_list stmt SEMI .

    UNTIL           reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)
    INTEGER         reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)
    NAME            reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)
    SYS_PROC        reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)
    READ            reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)
    BEGIN           reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)
    IF              reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)
    REPEAT          reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)
    WHILE           reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)
    FOR             reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)
    CASE            reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)
    GOTO            reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)
    END             reduce using rule 63 (stmt_list -> stmt_list stmt SEMI .)


state 93

    (77) assign_stmt -> NAME LB . expression RB ASSIGN expression
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 147

state 94

    (80) proc_stmt -> NAME LP . args_list RP
    (126) args_list -> . args_list COMMA expression
    (127) args_list -> . expression
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    args_list                      shift and go to state 148
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 149

state 95

    (76) assign_stmt -> NAME ASSIGN . expression
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 150

state 96

    (78) assign_stmt -> NAME DOT . NAME ASSIGN expression

    NAME            shift and go to state 151


state 97

    (88) while_stmt -> WHILE expression . DO stmt
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    DO              shift and go to state 152
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 98

    (50) function_head -> FUNCTION NAME . parameters COLON simple_type_decl
    (53) parameters -> . LP para_decl_list RP
    (54) parameters -> . empty
    (128) empty -> .

    LP              shift and go to state 155
    COLON           reduce using rule 128 (empty -> .)

    empty                          shift and go to state 154
    parameters                     shift and go to state 153

state 99

    (44) routine_part -> routine_part function_decl .

    FUNCTION        reduce using rule 44 (routine_part -> routine_part function_decl .)
    PROCEDURE       reduce using rule 44 (routine_part -> routine_part function_decl .)
    BEGIN           reduce using rule 44 (routine_part -> routine_part function_decl .)


state 100

    (45) routine_part -> routine_part procedure_decl .

    FUNCTION        reduce using rule 45 (routine_part -> routine_part procedure_decl .)
    PROCEDURE       reduce using rule 45 (routine_part -> routine_part procedure_decl .)
    BEGIN           reduce using rule 45 (routine_part -> routine_part procedure_decl .)


state 101

    (52) procedure_head -> PROCEDURE NAME . parameters
    (53) parameters -> . LP para_decl_list RP
    (54) parameters -> . empty
    (128) empty -> .

    LP              shift and go to state 155
    SEMI            reduce using rule 128 (empty -> .)

    empty                          shift and go to state 154
    parameters                     shift and go to state 156

state 102

    (49) function_decl -> function_head SEMI . sub_routine SEMI
    (4) sub_routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . empty
    (128) empty -> .

    CONST           reduce using rule 128 (empty -> .)
    TYPE            reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    FUNCTION        reduce using rule 128 (empty -> .)
    PROCEDURE       reduce using rule 128 (empty -> .)
    BEGIN           reduce using rule 128 (empty -> .)

    label_part                     shift and go to state 5
    routine_head                   shift and go to state 157
    sub_routine                    shift and go to state 158
    empty                          shift and go to state 4

state 103

    (51) procedure_decl -> procedure_head SEMI . sub_routine SEMI
    (4) sub_routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . empty
    (128) empty -> .

    CONST           reduce using rule 128 (empty -> .)
    TYPE            reduce using rule 128 (empty -> .)
    VAR             reduce using rule 128 (empty -> .)
    FUNCTION        reduce using rule 128 (empty -> .)
    PROCEDURE       reduce using rule 128 (empty -> .)
    BEGIN           reduce using rule 128 (empty -> .)

    label_part                     shift and go to state 5
    routine_head                   shift and go to state 157
    sub_routine                    shift and go to state 159
    empty                          shift and go to state 4

state 104

    (37) name_list -> name_list COMMA . NAME

    NAME            shift and go to state 160


state 105

    (43) var_decl -> name_list COLON . type_decl SEMI
    (22) type_decl -> . simple_type_decl
    (23) type_decl -> . array_type_decl
    (24) type_decl -> . record_type_decl
    (25) simple_type_decl -> . SYS_TYPE
    (26) simple_type_decl -> . NAME
    (27) simple_type_decl -> . LP name_list RP
    (28) simple_type_decl -> . const_value DOTDOT const_value
    (29) simple_type_decl -> . MINUS const_value DOTDOT const_value
    (30) simple_type_decl -> . MINUS const_value DOTDOT MINUS const_value
    (31) simple_type_decl -> . NAME DOTDOT NAME
    (32) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (33) record_type_decl -> . RECORD field_decl_list END
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 114
    NAME            shift and go to state 115
    LP              shift and go to state 110
    MINUS           shift and go to state 108
    ARRAY           shift and go to state 111
    RECORD          shift and go to state 109
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    array_type_decl                shift and go to state 112
    const_value                    shift and go to state 107
    record_type_decl               shift and go to state 116
    type_decl                      shift and go to state 161
    simple_type_decl               shift and go to state 117

state 106

    (41) var_decl_list -> var_decl_list var_decl .

    NAME            reduce using rule 41 (var_decl_list -> var_decl_list var_decl .)
    FUNCTION        reduce using rule 41 (var_decl_list -> var_decl_list var_decl .)
    PROCEDURE       reduce using rule 41 (var_decl_list -> var_decl_list var_decl .)
    BEGIN           reduce using rule 41 (var_decl_list -> var_decl_list var_decl .)


state 107

    (28) simple_type_decl -> const_value . DOTDOT const_value

    DOTDOT          shift and go to state 162


state 108

    (29) simple_type_decl -> MINUS . const_value DOTDOT const_value
    (30) simple_type_decl -> MINUS . const_value DOTDOT MINUS const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 163

state 109

    (33) record_type_decl -> RECORD . field_decl_list END
    (34) field_decl_list -> . field_decl_list field_decl
    (35) field_decl_list -> . field_decl
    (36) field_decl -> . name_list COLON type_decl SEMI
    (37) name_list -> . name_list COMMA NAME
    (38) name_list -> . NAME

    NAME            shift and go to state 63

    field_decl                     shift and go to state 164
    field_decl_list                shift and go to state 166
    name_list                      shift and go to state 165

state 110

    (27) simple_type_decl -> LP . name_list RP
    (37) name_list -> . name_list COMMA NAME
    (38) name_list -> . NAME

    NAME            shift and go to state 63

    name_list                      shift and go to state 167

state 111

    (32) array_type_decl -> ARRAY . LB simple_type_decl RB OF type_decl

    LB              shift and go to state 168


state 112

    (23) type_decl -> array_type_decl .

    SEMI            reduce using rule 23 (type_decl -> array_type_decl .)


state 113

    (21) type_definition -> NAME EQUAL type_decl . SEMI

    SEMI            shift and go to state 169


state 114

    (25) simple_type_decl -> SYS_TYPE .

    SEMI            reduce using rule 25 (simple_type_decl -> SYS_TYPE .)
    RB              reduce using rule 25 (simple_type_decl -> SYS_TYPE .)
    RP              reduce using rule 25 (simple_type_decl -> SYS_TYPE .)


state 115

    (26) simple_type_decl -> NAME .
    (31) simple_type_decl -> NAME . DOTDOT NAME

    SEMI            reduce using rule 26 (simple_type_decl -> NAME .)
    RB              reduce using rule 26 (simple_type_decl -> NAME .)
    RP              reduce using rule 26 (simple_type_decl -> NAME .)
    DOTDOT          shift and go to state 170


state 116

    (24) type_decl -> record_type_decl .

    SEMI            reduce using rule 24 (type_decl -> record_type_decl .)


state 117

    (22) type_decl -> simple_type_decl .

    SEMI            reduce using rule 22 (type_decl -> simple_type_decl .)


state 118

    (11) const_expr -> NAME EQUAL const_value SEMI .

    NAME            reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    TYPE            reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    VAR             reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    FUNCTION        reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    PROCEDURE       reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    BEGIN           reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)


state 119

    (83) proc_stmt -> READ LP factor . RP

    RP              shift and go to state 171


state 120

    (82) proc_stmt -> SYS_PROC LP expression_list . RP
    (98) expression_list -> expression_list . COMMA expression

    RP              shift and go to state 172
    COMMA           shift and go to state 173


state 121

    (99) expression_list -> expression .
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    RP              reduce using rule 99 (expression_list -> expression .)
    COMMA           reduce using rule 99 (expression_list -> expression .)
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 122

    (119) factor -> SYS_FUNCT LP . args_list RP
    (126) args_list -> . args_list COMMA expression
    (127) args_list -> . expression
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    args_list                      shift and go to state 174
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 149

state 123

    (123) factor -> MINUS factor .

    MUL             reduce using rule 123 (factor -> MINUS factor .)
    DIV             reduce using rule 123 (factor -> MINUS factor .)
    MOD             reduce using rule 123 (factor -> MINUS factor .)
    AND             reduce using rule 123 (factor -> MINUS factor .)
    PLUS            reduce using rule 123 (factor -> MINUS factor .)
    MINUS           reduce using rule 123 (factor -> MINUS factor .)
    OR              reduce using rule 123 (factor -> MINUS factor .)
    GE              reduce using rule 123 (factor -> MINUS factor .)
    GT              reduce using rule 123 (factor -> MINUS factor .)
    LE              reduce using rule 123 (factor -> MINUS factor .)
    LT              reduce using rule 123 (factor -> MINUS factor .)
    EQUAL           reduce using rule 123 (factor -> MINUS factor .)
    UNEQUAL         reduce using rule 123 (factor -> MINUS factor .)
    RP              reduce using rule 123 (factor -> MINUS factor .)
    COMMA           reduce using rule 123 (factor -> MINUS factor .)
    OF              reduce using rule 123 (factor -> MINUS factor .)
    THEN            reduce using rule 123 (factor -> MINUS factor .)
    DO              reduce using rule 123 (factor -> MINUS factor .)
    RB              reduce using rule 123 (factor -> MINUS factor .)
    SEMI            reduce using rule 123 (factor -> MINUS factor .)
    ELSE            reduce using rule 123 (factor -> MINUS factor .)
    TO              reduce using rule 123 (factor -> MINUS factor .)
    DOWNTO          reduce using rule 123 (factor -> MINUS factor .)


state 124

    (121) factor -> LP expression . RP
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    RP              shift and go to state 175
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 125

    (114) term -> term AND . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 79
    factor                         shift and go to state 176

state 126

    (111) term -> term MUL . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 79
    factor                         shift and go to state 177

state 127

    (112) term -> term DIV . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 79
    factor                         shift and go to state 178

state 128

    (113) term -> term MOD . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 79
    factor                         shift and go to state 179

state 129

    (124) factor -> NAME LB . expression RB
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 180

state 130

    (117) factor -> NAME LP . args_list RP
    (126) args_list -> . args_list COMMA expression
    (127) args_list -> . expression
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    args_list                      shift and go to state 181
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 149

state 131

    (125) factor -> NAME DOT . NAME

    NAME            shift and go to state 182


state 132

    (107) expr -> expr PLUS . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 183
    const_value                    shift and go to state 79
    factor                         shift and go to state 82

state 133

    (108) expr -> expr MINUS . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 184
    const_value                    shift and go to state 79
    factor                         shift and go to state 82

state 134

    (109) expr -> expr OR . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 185
    const_value                    shift and go to state 79
    factor                         shift and go to state 82

state 135

    (122) factor -> NOT factor .

    MUL             reduce using rule 122 (factor -> NOT factor .)
    DIV             reduce using rule 122 (factor -> NOT factor .)
    MOD             reduce using rule 122 (factor -> NOT factor .)
    AND             reduce using rule 122 (factor -> NOT factor .)
    PLUS            reduce using rule 122 (factor -> NOT factor .)
    MINUS           reduce using rule 122 (factor -> NOT factor .)
    OR              reduce using rule 122 (factor -> NOT factor .)
    GE              reduce using rule 122 (factor -> NOT factor .)
    GT              reduce using rule 122 (factor -> NOT factor .)
    LE              reduce using rule 122 (factor -> NOT factor .)
    LT              reduce using rule 122 (factor -> NOT factor .)
    EQUAL           reduce using rule 122 (factor -> NOT factor .)
    UNEQUAL         reduce using rule 122 (factor -> NOT factor .)
    RP              reduce using rule 122 (factor -> NOT factor .)
    COMMA           reduce using rule 122 (factor -> NOT factor .)
    OF              reduce using rule 122 (factor -> NOT factor .)
    THEN            reduce using rule 122 (factor -> NOT factor .)
    DO              reduce using rule 122 (factor -> NOT factor .)
    RB              reduce using rule 122 (factor -> NOT factor .)
    SEMI            reduce using rule 122 (factor -> NOT factor .)
    ELSE            reduce using rule 122 (factor -> NOT factor .)
    TO              reduce using rule 122 (factor -> NOT factor .)
    DOWNTO          reduce using rule 122 (factor -> NOT factor .)


state 136

    (101) expression -> expression GT . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 186
    const_value                    shift and go to state 79
    factor                         shift and go to state 82

state 137

    (104) expression -> expression EQUAL . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 187
    const_value                    shift and go to state 79
    factor                         shift and go to state 82

state 138

    (92) case_stmt -> CASE expression OF . case_expr_list END
    (93) case_expr_list -> . case_expr_list case_expr
    (94) case_expr_list -> . case_expr
    (95) case_expr -> . const_value COLON stmt SEMI
    (96) case_expr -> . ID COLON stmt SEMI
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    ID              shift and go to state 191
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 190
    case_expr_list                 shift and go to state 189
    case_expr                      shift and go to state 188

state 139

    (102) expression -> expression LE . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 192
    const_value                    shift and go to state 79
    factor                         shift and go to state 82

state 140

    (103) expression -> expression LT . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 193
    const_value                    shift and go to state 79
    factor                         shift and go to state 82

state 141

    (100) expression -> expression GE . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 194
    const_value                    shift and go to state 79
    factor                         shift and go to state 82

state 142

    (105) expression -> expression UNEQUAL . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 195
    const_value                    shift and go to state 79
    factor                         shift and go to state 82

state 143

    (65) stmt -> INTEGER COLON non_label_stmt .

    SEMI            reduce using rule 65 (stmt -> INTEGER COLON non_label_stmt .)
    ELSE            reduce using rule 65 (stmt -> INTEGER COLON non_label_stmt .)


state 144

    (84) if_stmt -> IF expression THEN . stmt else_clause
    (65) stmt -> . INTEGER COLON non_label_stmt
    (66) stmt -> . non_label_stmt
    (67) non_label_stmt -> . assign_stmt
    (68) non_label_stmt -> . proc_stmt
    (69) non_label_stmt -> . compound_stmt
    (70) non_label_stmt -> . if_stmt
    (71) non_label_stmt -> . repeat_stmt
    (72) non_label_stmt -> . while_stmt
    (73) non_label_stmt -> . for_stmt
    (74) non_label_stmt -> . case_stmt
    (75) non_label_stmt -> . goto_stmt
    (76) assign_stmt -> . NAME ASSIGN expression
    (77) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (78) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (79) proc_stmt -> . NAME
    (80) proc_stmt -> . NAME LP args_list RP
    (81) proc_stmt -> . SYS_PROC
    (82) proc_stmt -> . SYS_PROC LP expression_list RP
    (83) proc_stmt -> . READ LP factor RP
    (62) compound_stmt -> . BEGIN stmt_list END
    (84) if_stmt -> . IF expression THEN stmt else_clause
    (87) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (88) while_stmt -> . WHILE expression DO stmt
    (89) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (92) case_stmt -> . CASE expression OF case_expr_list END
    (97) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 42
    NAME            shift and go to state 50
    SYS_PROC        shift and go to state 35
    READ            shift and go to state 33
    BEGIN           shift and go to state 12
    IF              shift and go to state 43
    REPEAT          shift and go to state 44
    WHILE           shift and go to state 51
    FOR             shift and go to state 46
    CASE            shift and go to state 37
    GOTO            shift and go to state 36

    case_stmt                      shift and go to state 38
    non_label_stmt                 shift and go to state 39
    for_stmt                       shift and go to state 48
    stmt                           shift and go to state 196
    assign_stmt                    shift and go to state 40
    proc_stmt                      shift and go to state 34
    repeat_stmt                    shift and go to state 41
    while_stmt                     shift and go to state 53
    goto_stmt                      shift and go to state 54
    compound_stmt                  shift and go to state 52
    if_stmt                        shift and go to state 49

state 145

    (87) repeat_stmt -> REPEAT stmt_list UNTIL . expression
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 197

state 146

    (89) for_stmt -> FOR NAME ASSIGN . expression direction expression DO stmt
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    expr                           shift and go to state 85
    term                           shift and go to state 83
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 198

state 147

    (77) assign_stmt -> NAME LB expression . RB ASSIGN expression
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    RB              shift and go to state 199
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 148

    (80) proc_stmt -> NAME LP args_list . RP
    (126) args_list -> args_list . COMMA expression

    RP              shift and go to state 200
    COMMA           shift and go to state 201


state 149

    (127) args_list -> expression .
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    RP              reduce using rule 127 (args_list -> expression .)
    COMMA           reduce using rule 127 (args_list -> expression .)
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 150

    (76) assign_stmt -> NAME ASSIGN expression .
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 76 (assign_stmt -> NAME ASSIGN expression .)
    ELSE            reduce using rule 76 (assign_stmt -> NAME ASSIGN expression .)
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 151

    (78) assign_stmt -> NAME DOT NAME . ASSIGN expression

    ASSIGN          shift and go to state 202


state 152

    (88) while_stmt -> WHILE expression DO . stmt
    (65) stmt -> . INTEGER COLON non_label_stmt
    (66) stmt -> . non_label_stmt
    (67) non_label_stmt -> . assign_stmt
    (68) non_label_stmt -> . proc_stmt
    (69) non_label_stmt -> . compound_stmt
    (70) non_label_stmt -> . if_stmt
    (71) non_label_stmt -> . repeat_stmt
    (72) non_label_stmt -> . while_stmt
    (73) non_label_stmt -> . for_stmt
    (74) non_label_stmt -> . case_stmt
    (75) non_label_stmt -> . goto_stmt
    (76) assign_stmt -> . NAME ASSIGN expression
    (77) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (78) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (79) proc_stmt -> . NAME
    (80) proc_stmt -> . NAME LP args_list RP
    (81) proc_stmt -> . SYS_PROC
    (82) proc_stmt -> . SYS_PROC LP expression_list RP
    (83) proc_stmt -> . READ LP factor RP
    (62) compound_stmt -> . BEGIN stmt_list END
    (84) if_stmt -> . IF expression THEN stmt else_clause
    (87) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (88) while_stmt -> . WHILE expression DO stmt
    (89) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (92) case_stmt -> . CASE expression OF case_expr_list END
    (97) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 42
    NAME            shift and go to state 50
    SYS_PROC        shift and go to state 35
    READ            shift and go to state 33
    BEGIN           shift and go to state 12
    IF              shift and go to state 43
    REPEAT          shift and go to state 44
    WHILE           shift and go to state 51
    FOR             shift and go to state 46
    CASE            shift and go to state 37
    GOTO            shift and go to state 36

    case_stmt                      shift and go to state 38
    non_label_stmt                 shift and go to state 39
    for_stmt                       shift and go to state 48
    stmt                           shift and go to state 203
    assign_stmt                    shift and go to state 40
    proc_stmt                      shift and go to state 34
    repeat_stmt                    shift and go to state 41
    while_stmt                     shift and go to state 53
    goto_stmt                      shift and go to state 54
    compound_stmt                  shift and go to state 52
    if_stmt                        shift and go to state 49

state 153

    (50) function_head -> FUNCTION NAME parameters . COLON simple_type_decl

    COLON           shift and go to state 204


state 154

    (54) parameters -> empty .

    SEMI            reduce using rule 54 (parameters -> empty .)
    COLON           reduce using rule 54 (parameters -> empty .)


state 155

    (53) parameters -> LP . para_decl_list RP
    (55) para_decl_list -> . para_decl_list SEMI para_type_list
    (56) para_decl_list -> . para_type_list
    (57) para_type_list -> . var_para_list COLON simple_type_decl
    (58) para_type_list -> . val_para_list COLON simple_type_decl
    (59) var_para_list -> . VAR name_list
    (60) val_para_list -> . name_list
    (37) name_list -> . name_list COMMA NAME
    (38) name_list -> . NAME

    VAR             shift and go to state 208
    NAME            shift and go to state 63

    name_list                      shift and go to state 206
    var_para_list                  shift and go to state 207
    para_type_list                 shift and go to state 209
    val_para_list                  shift and go to state 205
    para_decl_list                 shift and go to state 210

state 156

    (52) procedure_head -> PROCEDURE NAME parameters .

    SEMI            reduce using rule 52 (procedure_head -> PROCEDURE NAME parameters .)


state 157

    (4) sub_routine -> routine_head . routine_body
    (61) routine_body -> . compound_stmt
    (62) compound_stmt -> . BEGIN stmt_list END

    BEGIN           shift and go to state 12

    routine_body                   shift and go to state 211
    compound_stmt                  shift and go to state 14

state 158

    (49) function_decl -> function_head SEMI sub_routine . SEMI

    SEMI            shift and go to state 212


state 159

    (51) procedure_decl -> procedure_head SEMI sub_routine . SEMI

    SEMI            shift and go to state 213


state 160

    (37) name_list -> name_list COMMA NAME .

    COLON           reduce using rule 37 (name_list -> name_list COMMA NAME .)
    COMMA           reduce using rule 37 (name_list -> name_list COMMA NAME .)
    RP              reduce using rule 37 (name_list -> name_list COMMA NAME .)


state 161

    (43) var_decl -> name_list COLON type_decl . SEMI

    SEMI            shift and go to state 214


state 162

    (28) simple_type_decl -> const_value DOTDOT . const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 215

state 163

    (29) simple_type_decl -> MINUS const_value . DOTDOT const_value
    (30) simple_type_decl -> MINUS const_value . DOTDOT MINUS const_value

    DOTDOT          shift and go to state 216


state 164

    (35) field_decl_list -> field_decl .

    END             reduce using rule 35 (field_decl_list -> field_decl .)
    NAME            reduce using rule 35 (field_decl_list -> field_decl .)


state 165

    (36) field_decl -> name_list . COLON type_decl SEMI
    (37) name_list -> name_list . COMMA NAME

    COLON           shift and go to state 217
    COMMA           shift and go to state 104


state 166

    (33) record_type_decl -> RECORD field_decl_list . END
    (34) field_decl_list -> field_decl_list . field_decl
    (36) field_decl -> . name_list COLON type_decl SEMI
    (37) name_list -> . name_list COMMA NAME
    (38) name_list -> . NAME

    END             shift and go to state 218
    NAME            shift and go to state 63

    field_decl                     shift and go to state 219
    name_list                      shift and go to state 165

state 167

    (27) simple_type_decl -> LP name_list . RP
    (37) name_list -> name_list . COMMA NAME

    RP              shift and go to state 220
    COMMA           shift and go to state 104


state 168

    (32) array_type_decl -> ARRAY LB . simple_type_decl RB OF type_decl
    (25) simple_type_decl -> . SYS_TYPE
    (26) simple_type_decl -> . NAME
    (27) simple_type_decl -> . LP name_list RP
    (28) simple_type_decl -> . const_value DOTDOT const_value
    (29) simple_type_decl -> . MINUS const_value DOTDOT const_value
    (30) simple_type_decl -> . MINUS const_value DOTDOT MINUS const_value
    (31) simple_type_decl -> . NAME DOTDOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 114
    NAME            shift and go to state 115
    LP              shift and go to state 110
    MINUS           shift and go to state 108
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 107
    simple_type_decl               shift and go to state 221

state 169

    (21) type_definition -> NAME EQUAL type_decl SEMI .

    NAME            reduce using rule 21 (type_definition -> NAME EQUAL type_decl SEMI .)
    VAR             reduce using rule 21 (type_definition -> NAME EQUAL type_decl SEMI .)
    FUNCTION        reduce using rule 21 (type_definition -> NAME EQUAL type_decl SEMI .)
    PROCEDURE       reduce using rule 21 (type_definition -> NAME EQUAL type_decl SEMI .)
    BEGIN           reduce using rule 21 (type_definition -> NAME EQUAL type_decl SEMI .)


state 170

    (31) simple_type_decl -> NAME DOTDOT . NAME

    NAME            shift and go to state 222


state 171

    (83) proc_stmt -> READ LP factor RP .

    SEMI            reduce using rule 83 (proc_stmt -> READ LP factor RP .)
    ELSE            reduce using rule 83 (proc_stmt -> READ LP factor RP .)


state 172

    (82) proc_stmt -> SYS_PROC LP expression_list RP .

    SEMI            reduce using rule 82 (proc_stmt -> SYS_PROC LP expression_list RP .)
    ELSE            reduce using rule 82 (proc_stmt -> SYS_PROC LP expression_list RP .)


state 173

    (98) expression_list -> expression_list COMMA . expression
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 223

state 174

    (119) factor -> SYS_FUNCT LP args_list . RP
    (126) args_list -> args_list . COMMA expression

    RP              shift and go to state 224
    COMMA           shift and go to state 201


state 175

    (121) factor -> LP expression RP .

    MUL             reduce using rule 121 (factor -> LP expression RP .)
    DIV             reduce using rule 121 (factor -> LP expression RP .)
    MOD             reduce using rule 121 (factor -> LP expression RP .)
    AND             reduce using rule 121 (factor -> LP expression RP .)
    PLUS            reduce using rule 121 (factor -> LP expression RP .)
    MINUS           reduce using rule 121 (factor -> LP expression RP .)
    OR              reduce using rule 121 (factor -> LP expression RP .)
    GE              reduce using rule 121 (factor -> LP expression RP .)
    GT              reduce using rule 121 (factor -> LP expression RP .)
    LE              reduce using rule 121 (factor -> LP expression RP .)
    LT              reduce using rule 121 (factor -> LP expression RP .)
    EQUAL           reduce using rule 121 (factor -> LP expression RP .)
    UNEQUAL         reduce using rule 121 (factor -> LP expression RP .)
    RP              reduce using rule 121 (factor -> LP expression RP .)
    COMMA           reduce using rule 121 (factor -> LP expression RP .)
    OF              reduce using rule 121 (factor -> LP expression RP .)
    THEN            reduce using rule 121 (factor -> LP expression RP .)
    DO              reduce using rule 121 (factor -> LP expression RP .)
    RB              reduce using rule 121 (factor -> LP expression RP .)
    SEMI            reduce using rule 121 (factor -> LP expression RP .)
    ELSE            reduce using rule 121 (factor -> LP expression RP .)
    TO              reduce using rule 121 (factor -> LP expression RP .)
    DOWNTO          reduce using rule 121 (factor -> LP expression RP .)


state 176

    (114) term -> term AND factor .

    MUL             reduce using rule 114 (term -> term AND factor .)
    DIV             reduce using rule 114 (term -> term AND factor .)
    MOD             reduce using rule 114 (term -> term AND factor .)
    AND             reduce using rule 114 (term -> term AND factor .)
    PLUS            reduce using rule 114 (term -> term AND factor .)
    MINUS           reduce using rule 114 (term -> term AND factor .)
    OR              reduce using rule 114 (term -> term AND factor .)
    OF              reduce using rule 114 (term -> term AND factor .)
    GE              reduce using rule 114 (term -> term AND factor .)
    GT              reduce using rule 114 (term -> term AND factor .)
    LE              reduce using rule 114 (term -> term AND factor .)
    LT              reduce using rule 114 (term -> term AND factor .)
    EQUAL           reduce using rule 114 (term -> term AND factor .)
    UNEQUAL         reduce using rule 114 (term -> term AND factor .)
    THEN            reduce using rule 114 (term -> term AND factor .)
    DO              reduce using rule 114 (term -> term AND factor .)
    RP              reduce using rule 114 (term -> term AND factor .)
    COMMA           reduce using rule 114 (term -> term AND factor .)
    RB              reduce using rule 114 (term -> term AND factor .)
    SEMI            reduce using rule 114 (term -> term AND factor .)
    ELSE            reduce using rule 114 (term -> term AND factor .)
    TO              reduce using rule 114 (term -> term AND factor .)
    DOWNTO          reduce using rule 114 (term -> term AND factor .)


state 177

    (111) term -> term MUL factor .

    MUL             reduce using rule 111 (term -> term MUL factor .)
    DIV             reduce using rule 111 (term -> term MUL factor .)
    MOD             reduce using rule 111 (term -> term MUL factor .)
    AND             reduce using rule 111 (term -> term MUL factor .)
    PLUS            reduce using rule 111 (term -> term MUL factor .)
    MINUS           reduce using rule 111 (term -> term MUL factor .)
    OR              reduce using rule 111 (term -> term MUL factor .)
    OF              reduce using rule 111 (term -> term MUL factor .)
    GE              reduce using rule 111 (term -> term MUL factor .)
    GT              reduce using rule 111 (term -> term MUL factor .)
    LE              reduce using rule 111 (term -> term MUL factor .)
    LT              reduce using rule 111 (term -> term MUL factor .)
    EQUAL           reduce using rule 111 (term -> term MUL factor .)
    UNEQUAL         reduce using rule 111 (term -> term MUL factor .)
    THEN            reduce using rule 111 (term -> term MUL factor .)
    DO              reduce using rule 111 (term -> term MUL factor .)
    RP              reduce using rule 111 (term -> term MUL factor .)
    COMMA           reduce using rule 111 (term -> term MUL factor .)
    RB              reduce using rule 111 (term -> term MUL factor .)
    SEMI            reduce using rule 111 (term -> term MUL factor .)
    ELSE            reduce using rule 111 (term -> term MUL factor .)
    TO              reduce using rule 111 (term -> term MUL factor .)
    DOWNTO          reduce using rule 111 (term -> term MUL factor .)


state 178

    (112) term -> term DIV factor .

    MUL             reduce using rule 112 (term -> term DIV factor .)
    DIV             reduce using rule 112 (term -> term DIV factor .)
    MOD             reduce using rule 112 (term -> term DIV factor .)
    AND             reduce using rule 112 (term -> term DIV factor .)
    PLUS            reduce using rule 112 (term -> term DIV factor .)
    MINUS           reduce using rule 112 (term -> term DIV factor .)
    OR              reduce using rule 112 (term -> term DIV factor .)
    OF              reduce using rule 112 (term -> term DIV factor .)
    GE              reduce using rule 112 (term -> term DIV factor .)
    GT              reduce using rule 112 (term -> term DIV factor .)
    LE              reduce using rule 112 (term -> term DIV factor .)
    LT              reduce using rule 112 (term -> term DIV factor .)
    EQUAL           reduce using rule 112 (term -> term DIV factor .)
    UNEQUAL         reduce using rule 112 (term -> term DIV factor .)
    THEN            reduce using rule 112 (term -> term DIV factor .)
    DO              reduce using rule 112 (term -> term DIV factor .)
    RP              reduce using rule 112 (term -> term DIV factor .)
    COMMA           reduce using rule 112 (term -> term DIV factor .)
    RB              reduce using rule 112 (term -> term DIV factor .)
    SEMI            reduce using rule 112 (term -> term DIV factor .)
    ELSE            reduce using rule 112 (term -> term DIV factor .)
    TO              reduce using rule 112 (term -> term DIV factor .)
    DOWNTO          reduce using rule 112 (term -> term DIV factor .)


state 179

    (113) term -> term MOD factor .

    MUL             reduce using rule 113 (term -> term MOD factor .)
    DIV             reduce using rule 113 (term -> term MOD factor .)
    MOD             reduce using rule 113 (term -> term MOD factor .)
    AND             reduce using rule 113 (term -> term MOD factor .)
    PLUS            reduce using rule 113 (term -> term MOD factor .)
    MINUS           reduce using rule 113 (term -> term MOD factor .)
    OR              reduce using rule 113 (term -> term MOD factor .)
    OF              reduce using rule 113 (term -> term MOD factor .)
    GE              reduce using rule 113 (term -> term MOD factor .)
    GT              reduce using rule 113 (term -> term MOD factor .)
    LE              reduce using rule 113 (term -> term MOD factor .)
    LT              reduce using rule 113 (term -> term MOD factor .)
    EQUAL           reduce using rule 113 (term -> term MOD factor .)
    UNEQUAL         reduce using rule 113 (term -> term MOD factor .)
    THEN            reduce using rule 113 (term -> term MOD factor .)
    DO              reduce using rule 113 (term -> term MOD factor .)
    RP              reduce using rule 113 (term -> term MOD factor .)
    COMMA           reduce using rule 113 (term -> term MOD factor .)
    RB              reduce using rule 113 (term -> term MOD factor .)
    SEMI            reduce using rule 113 (term -> term MOD factor .)
    ELSE            reduce using rule 113 (term -> term MOD factor .)
    TO              reduce using rule 113 (term -> term MOD factor .)
    DOWNTO          reduce using rule 113 (term -> term MOD factor .)


state 180

    (124) factor -> NAME LB expression . RB
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    RB              shift and go to state 225
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 181

    (117) factor -> NAME LP args_list . RP
    (126) args_list -> args_list . COMMA expression

    RP              shift and go to state 226
    COMMA           shift and go to state 201


state 182

    (125) factor -> NAME DOT NAME .

    MUL             reduce using rule 125 (factor -> NAME DOT NAME .)
    DIV             reduce using rule 125 (factor -> NAME DOT NAME .)
    MOD             reduce using rule 125 (factor -> NAME DOT NAME .)
    AND             reduce using rule 125 (factor -> NAME DOT NAME .)
    PLUS            reduce using rule 125 (factor -> NAME DOT NAME .)
    MINUS           reduce using rule 125 (factor -> NAME DOT NAME .)
    OR              reduce using rule 125 (factor -> NAME DOT NAME .)
    GE              reduce using rule 125 (factor -> NAME DOT NAME .)
    GT              reduce using rule 125 (factor -> NAME DOT NAME .)
    LE              reduce using rule 125 (factor -> NAME DOT NAME .)
    LT              reduce using rule 125 (factor -> NAME DOT NAME .)
    EQUAL           reduce using rule 125 (factor -> NAME DOT NAME .)
    UNEQUAL         reduce using rule 125 (factor -> NAME DOT NAME .)
    RP              reduce using rule 125 (factor -> NAME DOT NAME .)
    COMMA           reduce using rule 125 (factor -> NAME DOT NAME .)
    OF              reduce using rule 125 (factor -> NAME DOT NAME .)
    THEN            reduce using rule 125 (factor -> NAME DOT NAME .)
    DO              reduce using rule 125 (factor -> NAME DOT NAME .)
    RB              reduce using rule 125 (factor -> NAME DOT NAME .)
    SEMI            reduce using rule 125 (factor -> NAME DOT NAME .)
    ELSE            reduce using rule 125 (factor -> NAME DOT NAME .)
    TO              reduce using rule 125 (factor -> NAME DOT NAME .)
    DOWNTO          reduce using rule 125 (factor -> NAME DOT NAME .)


state 183

    (107) expr -> expr PLUS term .
    (111) term -> term . MUL factor
    (112) term -> term . DIV factor
    (113) term -> term . MOD factor
    (114) term -> term . AND factor

    PLUS            reduce using rule 107 (expr -> expr PLUS term .)
    MINUS           reduce using rule 107 (expr -> expr PLUS term .)
    OR              reduce using rule 107 (expr -> expr PLUS term .)
    OF              reduce using rule 107 (expr -> expr PLUS term .)
    GE              reduce using rule 107 (expr -> expr PLUS term .)
    GT              reduce using rule 107 (expr -> expr PLUS term .)
    LE              reduce using rule 107 (expr -> expr PLUS term .)
    LT              reduce using rule 107 (expr -> expr PLUS term .)
    EQUAL           reduce using rule 107 (expr -> expr PLUS term .)
    UNEQUAL         reduce using rule 107 (expr -> expr PLUS term .)
    THEN            reduce using rule 107 (expr -> expr PLUS term .)
    DO              reduce using rule 107 (expr -> expr PLUS term .)
    RP              reduce using rule 107 (expr -> expr PLUS term .)
    COMMA           reduce using rule 107 (expr -> expr PLUS term .)
    RB              reduce using rule 107 (expr -> expr PLUS term .)
    SEMI            reduce using rule 107 (expr -> expr PLUS term .)
    ELSE            reduce using rule 107 (expr -> expr PLUS term .)
    TO              reduce using rule 107 (expr -> expr PLUS term .)
    DOWNTO          reduce using rule 107 (expr -> expr PLUS term .)
    MUL             shift and go to state 126
    DIV             shift and go to state 127
    MOD             shift and go to state 128
    AND             shift and go to state 125


state 184

    (108) expr -> expr MINUS term .
    (111) term -> term . MUL factor
    (112) term -> term . DIV factor
    (113) term -> term . MOD factor
    (114) term -> term . AND factor

    PLUS            reduce using rule 108 (expr -> expr MINUS term .)
    MINUS           reduce using rule 108 (expr -> expr MINUS term .)
    OR              reduce using rule 108 (expr -> expr MINUS term .)
    OF              reduce using rule 108 (expr -> expr MINUS term .)
    GE              reduce using rule 108 (expr -> expr MINUS term .)
    GT              reduce using rule 108 (expr -> expr MINUS term .)
    LE              reduce using rule 108 (expr -> expr MINUS term .)
    LT              reduce using rule 108 (expr -> expr MINUS term .)
    EQUAL           reduce using rule 108 (expr -> expr MINUS term .)
    UNEQUAL         reduce using rule 108 (expr -> expr MINUS term .)
    THEN            reduce using rule 108 (expr -> expr MINUS term .)
    DO              reduce using rule 108 (expr -> expr MINUS term .)
    RP              reduce using rule 108 (expr -> expr MINUS term .)
    COMMA           reduce using rule 108 (expr -> expr MINUS term .)
    RB              reduce using rule 108 (expr -> expr MINUS term .)
    SEMI            reduce using rule 108 (expr -> expr MINUS term .)
    ELSE            reduce using rule 108 (expr -> expr MINUS term .)
    TO              reduce using rule 108 (expr -> expr MINUS term .)
    DOWNTO          reduce using rule 108 (expr -> expr MINUS term .)
    MUL             shift and go to state 126
    DIV             shift and go to state 127
    MOD             shift and go to state 128
    AND             shift and go to state 125


state 185

    (109) expr -> expr OR term .
    (111) term -> term . MUL factor
    (112) term -> term . DIV factor
    (113) term -> term . MOD factor
    (114) term -> term . AND factor

    PLUS            reduce using rule 109 (expr -> expr OR term .)
    MINUS           reduce using rule 109 (expr -> expr OR term .)
    OR              reduce using rule 109 (expr -> expr OR term .)
    OF              reduce using rule 109 (expr -> expr OR term .)
    GE              reduce using rule 109 (expr -> expr OR term .)
    GT              reduce using rule 109 (expr -> expr OR term .)
    LE              reduce using rule 109 (expr -> expr OR term .)
    LT              reduce using rule 109 (expr -> expr OR term .)
    EQUAL           reduce using rule 109 (expr -> expr OR term .)
    UNEQUAL         reduce using rule 109 (expr -> expr OR term .)
    THEN            reduce using rule 109 (expr -> expr OR term .)
    DO              reduce using rule 109 (expr -> expr OR term .)
    RP              reduce using rule 109 (expr -> expr OR term .)
    COMMA           reduce using rule 109 (expr -> expr OR term .)
    RB              reduce using rule 109 (expr -> expr OR term .)
    SEMI            reduce using rule 109 (expr -> expr OR term .)
    ELSE            reduce using rule 109 (expr -> expr OR term .)
    TO              reduce using rule 109 (expr -> expr OR term .)
    DOWNTO          reduce using rule 109 (expr -> expr OR term .)
    MUL             shift and go to state 126
    DIV             shift and go to state 127
    MOD             shift and go to state 128
    AND             shift and go to state 125


state 186

    (101) expression -> expression GT expr .
    (107) expr -> expr . PLUS term
    (108) expr -> expr . MINUS term
    (109) expr -> expr . OR term

    THEN            reduce using rule 101 (expression -> expression GT expr .)
    GE              reduce using rule 101 (expression -> expression GT expr .)
    GT              reduce using rule 101 (expression -> expression GT expr .)
    LE              reduce using rule 101 (expression -> expression GT expr .)
    LT              reduce using rule 101 (expression -> expression GT expr .)
    EQUAL           reduce using rule 101 (expression -> expression GT expr .)
    UNEQUAL         reduce using rule 101 (expression -> expression GT expr .)
    SEMI            reduce using rule 101 (expression -> expression GT expr .)
    ELSE            reduce using rule 101 (expression -> expression GT expr .)
    DO              reduce using rule 101 (expression -> expression GT expr .)
    RB              reduce using rule 101 (expression -> expression GT expr .)
    RP              reduce using rule 101 (expression -> expression GT expr .)
    COMMA           reduce using rule 101 (expression -> expression GT expr .)
    OF              reduce using rule 101 (expression -> expression GT expr .)
    TO              reduce using rule 101 (expression -> expression GT expr .)
    DOWNTO          reduce using rule 101 (expression -> expression GT expr .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    OR              shift and go to state 134


state 187

    (104) expression -> expression EQUAL expr .
    (107) expr -> expr . PLUS term
    (108) expr -> expr . MINUS term
    (109) expr -> expr . OR term

    THEN            reduce using rule 104 (expression -> expression EQUAL expr .)
    GE              reduce using rule 104 (expression -> expression EQUAL expr .)
    GT              reduce using rule 104 (expression -> expression EQUAL expr .)
    LE              reduce using rule 104 (expression -> expression EQUAL expr .)
    LT              reduce using rule 104 (expression -> expression EQUAL expr .)
    EQUAL           reduce using rule 104 (expression -> expression EQUAL expr .)
    UNEQUAL         reduce using rule 104 (expression -> expression EQUAL expr .)
    SEMI            reduce using rule 104 (expression -> expression EQUAL expr .)
    ELSE            reduce using rule 104 (expression -> expression EQUAL expr .)
    DO              reduce using rule 104 (expression -> expression EQUAL expr .)
    RB              reduce using rule 104 (expression -> expression EQUAL expr .)
    RP              reduce using rule 104 (expression -> expression EQUAL expr .)
    COMMA           reduce using rule 104 (expression -> expression EQUAL expr .)
    OF              reduce using rule 104 (expression -> expression EQUAL expr .)
    TO              reduce using rule 104 (expression -> expression EQUAL expr .)
    DOWNTO          reduce using rule 104 (expression -> expression EQUAL expr .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    OR              shift and go to state 134


state 188

    (94) case_expr_list -> case_expr .

    END             reduce using rule 94 (case_expr_list -> case_expr .)
    ID              reduce using rule 94 (case_expr_list -> case_expr .)
    INTEGER         reduce using rule 94 (case_expr_list -> case_expr .)
    REAL            reduce using rule 94 (case_expr_list -> case_expr .)
    CHAR            reduce using rule 94 (case_expr_list -> case_expr .)
    STRING          reduce using rule 94 (case_expr_list -> case_expr .)
    SYS_CON         reduce using rule 94 (case_expr_list -> case_expr .)


state 189

    (92) case_stmt -> CASE expression OF case_expr_list . END
    (93) case_expr_list -> case_expr_list . case_expr
    (95) case_expr -> . const_value COLON stmt SEMI
    (96) case_expr -> . ID COLON stmt SEMI
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    END             shift and go to state 227
    ID              shift and go to state 191
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 190
    case_expr                      shift and go to state 228

state 190

    (95) case_expr -> const_value . COLON stmt SEMI

    COLON           shift and go to state 229


state 191

    (96) case_expr -> ID . COLON stmt SEMI

    COLON           shift and go to state 230


state 192

    (102) expression -> expression LE expr .
    (107) expr -> expr . PLUS term
    (108) expr -> expr . MINUS term
    (109) expr -> expr . OR term

    THEN            reduce using rule 102 (expression -> expression LE expr .)
    GE              reduce using rule 102 (expression -> expression LE expr .)
    GT              reduce using rule 102 (expression -> expression LE expr .)
    LE              reduce using rule 102 (expression -> expression LE expr .)
    LT              reduce using rule 102 (expression -> expression LE expr .)
    EQUAL           reduce using rule 102 (expression -> expression LE expr .)
    UNEQUAL         reduce using rule 102 (expression -> expression LE expr .)
    SEMI            reduce using rule 102 (expression -> expression LE expr .)
    ELSE            reduce using rule 102 (expression -> expression LE expr .)
    DO              reduce using rule 102 (expression -> expression LE expr .)
    RB              reduce using rule 102 (expression -> expression LE expr .)
    RP              reduce using rule 102 (expression -> expression LE expr .)
    COMMA           reduce using rule 102 (expression -> expression LE expr .)
    OF              reduce using rule 102 (expression -> expression LE expr .)
    TO              reduce using rule 102 (expression -> expression LE expr .)
    DOWNTO          reduce using rule 102 (expression -> expression LE expr .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    OR              shift and go to state 134


state 193

    (103) expression -> expression LT expr .
    (107) expr -> expr . PLUS term
    (108) expr -> expr . MINUS term
    (109) expr -> expr . OR term

    THEN            reduce using rule 103 (expression -> expression LT expr .)
    GE              reduce using rule 103 (expression -> expression LT expr .)
    GT              reduce using rule 103 (expression -> expression LT expr .)
    LE              reduce using rule 103 (expression -> expression LT expr .)
    LT              reduce using rule 103 (expression -> expression LT expr .)
    EQUAL           reduce using rule 103 (expression -> expression LT expr .)
    UNEQUAL         reduce using rule 103 (expression -> expression LT expr .)
    SEMI            reduce using rule 103 (expression -> expression LT expr .)
    ELSE            reduce using rule 103 (expression -> expression LT expr .)
    DO              reduce using rule 103 (expression -> expression LT expr .)
    RB              reduce using rule 103 (expression -> expression LT expr .)
    RP              reduce using rule 103 (expression -> expression LT expr .)
    COMMA           reduce using rule 103 (expression -> expression LT expr .)
    OF              reduce using rule 103 (expression -> expression LT expr .)
    TO              reduce using rule 103 (expression -> expression LT expr .)
    DOWNTO          reduce using rule 103 (expression -> expression LT expr .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    OR              shift and go to state 134


state 194

    (100) expression -> expression GE expr .
    (107) expr -> expr . PLUS term
    (108) expr -> expr . MINUS term
    (109) expr -> expr . OR term

    THEN            reduce using rule 100 (expression -> expression GE expr .)
    GE              reduce using rule 100 (expression -> expression GE expr .)
    GT              reduce using rule 100 (expression -> expression GE expr .)
    LE              reduce using rule 100 (expression -> expression GE expr .)
    LT              reduce using rule 100 (expression -> expression GE expr .)
    EQUAL           reduce using rule 100 (expression -> expression GE expr .)
    UNEQUAL         reduce using rule 100 (expression -> expression GE expr .)
    SEMI            reduce using rule 100 (expression -> expression GE expr .)
    ELSE            reduce using rule 100 (expression -> expression GE expr .)
    DO              reduce using rule 100 (expression -> expression GE expr .)
    RB              reduce using rule 100 (expression -> expression GE expr .)
    RP              reduce using rule 100 (expression -> expression GE expr .)
    COMMA           reduce using rule 100 (expression -> expression GE expr .)
    OF              reduce using rule 100 (expression -> expression GE expr .)
    TO              reduce using rule 100 (expression -> expression GE expr .)
    DOWNTO          reduce using rule 100 (expression -> expression GE expr .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    OR              shift and go to state 134


state 195

    (105) expression -> expression UNEQUAL expr .
    (107) expr -> expr . PLUS term
    (108) expr -> expr . MINUS term
    (109) expr -> expr . OR term

    THEN            reduce using rule 105 (expression -> expression UNEQUAL expr .)
    GE              reduce using rule 105 (expression -> expression UNEQUAL expr .)
    GT              reduce using rule 105 (expression -> expression UNEQUAL expr .)
    LE              reduce using rule 105 (expression -> expression UNEQUAL expr .)
    LT              reduce using rule 105 (expression -> expression UNEQUAL expr .)
    EQUAL           reduce using rule 105 (expression -> expression UNEQUAL expr .)
    UNEQUAL         reduce using rule 105 (expression -> expression UNEQUAL expr .)
    SEMI            reduce using rule 105 (expression -> expression UNEQUAL expr .)
    ELSE            reduce using rule 105 (expression -> expression UNEQUAL expr .)
    DO              reduce using rule 105 (expression -> expression UNEQUAL expr .)
    RB              reduce using rule 105 (expression -> expression UNEQUAL expr .)
    RP              reduce using rule 105 (expression -> expression UNEQUAL expr .)
    COMMA           reduce using rule 105 (expression -> expression UNEQUAL expr .)
    OF              reduce using rule 105 (expression -> expression UNEQUAL expr .)
    TO              reduce using rule 105 (expression -> expression UNEQUAL expr .)
    DOWNTO          reduce using rule 105 (expression -> expression UNEQUAL expr .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    OR              shift and go to state 134


state 196

    (84) if_stmt -> IF expression THEN stmt . else_clause
    (85) else_clause -> . ELSE stmt
    (86) else_clause -> . empty
    (128) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 231
    SEMI            reduce using rule 128 (empty -> .)

  ! ELSE            [ reduce using rule 128 (empty -> .) ]

    empty                          shift and go to state 233
    else_clause                    shift and go to state 232

state 197

    (87) repeat_stmt -> REPEAT stmt_list UNTIL expression .
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 87 (repeat_stmt -> REPEAT stmt_list UNTIL expression .)
    ELSE            reduce using rule 87 (repeat_stmt -> REPEAT stmt_list UNTIL expression .)
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 198

    (89) for_stmt -> FOR NAME ASSIGN expression . direction expression DO stmt
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr
    (90) direction -> . TO
    (91) direction -> . DOWNTO

    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142
    TO              shift and go to state 236
    DOWNTO          shift and go to state 235

    direction                      shift and go to state 234

state 199

    (77) assign_stmt -> NAME LB expression RB . ASSIGN expression

    ASSIGN          shift and go to state 237


state 200

    (80) proc_stmt -> NAME LP args_list RP .

    SEMI            reduce using rule 80 (proc_stmt -> NAME LP args_list RP .)
    ELSE            reduce using rule 80 (proc_stmt -> NAME LP args_list RP .)


state 201

    (126) args_list -> args_list COMMA . expression
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 238

state 202

    (78) assign_stmt -> NAME DOT NAME ASSIGN . expression
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 239

state 203

    (88) while_stmt -> WHILE expression DO stmt .

    SEMI            reduce using rule 88 (while_stmt -> WHILE expression DO stmt .)
    ELSE            reduce using rule 88 (while_stmt -> WHILE expression DO stmt .)


state 204

    (50) function_head -> FUNCTION NAME parameters COLON . simple_type_decl
    (25) simple_type_decl -> . SYS_TYPE
    (26) simple_type_decl -> . NAME
    (27) simple_type_decl -> . LP name_list RP
    (28) simple_type_decl -> . const_value DOTDOT const_value
    (29) simple_type_decl -> . MINUS const_value DOTDOT const_value
    (30) simple_type_decl -> . MINUS const_value DOTDOT MINUS const_value
    (31) simple_type_decl -> . NAME DOTDOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 114
    NAME            shift and go to state 115
    LP              shift and go to state 110
    MINUS           shift and go to state 108
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 107
    simple_type_decl               shift and go to state 240

state 205

    (58) para_type_list -> val_para_list . COLON simple_type_decl

    COLON           shift and go to state 241


state 206

    (60) val_para_list -> name_list .
    (37) name_list -> name_list . COMMA NAME

    COLON           reduce using rule 60 (val_para_list -> name_list .)
    COMMA           shift and go to state 104


state 207

    (57) para_type_list -> var_para_list . COLON simple_type_decl

    COLON           shift and go to state 242


state 208

    (59) var_para_list -> VAR . name_list
    (37) name_list -> . name_list COMMA NAME
    (38) name_list -> . NAME

    NAME            shift and go to state 63

    name_list                      shift and go to state 243

state 209

    (56) para_decl_list -> para_type_list .

    RP              reduce using rule 56 (para_decl_list -> para_type_list .)
    SEMI            reduce using rule 56 (para_decl_list -> para_type_list .)


state 210

    (53) parameters -> LP para_decl_list . RP
    (55) para_decl_list -> para_decl_list . SEMI para_type_list

    RP              shift and go to state 244
    SEMI            shift and go to state 245


state 211

    (4) sub_routine -> routine_head routine_body .

    SEMI            reduce using rule 4 (sub_routine -> routine_head routine_body .)


state 212

    (49) function_decl -> function_head SEMI sub_routine SEMI .

    FUNCTION        reduce using rule 49 (function_decl -> function_head SEMI sub_routine SEMI .)
    PROCEDURE       reduce using rule 49 (function_decl -> function_head SEMI sub_routine SEMI .)
    BEGIN           reduce using rule 49 (function_decl -> function_head SEMI sub_routine SEMI .)


state 213

    (51) procedure_decl -> procedure_head SEMI sub_routine SEMI .

    FUNCTION        reduce using rule 51 (procedure_decl -> procedure_head SEMI sub_routine SEMI .)
    PROCEDURE       reduce using rule 51 (procedure_decl -> procedure_head SEMI sub_routine SEMI .)
    BEGIN           reduce using rule 51 (procedure_decl -> procedure_head SEMI sub_routine SEMI .)


state 214

    (43) var_decl -> name_list COLON type_decl SEMI .

    NAME            reduce using rule 43 (var_decl -> name_list COLON type_decl SEMI .)
    FUNCTION        reduce using rule 43 (var_decl -> name_list COLON type_decl SEMI .)
    PROCEDURE       reduce using rule 43 (var_decl -> name_list COLON type_decl SEMI .)
    BEGIN           reduce using rule 43 (var_decl -> name_list COLON type_decl SEMI .)


state 215

    (28) simple_type_decl -> const_value DOTDOT const_value .

    SEMI            reduce using rule 28 (simple_type_decl -> const_value DOTDOT const_value .)
    RB              reduce using rule 28 (simple_type_decl -> const_value DOTDOT const_value .)
    RP              reduce using rule 28 (simple_type_decl -> const_value DOTDOT const_value .)


state 216

    (29) simple_type_decl -> MINUS const_value DOTDOT . const_value
    (30) simple_type_decl -> MINUS const_value DOTDOT . MINUS const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    MINUS           shift and go to state 247
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 246

state 217

    (36) field_decl -> name_list COLON . type_decl SEMI
    (22) type_decl -> . simple_type_decl
    (23) type_decl -> . array_type_decl
    (24) type_decl -> . record_type_decl
    (25) simple_type_decl -> . SYS_TYPE
    (26) simple_type_decl -> . NAME
    (27) simple_type_decl -> . LP name_list RP
    (28) simple_type_decl -> . const_value DOTDOT const_value
    (29) simple_type_decl -> . MINUS const_value DOTDOT const_value
    (30) simple_type_decl -> . MINUS const_value DOTDOT MINUS const_value
    (31) simple_type_decl -> . NAME DOTDOT NAME
    (32) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (33) record_type_decl -> . RECORD field_decl_list END
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 114
    NAME            shift and go to state 115
    LP              shift and go to state 110
    MINUS           shift and go to state 108
    ARRAY           shift and go to state 111
    RECORD          shift and go to state 109
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    array_type_decl                shift and go to state 112
    const_value                    shift and go to state 107
    record_type_decl               shift and go to state 116
    type_decl                      shift and go to state 248
    simple_type_decl               shift and go to state 117

state 218

    (33) record_type_decl -> RECORD field_decl_list END .

    SEMI            reduce using rule 33 (record_type_decl -> RECORD field_decl_list END .)


state 219

    (34) field_decl_list -> field_decl_list field_decl .

    END             reduce using rule 34 (field_decl_list -> field_decl_list field_decl .)
    NAME            reduce using rule 34 (field_decl_list -> field_decl_list field_decl .)


state 220

    (27) simple_type_decl -> LP name_list RP .

    SEMI            reduce using rule 27 (simple_type_decl -> LP name_list RP .)
    RB              reduce using rule 27 (simple_type_decl -> LP name_list RP .)
    RP              reduce using rule 27 (simple_type_decl -> LP name_list RP .)


state 221

    (32) array_type_decl -> ARRAY LB simple_type_decl . RB OF type_decl

    RB              shift and go to state 249


state 222

    (31) simple_type_decl -> NAME DOTDOT NAME .

    SEMI            reduce using rule 31 (simple_type_decl -> NAME DOTDOT NAME .)
    RB              reduce using rule 31 (simple_type_decl -> NAME DOTDOT NAME .)
    RP              reduce using rule 31 (simple_type_decl -> NAME DOTDOT NAME .)


state 223

    (98) expression_list -> expression_list COMMA expression .
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    RP              reduce using rule 98 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 98 (expression_list -> expression_list COMMA expression .)
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 224

    (119) factor -> SYS_FUNCT LP args_list RP .

    MUL             reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    DIV             reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    MOD             reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    AND             reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    PLUS            reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    MINUS           reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    OR              reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    GE              reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    GT              reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    LE              reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    LT              reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    EQUAL           reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    UNEQUAL         reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    RP              reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    COMMA           reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    OF              reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    THEN            reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    DO              reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    RB              reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    SEMI            reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    ELSE            reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    TO              reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)
    DOWNTO          reduce using rule 119 (factor -> SYS_FUNCT LP args_list RP .)


state 225

    (124) factor -> NAME LB expression RB .

    MUL             reduce using rule 124 (factor -> NAME LB expression RB .)
    DIV             reduce using rule 124 (factor -> NAME LB expression RB .)
    MOD             reduce using rule 124 (factor -> NAME LB expression RB .)
    AND             reduce using rule 124 (factor -> NAME LB expression RB .)
    PLUS            reduce using rule 124 (factor -> NAME LB expression RB .)
    MINUS           reduce using rule 124 (factor -> NAME LB expression RB .)
    OR              reduce using rule 124 (factor -> NAME LB expression RB .)
    GE              reduce using rule 124 (factor -> NAME LB expression RB .)
    GT              reduce using rule 124 (factor -> NAME LB expression RB .)
    LE              reduce using rule 124 (factor -> NAME LB expression RB .)
    LT              reduce using rule 124 (factor -> NAME LB expression RB .)
    EQUAL           reduce using rule 124 (factor -> NAME LB expression RB .)
    UNEQUAL         reduce using rule 124 (factor -> NAME LB expression RB .)
    RP              reduce using rule 124 (factor -> NAME LB expression RB .)
    COMMA           reduce using rule 124 (factor -> NAME LB expression RB .)
    OF              reduce using rule 124 (factor -> NAME LB expression RB .)
    THEN            reduce using rule 124 (factor -> NAME LB expression RB .)
    DO              reduce using rule 124 (factor -> NAME LB expression RB .)
    RB              reduce using rule 124 (factor -> NAME LB expression RB .)
    SEMI            reduce using rule 124 (factor -> NAME LB expression RB .)
    ELSE            reduce using rule 124 (factor -> NAME LB expression RB .)
    TO              reduce using rule 124 (factor -> NAME LB expression RB .)
    DOWNTO          reduce using rule 124 (factor -> NAME LB expression RB .)


state 226

    (117) factor -> NAME LP args_list RP .

    MUL             reduce using rule 117 (factor -> NAME LP args_list RP .)
    DIV             reduce using rule 117 (factor -> NAME LP args_list RP .)
    MOD             reduce using rule 117 (factor -> NAME LP args_list RP .)
    AND             reduce using rule 117 (factor -> NAME LP args_list RP .)
    PLUS            reduce using rule 117 (factor -> NAME LP args_list RP .)
    MINUS           reduce using rule 117 (factor -> NAME LP args_list RP .)
    OR              reduce using rule 117 (factor -> NAME LP args_list RP .)
    GE              reduce using rule 117 (factor -> NAME LP args_list RP .)
    GT              reduce using rule 117 (factor -> NAME LP args_list RP .)
    LE              reduce using rule 117 (factor -> NAME LP args_list RP .)
    LT              reduce using rule 117 (factor -> NAME LP args_list RP .)
    EQUAL           reduce using rule 117 (factor -> NAME LP args_list RP .)
    UNEQUAL         reduce using rule 117 (factor -> NAME LP args_list RP .)
    RP              reduce using rule 117 (factor -> NAME LP args_list RP .)
    COMMA           reduce using rule 117 (factor -> NAME LP args_list RP .)
    OF              reduce using rule 117 (factor -> NAME LP args_list RP .)
    THEN            reduce using rule 117 (factor -> NAME LP args_list RP .)
    DO              reduce using rule 117 (factor -> NAME LP args_list RP .)
    RB              reduce using rule 117 (factor -> NAME LP args_list RP .)
    SEMI            reduce using rule 117 (factor -> NAME LP args_list RP .)
    ELSE            reduce using rule 117 (factor -> NAME LP args_list RP .)
    TO              reduce using rule 117 (factor -> NAME LP args_list RP .)
    DOWNTO          reduce using rule 117 (factor -> NAME LP args_list RP .)


state 227

    (92) case_stmt -> CASE expression OF case_expr_list END .

    SEMI            reduce using rule 92 (case_stmt -> CASE expression OF case_expr_list END .)
    ELSE            reduce using rule 92 (case_stmt -> CASE expression OF case_expr_list END .)


state 228

    (93) case_expr_list -> case_expr_list case_expr .

    END             reduce using rule 93 (case_expr_list -> case_expr_list case_expr .)
    ID              reduce using rule 93 (case_expr_list -> case_expr_list case_expr .)
    INTEGER         reduce using rule 93 (case_expr_list -> case_expr_list case_expr .)
    REAL            reduce using rule 93 (case_expr_list -> case_expr_list case_expr .)
    CHAR            reduce using rule 93 (case_expr_list -> case_expr_list case_expr .)
    STRING          reduce using rule 93 (case_expr_list -> case_expr_list case_expr .)
    SYS_CON         reduce using rule 93 (case_expr_list -> case_expr_list case_expr .)


state 229

    (95) case_expr -> const_value COLON . stmt SEMI
    (65) stmt -> . INTEGER COLON non_label_stmt
    (66) stmt -> . non_label_stmt
    (67) non_label_stmt -> . assign_stmt
    (68) non_label_stmt -> . proc_stmt
    (69) non_label_stmt -> . compound_stmt
    (70) non_label_stmt -> . if_stmt
    (71) non_label_stmt -> . repeat_stmt
    (72) non_label_stmt -> . while_stmt
    (73) non_label_stmt -> . for_stmt
    (74) non_label_stmt -> . case_stmt
    (75) non_label_stmt -> . goto_stmt
    (76) assign_stmt -> . NAME ASSIGN expression
    (77) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (78) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (79) proc_stmt -> . NAME
    (80) proc_stmt -> . NAME LP args_list RP
    (81) proc_stmt -> . SYS_PROC
    (82) proc_stmt -> . SYS_PROC LP expression_list RP
    (83) proc_stmt -> . READ LP factor RP
    (62) compound_stmt -> . BEGIN stmt_list END
    (84) if_stmt -> . IF expression THEN stmt else_clause
    (87) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (88) while_stmt -> . WHILE expression DO stmt
    (89) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (92) case_stmt -> . CASE expression OF case_expr_list END
    (97) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 42
    NAME            shift and go to state 50
    SYS_PROC        shift and go to state 35
    READ            shift and go to state 33
    BEGIN           shift and go to state 12
    IF              shift and go to state 43
    REPEAT          shift and go to state 44
    WHILE           shift and go to state 51
    FOR             shift and go to state 46
    CASE            shift and go to state 37
    GOTO            shift and go to state 36

    case_stmt                      shift and go to state 38
    non_label_stmt                 shift and go to state 39
    for_stmt                       shift and go to state 48
    stmt                           shift and go to state 250
    assign_stmt                    shift and go to state 40
    proc_stmt                      shift and go to state 34
    repeat_stmt                    shift and go to state 41
    while_stmt                     shift and go to state 53
    goto_stmt                      shift and go to state 54
    compound_stmt                  shift and go to state 52
    if_stmt                        shift and go to state 49

state 230

    (96) case_expr -> ID COLON . stmt SEMI
    (65) stmt -> . INTEGER COLON non_label_stmt
    (66) stmt -> . non_label_stmt
    (67) non_label_stmt -> . assign_stmt
    (68) non_label_stmt -> . proc_stmt
    (69) non_label_stmt -> . compound_stmt
    (70) non_label_stmt -> . if_stmt
    (71) non_label_stmt -> . repeat_stmt
    (72) non_label_stmt -> . while_stmt
    (73) non_label_stmt -> . for_stmt
    (74) non_label_stmt -> . case_stmt
    (75) non_label_stmt -> . goto_stmt
    (76) assign_stmt -> . NAME ASSIGN expression
    (77) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (78) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (79) proc_stmt -> . NAME
    (80) proc_stmt -> . NAME LP args_list RP
    (81) proc_stmt -> . SYS_PROC
    (82) proc_stmt -> . SYS_PROC LP expression_list RP
    (83) proc_stmt -> . READ LP factor RP
    (62) compound_stmt -> . BEGIN stmt_list END
    (84) if_stmt -> . IF expression THEN stmt else_clause
    (87) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (88) while_stmt -> . WHILE expression DO stmt
    (89) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (92) case_stmt -> . CASE expression OF case_expr_list END
    (97) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 42
    NAME            shift and go to state 50
    SYS_PROC        shift and go to state 35
    READ            shift and go to state 33
    BEGIN           shift and go to state 12
    IF              shift and go to state 43
    REPEAT          shift and go to state 44
    WHILE           shift and go to state 51
    FOR             shift and go to state 46
    CASE            shift and go to state 37
    GOTO            shift and go to state 36

    case_stmt                      shift and go to state 38
    if_stmt                        shift and go to state 49
    for_stmt                       shift and go to state 48
    stmt                           shift and go to state 251
    assign_stmt                    shift and go to state 40
    proc_stmt                      shift and go to state 34
    repeat_stmt                    shift and go to state 41
    while_stmt                     shift and go to state 53
    goto_stmt                      shift and go to state 54
    compound_stmt                  shift and go to state 52
    non_label_stmt                 shift and go to state 39

state 231

    (85) else_clause -> ELSE . stmt
    (65) stmt -> . INTEGER COLON non_label_stmt
    (66) stmt -> . non_label_stmt
    (67) non_label_stmt -> . assign_stmt
    (68) non_label_stmt -> . proc_stmt
    (69) non_label_stmt -> . compound_stmt
    (70) non_label_stmt -> . if_stmt
    (71) non_label_stmt -> . repeat_stmt
    (72) non_label_stmt -> . while_stmt
    (73) non_label_stmt -> . for_stmt
    (74) non_label_stmt -> . case_stmt
    (75) non_label_stmt -> . goto_stmt
    (76) assign_stmt -> . NAME ASSIGN expression
    (77) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (78) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (79) proc_stmt -> . NAME
    (80) proc_stmt -> . NAME LP args_list RP
    (81) proc_stmt -> . SYS_PROC
    (82) proc_stmt -> . SYS_PROC LP expression_list RP
    (83) proc_stmt -> . READ LP factor RP
    (62) compound_stmt -> . BEGIN stmt_list END
    (84) if_stmt -> . IF expression THEN stmt else_clause
    (87) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (88) while_stmt -> . WHILE expression DO stmt
    (89) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (92) case_stmt -> . CASE expression OF case_expr_list END
    (97) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 42
    NAME            shift and go to state 50
    SYS_PROC        shift and go to state 35
    READ            shift and go to state 33
    BEGIN           shift and go to state 12
    IF              shift and go to state 43
    REPEAT          shift and go to state 44
    WHILE           shift and go to state 51
    FOR             shift and go to state 46
    CASE            shift and go to state 37
    GOTO            shift and go to state 36

    case_stmt                      shift and go to state 38
    if_stmt                        shift and go to state 49
    for_stmt                       shift and go to state 48
    stmt                           shift and go to state 252
    assign_stmt                    shift and go to state 40
    proc_stmt                      shift and go to state 34
    repeat_stmt                    shift and go to state 41
    while_stmt                     shift and go to state 53
    goto_stmt                      shift and go to state 54
    compound_stmt                  shift and go to state 52
    non_label_stmt                 shift and go to state 39

state 232

    (84) if_stmt -> IF expression THEN stmt else_clause .

    SEMI            reduce using rule 84 (if_stmt -> IF expression THEN stmt else_clause .)
    ELSE            reduce using rule 84 (if_stmt -> IF expression THEN stmt else_clause .)


state 233

    (86) else_clause -> empty .

    SEMI            reduce using rule 86 (else_clause -> empty .)
    ELSE            reduce using rule 86 (else_clause -> empty .)


state 234

    (89) for_stmt -> FOR NAME ASSIGN expression direction . expression DO stmt
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    expr                           shift and go to state 85
    term                           shift and go to state 83
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 253

state 235

    (91) direction -> DOWNTO .

    NAME            reduce using rule 91 (direction -> DOWNTO .)
    SYS_FUNCT       reduce using rule 91 (direction -> DOWNTO .)
    LP              reduce using rule 91 (direction -> DOWNTO .)
    NOT             reduce using rule 91 (direction -> DOWNTO .)
    MINUS           reduce using rule 91 (direction -> DOWNTO .)
    INTEGER         reduce using rule 91 (direction -> DOWNTO .)
    REAL            reduce using rule 91 (direction -> DOWNTO .)
    CHAR            reduce using rule 91 (direction -> DOWNTO .)
    STRING          reduce using rule 91 (direction -> DOWNTO .)
    SYS_CON         reduce using rule 91 (direction -> DOWNTO .)


state 236

    (90) direction -> TO .

    NAME            reduce using rule 90 (direction -> TO .)
    SYS_FUNCT       reduce using rule 90 (direction -> TO .)
    LP              reduce using rule 90 (direction -> TO .)
    NOT             reduce using rule 90 (direction -> TO .)
    MINUS           reduce using rule 90 (direction -> TO .)
    INTEGER         reduce using rule 90 (direction -> TO .)
    REAL            reduce using rule 90 (direction -> TO .)
    CHAR            reduce using rule 90 (direction -> TO .)
    STRING          reduce using rule 90 (direction -> TO .)
    SYS_CON         reduce using rule 90 (direction -> TO .)


state 237

    (77) assign_stmt -> NAME LB expression RB ASSIGN . expression
    (100) expression -> . expression GE expr
    (101) expression -> . expression GT expr
    (102) expression -> . expression LE expr
    (103) expression -> . expression LT expr
    (104) expression -> . expression EQUAL expr
    (105) expression -> . expression UNEQUAL expr
    (106) expression -> . expr
    (107) expr -> . expr PLUS term
    (108) expr -> . expr MINUS term
    (109) expr -> . expr OR term
    (110) expr -> . term
    (111) term -> . term MUL factor
    (112) term -> . term DIV factor
    (113) term -> . term MOD factor
    (114) term -> . term AND factor
    (115) term -> . factor
    (116) factor -> . NAME
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . SYS_FUNCT
    (119) factor -> . SYS_FUNCT LP args_list RP
    (120) factor -> . const_value
    (121) factor -> . LP expression RP
    (122) factor -> . NOT factor
    (123) factor -> . MINUS factor
    (124) factor -> . NAME LB expression RB
    (125) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    NAME            shift and go to state 84
    SYS_FUNCT       shift and go to state 78
    LP              shift and go to state 81
    NOT             shift and go to state 86
    MINUS           shift and go to state 80
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    term                           shift and go to state 83
    expr                           shift and go to state 85
    const_value                    shift and go to state 79
    factor                         shift and go to state 82
    expression                     shift and go to state 254

state 238

    (126) args_list -> args_list COMMA expression .
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    RP              reduce using rule 126 (args_list -> args_list COMMA expression .)
    COMMA           reduce using rule 126 (args_list -> args_list COMMA expression .)
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 239

    (78) assign_stmt -> NAME DOT NAME ASSIGN expression .
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 78 (assign_stmt -> NAME DOT NAME ASSIGN expression .)
    ELSE            reduce using rule 78 (assign_stmt -> NAME DOT NAME ASSIGN expression .)
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 240

    (50) function_head -> FUNCTION NAME parameters COLON simple_type_decl .

    SEMI            reduce using rule 50 (function_head -> FUNCTION NAME parameters COLON simple_type_decl .)


state 241

    (58) para_type_list -> val_para_list COLON . simple_type_decl
    (25) simple_type_decl -> . SYS_TYPE
    (26) simple_type_decl -> . NAME
    (27) simple_type_decl -> . LP name_list RP
    (28) simple_type_decl -> . const_value DOTDOT const_value
    (29) simple_type_decl -> . MINUS const_value DOTDOT const_value
    (30) simple_type_decl -> . MINUS const_value DOTDOT MINUS const_value
    (31) simple_type_decl -> . NAME DOTDOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 114
    NAME            shift and go to state 115
    LP              shift and go to state 110
    MINUS           shift and go to state 108
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    simple_type_decl               shift and go to state 255
    const_value                    shift and go to state 107

state 242

    (57) para_type_list -> var_para_list COLON . simple_type_decl
    (25) simple_type_decl -> . SYS_TYPE
    (26) simple_type_decl -> . NAME
    (27) simple_type_decl -> . LP name_list RP
    (28) simple_type_decl -> . const_value DOTDOT const_value
    (29) simple_type_decl -> . MINUS const_value DOTDOT const_value
    (30) simple_type_decl -> . MINUS const_value DOTDOT MINUS const_value
    (31) simple_type_decl -> . NAME DOTDOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 114
    NAME            shift and go to state 115
    LP              shift and go to state 110
    MINUS           shift and go to state 108
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 107
    simple_type_decl               shift and go to state 256

state 243

    (59) var_para_list -> VAR name_list .
    (37) name_list -> name_list . COMMA NAME

    COLON           reduce using rule 59 (var_para_list -> VAR name_list .)
    COMMA           shift and go to state 104


state 244

    (53) parameters -> LP para_decl_list RP .

    SEMI            reduce using rule 53 (parameters -> LP para_decl_list RP .)
    COLON           reduce using rule 53 (parameters -> LP para_decl_list RP .)


state 245

    (55) para_decl_list -> para_decl_list SEMI . para_type_list
    (57) para_type_list -> . var_para_list COLON simple_type_decl
    (58) para_type_list -> . val_para_list COLON simple_type_decl
    (59) var_para_list -> . VAR name_list
    (60) val_para_list -> . name_list
    (37) name_list -> . name_list COMMA NAME
    (38) name_list -> . NAME

    VAR             shift and go to state 208
    NAME            shift and go to state 63

    name_list                      shift and go to state 206
    var_para_list                  shift and go to state 207
    para_type_list                 shift and go to state 257
    val_para_list                  shift and go to state 205

state 246

    (29) simple_type_decl -> MINUS const_value DOTDOT const_value .

    SEMI            reduce using rule 29 (simple_type_decl -> MINUS const_value DOTDOT const_value .)
    RB              reduce using rule 29 (simple_type_decl -> MINUS const_value DOTDOT const_value .)
    RP              reduce using rule 29 (simple_type_decl -> MINUS const_value DOTDOT const_value .)


state 247

    (30) simple_type_decl -> MINUS const_value DOTDOT MINUS . const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    const_value                    shift and go to state 258

state 248

    (36) field_decl -> name_list COLON type_decl . SEMI

    SEMI            shift and go to state 259


state 249

    (32) array_type_decl -> ARRAY LB simple_type_decl RB . OF type_decl

    OF              shift and go to state 260


state 250

    (95) case_expr -> const_value COLON stmt . SEMI

    SEMI            shift and go to state 261


state 251

    (96) case_expr -> ID COLON stmt . SEMI

    SEMI            shift and go to state 262


state 252

    (85) else_clause -> ELSE stmt .

    SEMI            reduce using rule 85 (else_clause -> ELSE stmt .)
    ELSE            reduce using rule 85 (else_clause -> ELSE stmt .)


state 253

    (89) for_stmt -> FOR NAME ASSIGN expression direction expression . DO stmt
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    DO              shift and go to state 263
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 254

    (77) assign_stmt -> NAME LB expression RB ASSIGN expression .
    (100) expression -> expression . GE expr
    (101) expression -> expression . GT expr
    (102) expression -> expression . LE expr
    (103) expression -> expression . LT expr
    (104) expression -> expression . EQUAL expr
    (105) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 77 (assign_stmt -> NAME LB expression RB ASSIGN expression .)
    ELSE            reduce using rule 77 (assign_stmt -> NAME LB expression RB ASSIGN expression .)
    GE              shift and go to state 141
    GT              shift and go to state 136
    LE              shift and go to state 139
    LT              shift and go to state 140
    EQUAL           shift and go to state 137
    UNEQUAL         shift and go to state 142


state 255

    (58) para_type_list -> val_para_list COLON simple_type_decl .

    RP              reduce using rule 58 (para_type_list -> val_para_list COLON simple_type_decl .)
    SEMI            reduce using rule 58 (para_type_list -> val_para_list COLON simple_type_decl .)


state 256

    (57) para_type_list -> var_para_list COLON simple_type_decl .

    RP              reduce using rule 57 (para_type_list -> var_para_list COLON simple_type_decl .)
    SEMI            reduce using rule 57 (para_type_list -> var_para_list COLON simple_type_decl .)


state 257

    (55) para_decl_list -> para_decl_list SEMI para_type_list .

    RP              reduce using rule 55 (para_decl_list -> para_decl_list SEMI para_type_list .)
    SEMI            reduce using rule 55 (para_decl_list -> para_decl_list SEMI para_type_list .)


state 258

    (30) simple_type_decl -> MINUS const_value DOTDOT MINUS const_value .

    SEMI            reduce using rule 30 (simple_type_decl -> MINUS const_value DOTDOT MINUS const_value .)
    RB              reduce using rule 30 (simple_type_decl -> MINUS const_value DOTDOT MINUS const_value .)
    RP              reduce using rule 30 (simple_type_decl -> MINUS const_value DOTDOT MINUS const_value .)


state 259

    (36) field_decl -> name_list COLON type_decl SEMI .

    END             reduce using rule 36 (field_decl -> name_list COLON type_decl SEMI .)
    NAME            reduce using rule 36 (field_decl -> name_list COLON type_decl SEMI .)


state 260

    (32) array_type_decl -> ARRAY LB simple_type_decl RB OF . type_decl
    (22) type_decl -> . simple_type_decl
    (23) type_decl -> . array_type_decl
    (24) type_decl -> . record_type_decl
    (25) simple_type_decl -> . SYS_TYPE
    (26) simple_type_decl -> . NAME
    (27) simple_type_decl -> . LP name_list RP
    (28) simple_type_decl -> . const_value DOTDOT const_value
    (29) simple_type_decl -> . MINUS const_value DOTDOT const_value
    (30) simple_type_decl -> . MINUS const_value DOTDOT MINUS const_value
    (31) simple_type_decl -> . NAME DOTDOT NAME
    (32) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (33) record_type_decl -> . RECORD field_decl_list END
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 114
    NAME            shift and go to state 115
    LP              shift and go to state 110
    MINUS           shift and go to state 108
    ARRAY           shift and go to state 111
    RECORD          shift and go to state 109
    INTEGER         shift and go to state 72
    REAL            shift and go to state 69
    CHAR            shift and go to state 70
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 73

    array_type_decl                shift and go to state 112
    const_value                    shift and go to state 107
    record_type_decl               shift and go to state 116
    type_decl                      shift and go to state 264
    simple_type_decl               shift and go to state 117

state 261

    (95) case_expr -> const_value COLON stmt SEMI .

    END             reduce using rule 95 (case_expr -> const_value COLON stmt SEMI .)
    ID              reduce using rule 95 (case_expr -> const_value COLON stmt SEMI .)
    INTEGER         reduce using rule 95 (case_expr -> const_value COLON stmt SEMI .)
    REAL            reduce using rule 95 (case_expr -> const_value COLON stmt SEMI .)
    CHAR            reduce using rule 95 (case_expr -> const_value COLON stmt SEMI .)
    STRING          reduce using rule 95 (case_expr -> const_value COLON stmt SEMI .)
    SYS_CON         reduce using rule 95 (case_expr -> const_value COLON stmt SEMI .)


state 262

    (96) case_expr -> ID COLON stmt SEMI .

    END             reduce using rule 96 (case_expr -> ID COLON stmt SEMI .)
    ID              reduce using rule 96 (case_expr -> ID COLON stmt SEMI .)
    INTEGER         reduce using rule 96 (case_expr -> ID COLON stmt SEMI .)
    REAL            reduce using rule 96 (case_expr -> ID COLON stmt SEMI .)
    CHAR            reduce using rule 96 (case_expr -> ID COLON stmt SEMI .)
    STRING          reduce using rule 96 (case_expr -> ID COLON stmt SEMI .)
    SYS_CON         reduce using rule 96 (case_expr -> ID COLON stmt SEMI .)


state 263

    (89) for_stmt -> FOR NAME ASSIGN expression direction expression DO . stmt
    (65) stmt -> . INTEGER COLON non_label_stmt
    (66) stmt -> . non_label_stmt
    (67) non_label_stmt -> . assign_stmt
    (68) non_label_stmt -> . proc_stmt
    (69) non_label_stmt -> . compound_stmt
    (70) non_label_stmt -> . if_stmt
    (71) non_label_stmt -> . repeat_stmt
    (72) non_label_stmt -> . while_stmt
    (73) non_label_stmt -> . for_stmt
    (74) non_label_stmt -> . case_stmt
    (75) non_label_stmt -> . goto_stmt
    (76) assign_stmt -> . NAME ASSIGN expression
    (77) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (78) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (79) proc_stmt -> . NAME
    (80) proc_stmt -> . NAME LP args_list RP
    (81) proc_stmt -> . SYS_PROC
    (82) proc_stmt -> . SYS_PROC LP expression_list RP
    (83) proc_stmt -> . READ LP factor RP
    (62) compound_stmt -> . BEGIN stmt_list END
    (84) if_stmt -> . IF expression THEN stmt else_clause
    (87) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (88) while_stmt -> . WHILE expression DO stmt
    (89) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (92) case_stmt -> . CASE expression OF case_expr_list END
    (97) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 42
    NAME            shift and go to state 50
    SYS_PROC        shift and go to state 35
    READ            shift and go to state 33
    BEGIN           shift and go to state 12
    IF              shift and go to state 43
    REPEAT          shift and go to state 44
    WHILE           shift and go to state 51
    FOR             shift and go to state 46
    CASE            shift and go to state 37
    GOTO            shift and go to state 36

    case_stmt                      shift and go to state 38
    non_label_stmt                 shift and go to state 39
    for_stmt                       shift and go to state 48
    stmt                           shift and go to state 265
    assign_stmt                    shift and go to state 40
    proc_stmt                      shift and go to state 34
    repeat_stmt                    shift and go to state 41
    while_stmt                     shift and go to state 53
    goto_stmt                      shift and go to state 54
    compound_stmt                  shift and go to state 52
    if_stmt                        shift and go to state 49

state 264

    (32) array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl .

    SEMI            reduce using rule 32 (array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl .)


state 265

    (89) for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt .

    SEMI            reduce using rule 89 (for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt .)
    ELSE            reduce using rule 89 (for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 25 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 25 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 196 resolved as shift
