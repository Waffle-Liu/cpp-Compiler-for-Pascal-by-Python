Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NUMBER
    PACKED

Grammar

Rule 0     S' -> program
Rule 1     program -> program_head routine DOT
Rule 2     program_head -> PROGRAM NAME SEMI
Rule 3     routine -> routine_head routine_body
Rule 4     sub_routine -> routine_head routine_body
Rule 5     routine_head -> label_part const_part type_part var_part routine_part
Rule 6     label_part -> empty
Rule 7     const_part -> CONST const_expr_list
Rule 8     const_part -> empty
Rule 9     const_expr_list -> const_expr_list const_expr
Rule 10    const_expr_list -> const_expr
Rule 11    const_expr -> NAME EQUAL const_value SEMI
Rule 12    const_value -> INTEGER
Rule 13    const_value -> REAL
Rule 14    const_value -> CHAR
Rule 15    const_value -> STRING
Rule 16    const_value -> SYS_CON
Rule 17    const_value -> true
Rule 18    const_value -> false
Rule 19    type_part -> TYPE type_decl_list
Rule 20    type_part -> empty
Rule 21    type_decl_list -> type_decl_list type_definition
Rule 22    type_decl_list -> type_definition
Rule 23    type_definition -> NAME EQUAL type_decl SEMI
Rule 24    type_decl -> simple_type_decl
Rule 25    type_decl -> array_type_decl
Rule 26    type_decl -> record_type_decl
Rule 27    simple_type_decl -> SYS_TYPE
Rule 28    simple_type_decl -> NAME
Rule 29    simple_type_decl -> LP name_list RP
Rule 30    simple_type_decl -> const_value DOTDOT const_value
Rule 31    array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl
Rule 32    record_type_decl -> RECORD field_decl_list END
Rule 33    field_decl_list -> field_decl_list field_decl
Rule 34    field_decl_list -> field_decl
Rule 35    field_decl -> name_list COLON type_decl SEMI
Rule 36    name_list -> name_list COMMA NAME
Rule 37    name_list -> NAME
Rule 38    var_part -> VAR var_decl_list
Rule 39    var_part -> empty
Rule 40    var_decl_list -> var_decl_list var_decl
Rule 41    var_decl_list -> var_decl
Rule 42    var_decl -> name_list COLON type_decl SEMI
Rule 43    routine_part -> routine_part function_decl
Rule 44    routine_part -> routine_part procedure_decl
Rule 45    routine_part -> function_decl
Rule 46    routine_part -> procedure_decl
Rule 47    routine_part -> empty
Rule 48    function_decl -> function_head SEMI sub_routine SEMI
Rule 49    function_head -> FUNCTION NAME parameters COLON simple_type_decl
Rule 50    procedure_decl -> procedure_head SEMI sub_routine SEMI
Rule 51    procedure_head -> PROCEDURE NAME parameters
Rule 52    parameters -> LP para_decl_list RP
Rule 53    parameters -> empty
Rule 54    para_decl_list -> para_decl_list SEMI para_type_list
Rule 55    para_decl_list -> para_type_list
Rule 56    para_type_list -> var_para_list COLON simple_type_decl
Rule 57    para_type_list -> val_para_list COLON simple_type_decl
Rule 58    var_para_list -> VAR name_list
Rule 59    val_para_list -> name_list
Rule 60    routine_body -> compound_stmt
Rule 61    compound_stmt -> BEGIN stmt_list END
Rule 62    stmt_list -> stmt_list stmt SEMI
Rule 63    stmt_list -> empty
Rule 64    stmt -> INTEGER COLON non_label_stmt
Rule 65    stmt -> non_label_stmt
Rule 66    non_label_stmt -> assign_stmt
Rule 67    non_label_stmt -> proc_stmt
Rule 68    non_label_stmt -> compound_stmt
Rule 69    non_label_stmt -> if_stmt
Rule 70    non_label_stmt -> repeat_stmt
Rule 71    non_label_stmt -> while_stmt
Rule 72    non_label_stmt -> for_stmt
Rule 73    non_label_stmt -> case_stmt
Rule 74    non_label_stmt -> goto_stmt
Rule 75    assign_stmt -> NAME ASSIGN expression
Rule 76    proc_stmt -> NAME
Rule 77    proc_stmt -> NAME LP args_list RP
Rule 78    proc_stmt -> SYS_PROC
Rule 79    proc_stmt -> SYS_PROC LP expression_list RP
Rule 80    proc_stmt -> READ LP factor RP
Rule 81    if_stmt -> IF expression THEN stmt else_clause
Rule 82    else_clause -> ELSE stmt
Rule 83    else_clause -> empty
Rule 84    repeat_stmt -> REPEAT stmt_list UNTIL expression
Rule 85    while_stmt -> WHILE expression DO stmt
Rule 86    for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt
Rule 87    direction -> TO
Rule 88    direction -> DOWNTO
Rule 89    case_stmt -> CASE expression OF case_expr_list END
Rule 90    case_expr_list -> case_expr_list case_expr
Rule 91    case_expr_list -> case_expr
Rule 92    case_expr -> const_value COLON stmt SEMI
Rule 93    case_expr -> ID COLON stmt SEMI
Rule 94    goto_stmt -> GOTO INTEGER
Rule 95    expression_list -> expression_list COMMA expression
Rule 96    expression_list -> expression
Rule 97    expression -> expression GE expr
Rule 98    expression -> expression GT expr
Rule 99    expression -> expression LE expr
Rule 100   expression -> expression LT expr
Rule 101   expression -> expression EQUAL expr
Rule 102   expression -> expression UNEQUAL expr
Rule 103   expression -> expr
Rule 104   expr -> expr PLUS term
Rule 105   expr -> expr MINUS term
Rule 106   expr -> expr OR term
Rule 107   expr -> term
Rule 108   term -> term MUL factor
Rule 109   term -> term DIV factor
Rule 110   term -> term MOD factor
Rule 111   term -> term AND factor
Rule 112   term -> factor
Rule 113   factor -> SYS_FUNCT
Rule 114   factor -> SYS_FUNCT LP args_list RP
Rule 115   factor -> NAME LP args_list RP
Rule 116   factor -> NAME
Rule 117   factor -> const_value
Rule 118   factor -> LP expression RP
Rule 119   factor -> NOT factor
Rule 120   factor -> MINUS factor
Rule 121   factor -> NAME LB expression RB
Rule 122   factor -> NAME DOT NAME
Rule 123   args_list -> args_list COMMA expression
Rule 124   args_list -> expression
Rule 125   empty -> <empty>

Terminals, with rules where they appear

AND                  : 111
ARRAY                : 31
ASSIGN               : 75 86
BEGIN                : 61
CASE                 : 89
CHAR                 : 14
COLON                : 35 42 49 56 57 64 92 93
COMMA                : 36 95 123
CONST                : 7
DIV                  : 109
DO                   : 85 86
DOT                  : 1 122
DOTDOT               : 30
DOWNTO               : 88
ELSE                 : 82
END                  : 32 61 89
EQUAL                : 11 23 101
FOR                  : 86
FUNCTION             : 49
GE                   : 97
GOTO                 : 94
GT                   : 98
ID                   : 93
IF                   : 81
INTEGER              : 12 64 94
LB                   : 31 121
LE                   : 99
LP                   : 29 52 77 79 80 114 115 118
LT                   : 100
MINUS                : 105 120
MOD                  : 110
MUL                  : 108
NAME                 : 2 11 23 28 36 37 49 51 75 76 77 86 115 116 121 122 122
NOT                  : 119
NUMBER               : 
OF                   : 31 89
OR                   : 106
PACKED               : 
PLUS                 : 104
PROCEDURE            : 51
PROGRAM              : 2
RB                   : 31 121
READ                 : 80
REAL                 : 13
RECORD               : 32
REPEAT               : 84
RP                   : 29 52 77 79 80 114 115 118
SEMI                 : 2 11 23 35 42 48 48 50 50 54 62 92 93
STRING               : 15
SYS_CON              : 16
SYS_FUNCT            : 113 114
SYS_PROC             : 78 79
SYS_TYPE             : 27
THEN                 : 81
TO                   : 87
TYPE                 : 19
UNEQUAL              : 102
UNTIL                : 84
VAR                  : 38 58
WHILE                : 85
error                : 
false                : 18
true                 : 17

Nonterminals, with rules where they appear

args_list            : 77 114 115 123
array_type_decl      : 25
assign_stmt          : 66
case_expr            : 90 91
case_expr_list       : 89 90
case_stmt            : 73
compound_stmt        : 60 68
const_expr           : 9 10
const_expr_list      : 7 9
const_part           : 5
const_value          : 11 30 30 92 117
direction            : 86
else_clause          : 81
empty                : 6 8 20 39 47 53 63 83
expr                 : 97 98 99 100 101 102 103 104 105 106
expression           : 75 81 84 85 86 86 89 95 96 97 98 99 100 101 102 118 121 123 124
expression_list      : 79 95
factor               : 80 108 109 110 111 112 119 120
field_decl           : 33 34
field_decl_list      : 32 33
for_stmt             : 72
function_decl        : 43 45
function_head        : 48
goto_stmt            : 74
if_stmt              : 69
label_part           : 5
name_list            : 29 35 36 42 58 59
non_label_stmt       : 64 65
para_decl_list       : 52 54
para_type_list       : 54 55
parameters           : 49 51
proc_stmt            : 67
procedure_decl       : 44 46
procedure_head       : 50
program              : 0
program_head         : 1
record_type_decl     : 26
repeat_stmt          : 70
routine              : 1
routine_body         : 3 4
routine_head         : 3 4
routine_part         : 5 43 44
simple_type_decl     : 24 31 49 56 57
stmt                 : 62 81 82 85 86 92 93
stmt_list            : 61 62 84
sub_routine          : 48 50
term                 : 104 105 106 107 108 109 110 111
type_decl            : 23 31 35 42
type_decl_list       : 19 21
type_definition      : 21 22
type_part            : 5
val_para_list        : 57
var_decl             : 40 41
var_decl_list        : 38 40
var_para_list        : 56
var_part             : 5
while_stmt           : 71

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_head routine DOT
    (2) program_head -> . PROGRAM NAME SEMI

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    program_head                   shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> program_head . routine DOT
    (3) routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . empty
    (125) empty -> .

    CONST           reduce using rule 125 (empty -> .)
    TYPE            reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    FUNCTION        reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    BEGIN           reduce using rule 125 (empty -> .)

    routine                        shift and go to state 4
    routine_head                   shift and go to state 5
    label_part                     shift and go to state 6
    empty                          shift and go to state 7

state 3

    (2) program_head -> PROGRAM . NAME SEMI

    NAME            shift and go to state 8


state 4

    (1) program -> program_head routine . DOT

    DOT             shift and go to state 9


state 5

    (3) routine -> routine_head . routine_body
    (60) routine_body -> . compound_stmt
    (61) compound_stmt -> . BEGIN stmt_list END

    BEGIN           shift and go to state 12

    routine_body                   shift and go to state 10
    compound_stmt                  shift and go to state 11

state 6

    (5) routine_head -> label_part . const_part type_part var_part routine_part
    (7) const_part -> . CONST const_expr_list
    (8) const_part -> . empty
    (125) empty -> .

    CONST           shift and go to state 14
    TYPE            reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    FUNCTION        reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    BEGIN           reduce using rule 125 (empty -> .)

    const_part                     shift and go to state 13
    empty                          shift and go to state 15

state 7

    (6) label_part -> empty .

    CONST           reduce using rule 6 (label_part -> empty .)
    TYPE            reduce using rule 6 (label_part -> empty .)
    VAR             reduce using rule 6 (label_part -> empty .)
    FUNCTION        reduce using rule 6 (label_part -> empty .)
    PROCEDURE       reduce using rule 6 (label_part -> empty .)
    BEGIN           reduce using rule 6 (label_part -> empty .)


state 8

    (2) program_head -> PROGRAM NAME . SEMI

    SEMI            shift and go to state 16


state 9

    (1) program -> program_head routine DOT .

    $end            reduce using rule 1 (program -> program_head routine DOT .)


state 10

    (3) routine -> routine_head routine_body .

    DOT             reduce using rule 3 (routine -> routine_head routine_body .)


state 11

    (60) routine_body -> compound_stmt .

    DOT             reduce using rule 60 (routine_body -> compound_stmt .)
    SEMI            reduce using rule 60 (routine_body -> compound_stmt .)


state 12

    (61) compound_stmt -> BEGIN . stmt_list END
    (62) stmt_list -> . stmt_list stmt SEMI
    (63) stmt_list -> . empty
    (125) empty -> .

    END             reduce using rule 125 (empty -> .)
    INTEGER         reduce using rule 125 (empty -> .)
    NAME            reduce using rule 125 (empty -> .)
    SYS_PROC        reduce using rule 125 (empty -> .)
    READ            reduce using rule 125 (empty -> .)
    BEGIN           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    REPEAT          reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    CASE            reduce using rule 125 (empty -> .)
    GOTO            reduce using rule 125 (empty -> .)

    stmt_list                      shift and go to state 17
    empty                          shift and go to state 18

state 13

    (5) routine_head -> label_part const_part . type_part var_part routine_part
    (19) type_part -> . TYPE type_decl_list
    (20) type_part -> . empty
    (125) empty -> .

    TYPE            shift and go to state 20
    VAR             reduce using rule 125 (empty -> .)
    FUNCTION        reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    BEGIN           reduce using rule 125 (empty -> .)

    type_part                      shift and go to state 19
    empty                          shift and go to state 21

state 14

    (7) const_part -> CONST . const_expr_list
    (9) const_expr_list -> . const_expr_list const_expr
    (10) const_expr_list -> . const_expr
    (11) const_expr -> . NAME EQUAL const_value SEMI

    NAME            shift and go to state 24

    const_expr_list                shift and go to state 22
    const_expr                     shift and go to state 23

state 15

    (8) const_part -> empty .

    TYPE            reduce using rule 8 (const_part -> empty .)
    VAR             reduce using rule 8 (const_part -> empty .)
    FUNCTION        reduce using rule 8 (const_part -> empty .)
    PROCEDURE       reduce using rule 8 (const_part -> empty .)
    BEGIN           reduce using rule 8 (const_part -> empty .)


state 16

    (2) program_head -> PROGRAM NAME SEMI .

    BEGIN           reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    CONST           reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    TYPE            reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    VAR             reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    FUNCTION        reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    PROCEDURE       reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)


state 17

    (61) compound_stmt -> BEGIN stmt_list . END
    (62) stmt_list -> stmt_list . stmt SEMI
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) proc_stmt -> . NAME
    (77) proc_stmt -> . NAME LP args_list RP
    (78) proc_stmt -> . SYS_PROC
    (79) proc_stmt -> . SYS_PROC LP expression_list RP
    (80) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (81) if_stmt -> . IF expression THEN stmt else_clause
    (84) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (85) while_stmt -> . WHILE expression DO stmt
    (86) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (89) case_stmt -> . CASE expression OF case_expr_list END
    (94) goto_stmt -> . GOTO INTEGER

    END             shift and go to state 25
    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 26
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 18

    (63) stmt_list -> empty .

    END             reduce using rule 63 (stmt_list -> empty .)
    INTEGER         reduce using rule 63 (stmt_list -> empty .)
    NAME            reduce using rule 63 (stmt_list -> empty .)
    SYS_PROC        reduce using rule 63 (stmt_list -> empty .)
    READ            reduce using rule 63 (stmt_list -> empty .)
    BEGIN           reduce using rule 63 (stmt_list -> empty .)
    IF              reduce using rule 63 (stmt_list -> empty .)
    REPEAT          reduce using rule 63 (stmt_list -> empty .)
    WHILE           reduce using rule 63 (stmt_list -> empty .)
    FOR             reduce using rule 63 (stmt_list -> empty .)
    CASE            reduce using rule 63 (stmt_list -> empty .)
    GOTO            reduce using rule 63 (stmt_list -> empty .)
    UNTIL           reduce using rule 63 (stmt_list -> empty .)


state 19

    (5) routine_head -> label_part const_part type_part . var_part routine_part
    (38) var_part -> . VAR var_decl_list
    (39) var_part -> . empty
    (125) empty -> .

    VAR             shift and go to state 48
    FUNCTION        reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    BEGIN           reduce using rule 125 (empty -> .)

    var_part                       shift and go to state 47
    empty                          shift and go to state 49

state 20

    (19) type_part -> TYPE . type_decl_list
    (21) type_decl_list -> . type_decl_list type_definition
    (22) type_decl_list -> . type_definition
    (23) type_definition -> . NAME EQUAL type_decl SEMI

    NAME            shift and go to state 52

    type_decl_list                 shift and go to state 50
    type_definition                shift and go to state 51

state 21

    (20) type_part -> empty .

    VAR             reduce using rule 20 (type_part -> empty .)
    FUNCTION        reduce using rule 20 (type_part -> empty .)
    PROCEDURE       reduce using rule 20 (type_part -> empty .)
    BEGIN           reduce using rule 20 (type_part -> empty .)


state 22

    (7) const_part -> CONST const_expr_list .
    (9) const_expr_list -> const_expr_list . const_expr
    (11) const_expr -> . NAME EQUAL const_value SEMI

    TYPE            reduce using rule 7 (const_part -> CONST const_expr_list .)
    VAR             reduce using rule 7 (const_part -> CONST const_expr_list .)
    FUNCTION        reduce using rule 7 (const_part -> CONST const_expr_list .)
    PROCEDURE       reduce using rule 7 (const_part -> CONST const_expr_list .)
    BEGIN           reduce using rule 7 (const_part -> CONST const_expr_list .)
    NAME            shift and go to state 24

    const_expr                     shift and go to state 53

state 23

    (10) const_expr_list -> const_expr .

    NAME            reduce using rule 10 (const_expr_list -> const_expr .)
    TYPE            reduce using rule 10 (const_expr_list -> const_expr .)
    VAR             reduce using rule 10 (const_expr_list -> const_expr .)
    FUNCTION        reduce using rule 10 (const_expr_list -> const_expr .)
    PROCEDURE       reduce using rule 10 (const_expr_list -> const_expr .)
    BEGIN           reduce using rule 10 (const_expr_list -> const_expr .)


state 24

    (11) const_expr -> NAME . EQUAL const_value SEMI

    EQUAL           shift and go to state 54


state 25

    (61) compound_stmt -> BEGIN stmt_list END .

    DOT             reduce using rule 61 (compound_stmt -> BEGIN stmt_list END .)
    SEMI            reduce using rule 61 (compound_stmt -> BEGIN stmt_list END .)
    ELSE            reduce using rule 61 (compound_stmt -> BEGIN stmt_list END .)


state 26

    (62) stmt_list -> stmt_list stmt . SEMI

    SEMI            shift and go to state 55


state 27

    (64) stmt -> INTEGER . COLON non_label_stmt

    COLON           shift and go to state 56


state 28

    (65) stmt -> non_label_stmt .

    SEMI            reduce using rule 65 (stmt -> non_label_stmt .)
    ELSE            reduce using rule 65 (stmt -> non_label_stmt .)


state 29

    (66) non_label_stmt -> assign_stmt .

    SEMI            reduce using rule 66 (non_label_stmt -> assign_stmt .)
    ELSE            reduce using rule 66 (non_label_stmt -> assign_stmt .)


state 30

    (67) non_label_stmt -> proc_stmt .

    SEMI            reduce using rule 67 (non_label_stmt -> proc_stmt .)
    ELSE            reduce using rule 67 (non_label_stmt -> proc_stmt .)


state 31

    (68) non_label_stmt -> compound_stmt .

    SEMI            reduce using rule 68 (non_label_stmt -> compound_stmt .)
    ELSE            reduce using rule 68 (non_label_stmt -> compound_stmt .)


state 32

    (69) non_label_stmt -> if_stmt .

    SEMI            reduce using rule 69 (non_label_stmt -> if_stmt .)
    ELSE            reduce using rule 69 (non_label_stmt -> if_stmt .)


state 33

    (70) non_label_stmt -> repeat_stmt .

    SEMI            reduce using rule 70 (non_label_stmt -> repeat_stmt .)
    ELSE            reduce using rule 70 (non_label_stmt -> repeat_stmt .)


state 34

    (71) non_label_stmt -> while_stmt .

    SEMI            reduce using rule 71 (non_label_stmt -> while_stmt .)
    ELSE            reduce using rule 71 (non_label_stmt -> while_stmt .)


state 35

    (72) non_label_stmt -> for_stmt .

    SEMI            reduce using rule 72 (non_label_stmt -> for_stmt .)
    ELSE            reduce using rule 72 (non_label_stmt -> for_stmt .)


state 36

    (73) non_label_stmt -> case_stmt .

    SEMI            reduce using rule 73 (non_label_stmt -> case_stmt .)
    ELSE            reduce using rule 73 (non_label_stmt -> case_stmt .)


state 37

    (74) non_label_stmt -> goto_stmt .

    SEMI            reduce using rule 74 (non_label_stmt -> goto_stmt .)
    ELSE            reduce using rule 74 (non_label_stmt -> goto_stmt .)


state 38

    (75) assign_stmt -> NAME . ASSIGN expression
    (76) proc_stmt -> NAME .
    (77) proc_stmt -> NAME . LP args_list RP

    ASSIGN          shift and go to state 57
    SEMI            reduce using rule 76 (proc_stmt -> NAME .)
    ELSE            reduce using rule 76 (proc_stmt -> NAME .)
    LP              shift and go to state 58


state 39

    (78) proc_stmt -> SYS_PROC .
    (79) proc_stmt -> SYS_PROC . LP expression_list RP

    SEMI            reduce using rule 78 (proc_stmt -> SYS_PROC .)
    ELSE            reduce using rule 78 (proc_stmt -> SYS_PROC .)
    LP              shift and go to state 59


state 40

    (80) proc_stmt -> READ . LP factor RP

    LP              shift and go to state 60


state 41

    (81) if_stmt -> IF . expression THEN stmt else_clause
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expression                     shift and go to state 61
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 42

    (84) repeat_stmt -> REPEAT . stmt_list UNTIL expression
    (62) stmt_list -> . stmt_list stmt SEMI
    (63) stmt_list -> . empty
    (125) empty -> .

    UNTIL           reduce using rule 125 (empty -> .)
    INTEGER         reduce using rule 125 (empty -> .)
    NAME            reduce using rule 125 (empty -> .)
    SYS_PROC        reduce using rule 125 (empty -> .)
    READ            reduce using rule 125 (empty -> .)
    BEGIN           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    REPEAT          reduce using rule 125 (empty -> .)
    WHILE           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    CASE            reduce using rule 125 (empty -> .)
    GOTO            reduce using rule 125 (empty -> .)

    stmt_list                      shift and go to state 78
    empty                          shift and go to state 18

state 43

    (85) while_stmt -> WHILE . expression DO stmt
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expression                     shift and go to state 79
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 44

    (86) for_stmt -> FOR . NAME ASSIGN expression direction expression DO stmt

    NAME            shift and go to state 80


state 45

    (89) case_stmt -> CASE . expression OF case_expr_list END
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expression                     shift and go to state 81
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 46

    (94) goto_stmt -> GOTO . INTEGER

    INTEGER         shift and go to state 82


state 47

    (5) routine_head -> label_part const_part type_part var_part . routine_part
    (43) routine_part -> . routine_part function_decl
    (44) routine_part -> . routine_part procedure_decl
    (45) routine_part -> . function_decl
    (46) routine_part -> . procedure_decl
    (47) routine_part -> . empty
    (48) function_decl -> . function_head SEMI sub_routine SEMI
    (50) procedure_decl -> . procedure_head SEMI sub_routine SEMI
    (125) empty -> .
    (49) function_head -> . FUNCTION NAME parameters COLON simple_type_decl
    (51) procedure_head -> . PROCEDURE NAME parameters

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PROCEDURE resolved as shift
    BEGIN           reduce using rule 125 (empty -> .)
    FUNCTION        shift and go to state 89
    PROCEDURE       shift and go to state 90

  ! FUNCTION        [ reduce using rule 125 (empty -> .) ]
  ! PROCEDURE       [ reduce using rule 125 (empty -> .) ]

    routine_part                   shift and go to state 83
    function_decl                  shift and go to state 84
    procedure_decl                 shift and go to state 85
    empty                          shift and go to state 86
    function_head                  shift and go to state 87
    procedure_head                 shift and go to state 88

state 48

    (38) var_part -> VAR . var_decl_list
    (40) var_decl_list -> . var_decl_list var_decl
    (41) var_decl_list -> . var_decl
    (42) var_decl -> . name_list COLON type_decl SEMI
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    NAME            shift and go to state 94

    var_decl_list                  shift and go to state 91
    var_decl                       shift and go to state 92
    name_list                      shift and go to state 93

state 49

    (39) var_part -> empty .

    FUNCTION        reduce using rule 39 (var_part -> empty .)
    PROCEDURE       reduce using rule 39 (var_part -> empty .)
    BEGIN           reduce using rule 39 (var_part -> empty .)


state 50

    (19) type_part -> TYPE type_decl_list .
    (21) type_decl_list -> type_decl_list . type_definition
    (23) type_definition -> . NAME EQUAL type_decl SEMI

    VAR             reduce using rule 19 (type_part -> TYPE type_decl_list .)
    FUNCTION        reduce using rule 19 (type_part -> TYPE type_decl_list .)
    PROCEDURE       reduce using rule 19 (type_part -> TYPE type_decl_list .)
    BEGIN           reduce using rule 19 (type_part -> TYPE type_decl_list .)
    NAME            shift and go to state 52

    type_definition                shift and go to state 95

state 51

    (22) type_decl_list -> type_definition .

    NAME            reduce using rule 22 (type_decl_list -> type_definition .)
    VAR             reduce using rule 22 (type_decl_list -> type_definition .)
    FUNCTION        reduce using rule 22 (type_decl_list -> type_definition .)
    PROCEDURE       reduce using rule 22 (type_decl_list -> type_definition .)
    BEGIN           reduce using rule 22 (type_decl_list -> type_definition .)


state 52

    (23) type_definition -> NAME . EQUAL type_decl SEMI

    EQUAL           shift and go to state 96


state 53

    (9) const_expr_list -> const_expr_list const_expr .

    NAME            reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    TYPE            reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    VAR             reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    FUNCTION        reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    PROCEDURE       reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    BEGIN           reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)


state 54

    (11) const_expr -> NAME EQUAL . const_value SEMI
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    const_value                    shift and go to state 97

state 55

    (62) stmt_list -> stmt_list stmt SEMI .

    END             reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    INTEGER         reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    NAME            reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    SYS_PROC        reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    READ            reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    BEGIN           reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    IF              reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    REPEAT          reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    WHILE           reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    FOR             reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    CASE            reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    GOTO            reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    UNTIL           reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)


state 56

    (64) stmt -> INTEGER COLON . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) proc_stmt -> . NAME
    (77) proc_stmt -> . NAME LP args_list RP
    (78) proc_stmt -> . SYS_PROC
    (79) proc_stmt -> . SYS_PROC LP expression_list RP
    (80) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (81) if_stmt -> . IF expression THEN stmt else_clause
    (84) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (85) while_stmt -> . WHILE expression DO stmt
    (86) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (89) case_stmt -> . CASE expression OF case_expr_list END
    (94) goto_stmt -> . GOTO INTEGER

    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    non_label_stmt                 shift and go to state 98
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 57

    (75) assign_stmt -> NAME ASSIGN . expression
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expression                     shift and go to state 99
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 58

    (77) proc_stmt -> NAME LP . args_list RP
    (123) args_list -> . args_list COMMA expression
    (124) args_list -> . expression
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    args_list                      shift and go to state 100
    expression                     shift and go to state 101
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 59

    (79) proc_stmt -> SYS_PROC LP . expression_list RP
    (95) expression_list -> . expression_list COMMA expression
    (96) expression_list -> . expression
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expression_list                shift and go to state 102
    expression                     shift and go to state 103
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 60

    (80) proc_stmt -> READ LP . factor RP
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    factor                         shift and go to state 104
    const_value                    shift and go to state 69

state 61

    (81) if_stmt -> IF expression . THEN stmt else_clause
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr

    THEN            shift and go to state 105
    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111


state 62

    (103) expression -> expr .
    (104) expr -> expr . PLUS term
    (105) expr -> expr . MINUS term
    (106) expr -> expr . OR term

    THEN            reduce using rule 103 (expression -> expr .)
    GE              reduce using rule 103 (expression -> expr .)
    GT              reduce using rule 103 (expression -> expr .)
    LE              reduce using rule 103 (expression -> expr .)
    LT              reduce using rule 103 (expression -> expr .)
    EQUAL           reduce using rule 103 (expression -> expr .)
    UNEQUAL         reduce using rule 103 (expression -> expr .)
    DO              reduce using rule 103 (expression -> expr .)
    OF              reduce using rule 103 (expression -> expr .)
    SEMI            reduce using rule 103 (expression -> expr .)
    ELSE            reduce using rule 103 (expression -> expr .)
    RP              reduce using rule 103 (expression -> expr .)
    COMMA           reduce using rule 103 (expression -> expr .)
    RB              reduce using rule 103 (expression -> expr .)
    TO              reduce using rule 103 (expression -> expr .)
    DOWNTO          reduce using rule 103 (expression -> expr .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    OR              shift and go to state 114


state 63

    (107) expr -> term .
    (108) term -> term . MUL factor
    (109) term -> term . DIV factor
    (110) term -> term . MOD factor
    (111) term -> term . AND factor

    PLUS            reduce using rule 107 (expr -> term .)
    MINUS           reduce using rule 107 (expr -> term .)
    OR              reduce using rule 107 (expr -> term .)
    THEN            reduce using rule 107 (expr -> term .)
    GE              reduce using rule 107 (expr -> term .)
    GT              reduce using rule 107 (expr -> term .)
    LE              reduce using rule 107 (expr -> term .)
    LT              reduce using rule 107 (expr -> term .)
    EQUAL           reduce using rule 107 (expr -> term .)
    UNEQUAL         reduce using rule 107 (expr -> term .)
    DO              reduce using rule 107 (expr -> term .)
    OF              reduce using rule 107 (expr -> term .)
    SEMI            reduce using rule 107 (expr -> term .)
    ELSE            reduce using rule 107 (expr -> term .)
    RP              reduce using rule 107 (expr -> term .)
    COMMA           reduce using rule 107 (expr -> term .)
    RB              reduce using rule 107 (expr -> term .)
    TO              reduce using rule 107 (expr -> term .)
    DOWNTO          reduce using rule 107 (expr -> term .)
    MUL             shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    AND             shift and go to state 118


state 64

    (120) factor -> MINUS . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    factor                         shift and go to state 119
    const_value                    shift and go to state 69

state 65

    (112) term -> factor .

    MUL             reduce using rule 112 (term -> factor .)
    DIV             reduce using rule 112 (term -> factor .)
    MOD             reduce using rule 112 (term -> factor .)
    AND             reduce using rule 112 (term -> factor .)
    PLUS            reduce using rule 112 (term -> factor .)
    MINUS           reduce using rule 112 (term -> factor .)
    OR              reduce using rule 112 (term -> factor .)
    THEN            reduce using rule 112 (term -> factor .)
    GE              reduce using rule 112 (term -> factor .)
    GT              reduce using rule 112 (term -> factor .)
    LE              reduce using rule 112 (term -> factor .)
    LT              reduce using rule 112 (term -> factor .)
    EQUAL           reduce using rule 112 (term -> factor .)
    UNEQUAL         reduce using rule 112 (term -> factor .)
    DO              reduce using rule 112 (term -> factor .)
    OF              reduce using rule 112 (term -> factor .)
    SEMI            reduce using rule 112 (term -> factor .)
    ELSE            reduce using rule 112 (term -> factor .)
    RP              reduce using rule 112 (term -> factor .)
    COMMA           reduce using rule 112 (term -> factor .)
    RB              reduce using rule 112 (term -> factor .)
    TO              reduce using rule 112 (term -> factor .)
    DOWNTO          reduce using rule 112 (term -> factor .)


state 66

    (113) factor -> SYS_FUNCT .
    (114) factor -> SYS_FUNCT . LP args_list RP

    MUL             reduce using rule 113 (factor -> SYS_FUNCT .)
    DIV             reduce using rule 113 (factor -> SYS_FUNCT .)
    MOD             reduce using rule 113 (factor -> SYS_FUNCT .)
    AND             reduce using rule 113 (factor -> SYS_FUNCT .)
    PLUS            reduce using rule 113 (factor -> SYS_FUNCT .)
    MINUS           reduce using rule 113 (factor -> SYS_FUNCT .)
    OR              reduce using rule 113 (factor -> SYS_FUNCT .)
    THEN            reduce using rule 113 (factor -> SYS_FUNCT .)
    GE              reduce using rule 113 (factor -> SYS_FUNCT .)
    GT              reduce using rule 113 (factor -> SYS_FUNCT .)
    LE              reduce using rule 113 (factor -> SYS_FUNCT .)
    LT              reduce using rule 113 (factor -> SYS_FUNCT .)
    EQUAL           reduce using rule 113 (factor -> SYS_FUNCT .)
    UNEQUAL         reduce using rule 113 (factor -> SYS_FUNCT .)
    DO              reduce using rule 113 (factor -> SYS_FUNCT .)
    OF              reduce using rule 113 (factor -> SYS_FUNCT .)
    SEMI            reduce using rule 113 (factor -> SYS_FUNCT .)
    ELSE            reduce using rule 113 (factor -> SYS_FUNCT .)
    RP              reduce using rule 113 (factor -> SYS_FUNCT .)
    COMMA           reduce using rule 113 (factor -> SYS_FUNCT .)
    RB              reduce using rule 113 (factor -> SYS_FUNCT .)
    TO              reduce using rule 113 (factor -> SYS_FUNCT .)
    DOWNTO          reduce using rule 113 (factor -> SYS_FUNCT .)
    LP              shift and go to state 120


state 67

    (118) factor -> LP . expression RP
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expression                     shift and go to state 121
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 68

    (115) factor -> NAME . LP args_list RP
    (116) factor -> NAME .
    (121) factor -> NAME . LB expression RB
    (122) factor -> NAME . DOT NAME

    LP              shift and go to state 122
    MUL             reduce using rule 116 (factor -> NAME .)
    DIV             reduce using rule 116 (factor -> NAME .)
    MOD             reduce using rule 116 (factor -> NAME .)
    AND             reduce using rule 116 (factor -> NAME .)
    PLUS            reduce using rule 116 (factor -> NAME .)
    MINUS           reduce using rule 116 (factor -> NAME .)
    OR              reduce using rule 116 (factor -> NAME .)
    THEN            reduce using rule 116 (factor -> NAME .)
    GE              reduce using rule 116 (factor -> NAME .)
    GT              reduce using rule 116 (factor -> NAME .)
    LE              reduce using rule 116 (factor -> NAME .)
    LT              reduce using rule 116 (factor -> NAME .)
    EQUAL           reduce using rule 116 (factor -> NAME .)
    UNEQUAL         reduce using rule 116 (factor -> NAME .)
    DO              reduce using rule 116 (factor -> NAME .)
    OF              reduce using rule 116 (factor -> NAME .)
    SEMI            reduce using rule 116 (factor -> NAME .)
    ELSE            reduce using rule 116 (factor -> NAME .)
    RP              reduce using rule 116 (factor -> NAME .)
    COMMA           reduce using rule 116 (factor -> NAME .)
    RB              reduce using rule 116 (factor -> NAME .)
    TO              reduce using rule 116 (factor -> NAME .)
    DOWNTO          reduce using rule 116 (factor -> NAME .)
    LB              shift and go to state 123
    DOT             shift and go to state 124


state 69

    (117) factor -> const_value .

    MUL             reduce using rule 117 (factor -> const_value .)
    DIV             reduce using rule 117 (factor -> const_value .)
    MOD             reduce using rule 117 (factor -> const_value .)
    AND             reduce using rule 117 (factor -> const_value .)
    PLUS            reduce using rule 117 (factor -> const_value .)
    MINUS           reduce using rule 117 (factor -> const_value .)
    OR              reduce using rule 117 (factor -> const_value .)
    THEN            reduce using rule 117 (factor -> const_value .)
    GE              reduce using rule 117 (factor -> const_value .)
    GT              reduce using rule 117 (factor -> const_value .)
    LE              reduce using rule 117 (factor -> const_value .)
    LT              reduce using rule 117 (factor -> const_value .)
    EQUAL           reduce using rule 117 (factor -> const_value .)
    UNEQUAL         reduce using rule 117 (factor -> const_value .)
    DO              reduce using rule 117 (factor -> const_value .)
    OF              reduce using rule 117 (factor -> const_value .)
    SEMI            reduce using rule 117 (factor -> const_value .)
    ELSE            reduce using rule 117 (factor -> const_value .)
    RP              reduce using rule 117 (factor -> const_value .)
    COMMA           reduce using rule 117 (factor -> const_value .)
    RB              reduce using rule 117 (factor -> const_value .)
    TO              reduce using rule 117 (factor -> const_value .)
    DOWNTO          reduce using rule 117 (factor -> const_value .)


state 70

    (119) factor -> NOT . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    factor                         shift and go to state 125
    const_value                    shift and go to state 69

state 71

    (12) const_value -> INTEGER .

    MUL             reduce using rule 12 (const_value -> INTEGER .)
    DIV             reduce using rule 12 (const_value -> INTEGER .)
    MOD             reduce using rule 12 (const_value -> INTEGER .)
    AND             reduce using rule 12 (const_value -> INTEGER .)
    PLUS            reduce using rule 12 (const_value -> INTEGER .)
    MINUS           reduce using rule 12 (const_value -> INTEGER .)
    OR              reduce using rule 12 (const_value -> INTEGER .)
    THEN            reduce using rule 12 (const_value -> INTEGER .)
    GE              reduce using rule 12 (const_value -> INTEGER .)
    GT              reduce using rule 12 (const_value -> INTEGER .)
    LE              reduce using rule 12 (const_value -> INTEGER .)
    LT              reduce using rule 12 (const_value -> INTEGER .)
    EQUAL           reduce using rule 12 (const_value -> INTEGER .)
    UNEQUAL         reduce using rule 12 (const_value -> INTEGER .)
    DO              reduce using rule 12 (const_value -> INTEGER .)
    OF              reduce using rule 12 (const_value -> INTEGER .)
    SEMI            reduce using rule 12 (const_value -> INTEGER .)
    ELSE            reduce using rule 12 (const_value -> INTEGER .)
    RP              reduce using rule 12 (const_value -> INTEGER .)
    COMMA           reduce using rule 12 (const_value -> INTEGER .)
    RB              reduce using rule 12 (const_value -> INTEGER .)
    TO              reduce using rule 12 (const_value -> INTEGER .)
    DOWNTO          reduce using rule 12 (const_value -> INTEGER .)
    DOTDOT          reduce using rule 12 (const_value -> INTEGER .)
    COLON           reduce using rule 12 (const_value -> INTEGER .)


state 72

    (13) const_value -> REAL .

    MUL             reduce using rule 13 (const_value -> REAL .)
    DIV             reduce using rule 13 (const_value -> REAL .)
    MOD             reduce using rule 13 (const_value -> REAL .)
    AND             reduce using rule 13 (const_value -> REAL .)
    PLUS            reduce using rule 13 (const_value -> REAL .)
    MINUS           reduce using rule 13 (const_value -> REAL .)
    OR              reduce using rule 13 (const_value -> REAL .)
    THEN            reduce using rule 13 (const_value -> REAL .)
    GE              reduce using rule 13 (const_value -> REAL .)
    GT              reduce using rule 13 (const_value -> REAL .)
    LE              reduce using rule 13 (const_value -> REAL .)
    LT              reduce using rule 13 (const_value -> REAL .)
    EQUAL           reduce using rule 13 (const_value -> REAL .)
    UNEQUAL         reduce using rule 13 (const_value -> REAL .)
    DO              reduce using rule 13 (const_value -> REAL .)
    OF              reduce using rule 13 (const_value -> REAL .)
    SEMI            reduce using rule 13 (const_value -> REAL .)
    ELSE            reduce using rule 13 (const_value -> REAL .)
    RP              reduce using rule 13 (const_value -> REAL .)
    COMMA           reduce using rule 13 (const_value -> REAL .)
    RB              reduce using rule 13 (const_value -> REAL .)
    TO              reduce using rule 13 (const_value -> REAL .)
    DOWNTO          reduce using rule 13 (const_value -> REAL .)
    DOTDOT          reduce using rule 13 (const_value -> REAL .)
    COLON           reduce using rule 13 (const_value -> REAL .)


state 73

    (14) const_value -> CHAR .

    MUL             reduce using rule 14 (const_value -> CHAR .)
    DIV             reduce using rule 14 (const_value -> CHAR .)
    MOD             reduce using rule 14 (const_value -> CHAR .)
    AND             reduce using rule 14 (const_value -> CHAR .)
    PLUS            reduce using rule 14 (const_value -> CHAR .)
    MINUS           reduce using rule 14 (const_value -> CHAR .)
    OR              reduce using rule 14 (const_value -> CHAR .)
    THEN            reduce using rule 14 (const_value -> CHAR .)
    GE              reduce using rule 14 (const_value -> CHAR .)
    GT              reduce using rule 14 (const_value -> CHAR .)
    LE              reduce using rule 14 (const_value -> CHAR .)
    LT              reduce using rule 14 (const_value -> CHAR .)
    EQUAL           reduce using rule 14 (const_value -> CHAR .)
    UNEQUAL         reduce using rule 14 (const_value -> CHAR .)
    DO              reduce using rule 14 (const_value -> CHAR .)
    OF              reduce using rule 14 (const_value -> CHAR .)
    SEMI            reduce using rule 14 (const_value -> CHAR .)
    ELSE            reduce using rule 14 (const_value -> CHAR .)
    RP              reduce using rule 14 (const_value -> CHAR .)
    COMMA           reduce using rule 14 (const_value -> CHAR .)
    RB              reduce using rule 14 (const_value -> CHAR .)
    TO              reduce using rule 14 (const_value -> CHAR .)
    DOWNTO          reduce using rule 14 (const_value -> CHAR .)
    DOTDOT          reduce using rule 14 (const_value -> CHAR .)
    COLON           reduce using rule 14 (const_value -> CHAR .)


state 74

    (15) const_value -> STRING .

    MUL             reduce using rule 15 (const_value -> STRING .)
    DIV             reduce using rule 15 (const_value -> STRING .)
    MOD             reduce using rule 15 (const_value -> STRING .)
    AND             reduce using rule 15 (const_value -> STRING .)
    PLUS            reduce using rule 15 (const_value -> STRING .)
    MINUS           reduce using rule 15 (const_value -> STRING .)
    OR              reduce using rule 15 (const_value -> STRING .)
    THEN            reduce using rule 15 (const_value -> STRING .)
    GE              reduce using rule 15 (const_value -> STRING .)
    GT              reduce using rule 15 (const_value -> STRING .)
    LE              reduce using rule 15 (const_value -> STRING .)
    LT              reduce using rule 15 (const_value -> STRING .)
    EQUAL           reduce using rule 15 (const_value -> STRING .)
    UNEQUAL         reduce using rule 15 (const_value -> STRING .)
    DO              reduce using rule 15 (const_value -> STRING .)
    OF              reduce using rule 15 (const_value -> STRING .)
    SEMI            reduce using rule 15 (const_value -> STRING .)
    ELSE            reduce using rule 15 (const_value -> STRING .)
    RP              reduce using rule 15 (const_value -> STRING .)
    COMMA           reduce using rule 15 (const_value -> STRING .)
    RB              reduce using rule 15 (const_value -> STRING .)
    TO              reduce using rule 15 (const_value -> STRING .)
    DOWNTO          reduce using rule 15 (const_value -> STRING .)
    DOTDOT          reduce using rule 15 (const_value -> STRING .)
    COLON           reduce using rule 15 (const_value -> STRING .)


state 75

    (16) const_value -> SYS_CON .

    MUL             reduce using rule 16 (const_value -> SYS_CON .)
    DIV             reduce using rule 16 (const_value -> SYS_CON .)
    MOD             reduce using rule 16 (const_value -> SYS_CON .)
    AND             reduce using rule 16 (const_value -> SYS_CON .)
    PLUS            reduce using rule 16 (const_value -> SYS_CON .)
    MINUS           reduce using rule 16 (const_value -> SYS_CON .)
    OR              reduce using rule 16 (const_value -> SYS_CON .)
    THEN            reduce using rule 16 (const_value -> SYS_CON .)
    GE              reduce using rule 16 (const_value -> SYS_CON .)
    GT              reduce using rule 16 (const_value -> SYS_CON .)
    LE              reduce using rule 16 (const_value -> SYS_CON .)
    LT              reduce using rule 16 (const_value -> SYS_CON .)
    EQUAL           reduce using rule 16 (const_value -> SYS_CON .)
    UNEQUAL         reduce using rule 16 (const_value -> SYS_CON .)
    DO              reduce using rule 16 (const_value -> SYS_CON .)
    OF              reduce using rule 16 (const_value -> SYS_CON .)
    SEMI            reduce using rule 16 (const_value -> SYS_CON .)
    ELSE            reduce using rule 16 (const_value -> SYS_CON .)
    RP              reduce using rule 16 (const_value -> SYS_CON .)
    COMMA           reduce using rule 16 (const_value -> SYS_CON .)
    RB              reduce using rule 16 (const_value -> SYS_CON .)
    TO              reduce using rule 16 (const_value -> SYS_CON .)
    DOWNTO          reduce using rule 16 (const_value -> SYS_CON .)
    DOTDOT          reduce using rule 16 (const_value -> SYS_CON .)
    COLON           reduce using rule 16 (const_value -> SYS_CON .)


state 76

    (17) const_value -> true .

    MUL             reduce using rule 17 (const_value -> true .)
    DIV             reduce using rule 17 (const_value -> true .)
    MOD             reduce using rule 17 (const_value -> true .)
    AND             reduce using rule 17 (const_value -> true .)
    PLUS            reduce using rule 17 (const_value -> true .)
    MINUS           reduce using rule 17 (const_value -> true .)
    OR              reduce using rule 17 (const_value -> true .)
    THEN            reduce using rule 17 (const_value -> true .)
    GE              reduce using rule 17 (const_value -> true .)
    GT              reduce using rule 17 (const_value -> true .)
    LE              reduce using rule 17 (const_value -> true .)
    LT              reduce using rule 17 (const_value -> true .)
    EQUAL           reduce using rule 17 (const_value -> true .)
    UNEQUAL         reduce using rule 17 (const_value -> true .)
    DO              reduce using rule 17 (const_value -> true .)
    OF              reduce using rule 17 (const_value -> true .)
    SEMI            reduce using rule 17 (const_value -> true .)
    ELSE            reduce using rule 17 (const_value -> true .)
    RP              reduce using rule 17 (const_value -> true .)
    COMMA           reduce using rule 17 (const_value -> true .)
    RB              reduce using rule 17 (const_value -> true .)
    TO              reduce using rule 17 (const_value -> true .)
    DOWNTO          reduce using rule 17 (const_value -> true .)
    DOTDOT          reduce using rule 17 (const_value -> true .)
    COLON           reduce using rule 17 (const_value -> true .)


state 77

    (18) const_value -> false .

    MUL             reduce using rule 18 (const_value -> false .)
    DIV             reduce using rule 18 (const_value -> false .)
    MOD             reduce using rule 18 (const_value -> false .)
    AND             reduce using rule 18 (const_value -> false .)
    PLUS            reduce using rule 18 (const_value -> false .)
    MINUS           reduce using rule 18 (const_value -> false .)
    OR              reduce using rule 18 (const_value -> false .)
    THEN            reduce using rule 18 (const_value -> false .)
    GE              reduce using rule 18 (const_value -> false .)
    GT              reduce using rule 18 (const_value -> false .)
    LE              reduce using rule 18 (const_value -> false .)
    LT              reduce using rule 18 (const_value -> false .)
    EQUAL           reduce using rule 18 (const_value -> false .)
    UNEQUAL         reduce using rule 18 (const_value -> false .)
    DO              reduce using rule 18 (const_value -> false .)
    OF              reduce using rule 18 (const_value -> false .)
    SEMI            reduce using rule 18 (const_value -> false .)
    ELSE            reduce using rule 18 (const_value -> false .)
    RP              reduce using rule 18 (const_value -> false .)
    COMMA           reduce using rule 18 (const_value -> false .)
    RB              reduce using rule 18 (const_value -> false .)
    TO              reduce using rule 18 (const_value -> false .)
    DOWNTO          reduce using rule 18 (const_value -> false .)
    DOTDOT          reduce using rule 18 (const_value -> false .)
    COLON           reduce using rule 18 (const_value -> false .)


state 78

    (84) repeat_stmt -> REPEAT stmt_list . UNTIL expression
    (62) stmt_list -> stmt_list . stmt SEMI
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) proc_stmt -> . NAME
    (77) proc_stmt -> . NAME LP args_list RP
    (78) proc_stmt -> . SYS_PROC
    (79) proc_stmt -> . SYS_PROC LP expression_list RP
    (80) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (81) if_stmt -> . IF expression THEN stmt else_clause
    (84) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (85) while_stmt -> . WHILE expression DO stmt
    (86) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (89) case_stmt -> . CASE expression OF case_expr_list END
    (94) goto_stmt -> . GOTO INTEGER

    UNTIL           shift and go to state 126
    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 26
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 79

    (85) while_stmt -> WHILE expression . DO stmt
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr

    DO              shift and go to state 127
    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111


state 80

    (86) for_stmt -> FOR NAME . ASSIGN expression direction expression DO stmt

    ASSIGN          shift and go to state 128


state 81

    (89) case_stmt -> CASE expression . OF case_expr_list END
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr

    OF              shift and go to state 129
    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111


state 82

    (94) goto_stmt -> GOTO INTEGER .

    SEMI            reduce using rule 94 (goto_stmt -> GOTO INTEGER .)
    ELSE            reduce using rule 94 (goto_stmt -> GOTO INTEGER .)


state 83

    (5) routine_head -> label_part const_part type_part var_part routine_part .
    (43) routine_part -> routine_part . function_decl
    (44) routine_part -> routine_part . procedure_decl
    (48) function_decl -> . function_head SEMI sub_routine SEMI
    (50) procedure_decl -> . procedure_head SEMI sub_routine SEMI
    (49) function_head -> . FUNCTION NAME parameters COLON simple_type_decl
    (51) procedure_head -> . PROCEDURE NAME parameters

    BEGIN           reduce using rule 5 (routine_head -> label_part const_part type_part var_part routine_part .)
    FUNCTION        shift and go to state 89
    PROCEDURE       shift and go to state 90

    function_decl                  shift and go to state 130
    procedure_decl                 shift and go to state 131
    function_head                  shift and go to state 87
    procedure_head                 shift and go to state 88

state 84

    (45) routine_part -> function_decl .

    FUNCTION        reduce using rule 45 (routine_part -> function_decl .)
    PROCEDURE       reduce using rule 45 (routine_part -> function_decl .)
    BEGIN           reduce using rule 45 (routine_part -> function_decl .)


state 85

    (46) routine_part -> procedure_decl .

    FUNCTION        reduce using rule 46 (routine_part -> procedure_decl .)
    PROCEDURE       reduce using rule 46 (routine_part -> procedure_decl .)
    BEGIN           reduce using rule 46 (routine_part -> procedure_decl .)


state 86

    (47) routine_part -> empty .

    FUNCTION        reduce using rule 47 (routine_part -> empty .)
    PROCEDURE       reduce using rule 47 (routine_part -> empty .)
    BEGIN           reduce using rule 47 (routine_part -> empty .)


state 87

    (48) function_decl -> function_head . SEMI sub_routine SEMI

    SEMI            shift and go to state 132


state 88

    (50) procedure_decl -> procedure_head . SEMI sub_routine SEMI

    SEMI            shift and go to state 133


state 89

    (49) function_head -> FUNCTION . NAME parameters COLON simple_type_decl

    NAME            shift and go to state 134


state 90

    (51) procedure_head -> PROCEDURE . NAME parameters

    NAME            shift and go to state 135


state 91

    (38) var_part -> VAR var_decl_list .
    (40) var_decl_list -> var_decl_list . var_decl
    (42) var_decl -> . name_list COLON type_decl SEMI
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    FUNCTION        reduce using rule 38 (var_part -> VAR var_decl_list .)
    PROCEDURE       reduce using rule 38 (var_part -> VAR var_decl_list .)
    BEGIN           reduce using rule 38 (var_part -> VAR var_decl_list .)
    NAME            shift and go to state 94

    var_decl                       shift and go to state 136
    name_list                      shift and go to state 93

state 92

    (41) var_decl_list -> var_decl .

    NAME            reduce using rule 41 (var_decl_list -> var_decl .)
    FUNCTION        reduce using rule 41 (var_decl_list -> var_decl .)
    PROCEDURE       reduce using rule 41 (var_decl_list -> var_decl .)
    BEGIN           reduce using rule 41 (var_decl_list -> var_decl .)


state 93

    (42) var_decl -> name_list . COLON type_decl SEMI
    (36) name_list -> name_list . COMMA NAME

    COLON           shift and go to state 137
    COMMA           shift and go to state 138


state 94

    (37) name_list -> NAME .

    COLON           reduce using rule 37 (name_list -> NAME .)
    COMMA           reduce using rule 37 (name_list -> NAME .)
    RP              reduce using rule 37 (name_list -> NAME .)


state 95

    (21) type_decl_list -> type_decl_list type_definition .

    NAME            reduce using rule 21 (type_decl_list -> type_decl_list type_definition .)
    VAR             reduce using rule 21 (type_decl_list -> type_decl_list type_definition .)
    FUNCTION        reduce using rule 21 (type_decl_list -> type_decl_list type_definition .)
    PROCEDURE       reduce using rule 21 (type_decl_list -> type_decl_list type_definition .)
    BEGIN           reduce using rule 21 (type_decl_list -> type_decl_list type_definition .)


state 96

    (23) type_definition -> NAME EQUAL . type_decl SEMI
    (24) type_decl -> . simple_type_decl
    (25) type_decl -> . array_type_decl
    (26) type_decl -> . record_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (31) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (32) record_type_decl -> . RECORD field_decl_list END
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 144
    NAME            shift and go to state 139
    LP              shift and go to state 145
    ARRAY           shift and go to state 147
    RECORD          shift and go to state 148
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    type_decl                      shift and go to state 140
    simple_type_decl               shift and go to state 141
    array_type_decl                shift and go to state 142
    record_type_decl               shift and go to state 143
    const_value                    shift and go to state 146

state 97

    (11) const_expr -> NAME EQUAL const_value . SEMI

    SEMI            shift and go to state 149


state 98

    (64) stmt -> INTEGER COLON non_label_stmt .

    SEMI            reduce using rule 64 (stmt -> INTEGER COLON non_label_stmt .)
    ELSE            reduce using rule 64 (stmt -> INTEGER COLON non_label_stmt .)


state 99

    (75) assign_stmt -> NAME ASSIGN expression .
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 75 (assign_stmt -> NAME ASSIGN expression .)
    ELSE            reduce using rule 75 (assign_stmt -> NAME ASSIGN expression .)
    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111


state 100

    (77) proc_stmt -> NAME LP args_list . RP
    (123) args_list -> args_list . COMMA expression

    RP              shift and go to state 150
    COMMA           shift and go to state 151


state 101

    (124) args_list -> expression .
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr

    RP              reduce using rule 124 (args_list -> expression .)
    COMMA           reduce using rule 124 (args_list -> expression .)
    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111


state 102

    (79) proc_stmt -> SYS_PROC LP expression_list . RP
    (95) expression_list -> expression_list . COMMA expression

    RP              shift and go to state 152
    COMMA           shift and go to state 153


state 103

    (96) expression_list -> expression .
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr

    RP              reduce using rule 96 (expression_list -> expression .)
    COMMA           reduce using rule 96 (expression_list -> expression .)
    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111


state 104

    (80) proc_stmt -> READ LP factor . RP

    RP              shift and go to state 154


state 105

    (81) if_stmt -> IF expression THEN . stmt else_clause
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) proc_stmt -> . NAME
    (77) proc_stmt -> . NAME LP args_list RP
    (78) proc_stmt -> . SYS_PROC
    (79) proc_stmt -> . SYS_PROC LP expression_list RP
    (80) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (81) if_stmt -> . IF expression THEN stmt else_clause
    (84) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (85) while_stmt -> . WHILE expression DO stmt
    (86) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (89) case_stmt -> . CASE expression OF case_expr_list END
    (94) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 155
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 106

    (97) expression -> expression GE . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expr                           shift and go to state 156
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 107

    (98) expression -> expression GT . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expr                           shift and go to state 157
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 108

    (99) expression -> expression LE . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expr                           shift and go to state 158
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 109

    (100) expression -> expression LT . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expr                           shift and go to state 159
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 110

    (101) expression -> expression EQUAL . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expr                           shift and go to state 160
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 111

    (102) expression -> expression UNEQUAL . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expr                           shift and go to state 161
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 112

    (104) expr -> expr PLUS . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    term                           shift and go to state 162
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 113

    (105) expr -> expr MINUS . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    term                           shift and go to state 163
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 114

    (106) expr -> expr OR . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    term                           shift and go to state 164
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 115

    (108) term -> term MUL . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    factor                         shift and go to state 165
    const_value                    shift and go to state 69

state 116

    (109) term -> term DIV . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    factor                         shift and go to state 166
    const_value                    shift and go to state 69

state 117

    (110) term -> term MOD . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    factor                         shift and go to state 167
    const_value                    shift and go to state 69

state 118

    (111) term -> term AND . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    factor                         shift and go to state 168
    const_value                    shift and go to state 69

state 119

    (120) factor -> MINUS factor .

    MUL             reduce using rule 120 (factor -> MINUS factor .)
    DIV             reduce using rule 120 (factor -> MINUS factor .)
    MOD             reduce using rule 120 (factor -> MINUS factor .)
    AND             reduce using rule 120 (factor -> MINUS factor .)
    PLUS            reduce using rule 120 (factor -> MINUS factor .)
    MINUS           reduce using rule 120 (factor -> MINUS factor .)
    OR              reduce using rule 120 (factor -> MINUS factor .)
    THEN            reduce using rule 120 (factor -> MINUS factor .)
    GE              reduce using rule 120 (factor -> MINUS factor .)
    GT              reduce using rule 120 (factor -> MINUS factor .)
    LE              reduce using rule 120 (factor -> MINUS factor .)
    LT              reduce using rule 120 (factor -> MINUS factor .)
    EQUAL           reduce using rule 120 (factor -> MINUS factor .)
    UNEQUAL         reduce using rule 120 (factor -> MINUS factor .)
    DO              reduce using rule 120 (factor -> MINUS factor .)
    OF              reduce using rule 120 (factor -> MINUS factor .)
    SEMI            reduce using rule 120 (factor -> MINUS factor .)
    ELSE            reduce using rule 120 (factor -> MINUS factor .)
    RP              reduce using rule 120 (factor -> MINUS factor .)
    COMMA           reduce using rule 120 (factor -> MINUS factor .)
    RB              reduce using rule 120 (factor -> MINUS factor .)
    TO              reduce using rule 120 (factor -> MINUS factor .)
    DOWNTO          reduce using rule 120 (factor -> MINUS factor .)


state 120

    (114) factor -> SYS_FUNCT LP . args_list RP
    (123) args_list -> . args_list COMMA expression
    (124) args_list -> . expression
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    args_list                      shift and go to state 169
    expression                     shift and go to state 101
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 121

    (118) factor -> LP expression . RP
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr

    RP              shift and go to state 170
    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111


state 122

    (115) factor -> NAME LP . args_list RP
    (123) args_list -> . args_list COMMA expression
    (124) args_list -> . expression
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    args_list                      shift and go to state 171
    expression                     shift and go to state 101
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 123

    (121) factor -> NAME LB . expression RB
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expression                     shift and go to state 172
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 124

    (122) factor -> NAME DOT . NAME

    NAME            shift and go to state 173


state 125

    (119) factor -> NOT factor .

    MUL             reduce using rule 119 (factor -> NOT factor .)
    DIV             reduce using rule 119 (factor -> NOT factor .)
    MOD             reduce using rule 119 (factor -> NOT factor .)
    AND             reduce using rule 119 (factor -> NOT factor .)
    PLUS            reduce using rule 119 (factor -> NOT factor .)
    MINUS           reduce using rule 119 (factor -> NOT factor .)
    OR              reduce using rule 119 (factor -> NOT factor .)
    THEN            reduce using rule 119 (factor -> NOT factor .)
    GE              reduce using rule 119 (factor -> NOT factor .)
    GT              reduce using rule 119 (factor -> NOT factor .)
    LE              reduce using rule 119 (factor -> NOT factor .)
    LT              reduce using rule 119 (factor -> NOT factor .)
    EQUAL           reduce using rule 119 (factor -> NOT factor .)
    UNEQUAL         reduce using rule 119 (factor -> NOT factor .)
    DO              reduce using rule 119 (factor -> NOT factor .)
    OF              reduce using rule 119 (factor -> NOT factor .)
    SEMI            reduce using rule 119 (factor -> NOT factor .)
    ELSE            reduce using rule 119 (factor -> NOT factor .)
    RP              reduce using rule 119 (factor -> NOT factor .)
    COMMA           reduce using rule 119 (factor -> NOT factor .)
    RB              reduce using rule 119 (factor -> NOT factor .)
    TO              reduce using rule 119 (factor -> NOT factor .)
    DOWNTO          reduce using rule 119 (factor -> NOT factor .)


state 126

    (84) repeat_stmt -> REPEAT stmt_list UNTIL . expression
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expression                     shift and go to state 174
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 127

    (85) while_stmt -> WHILE expression DO . stmt
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) proc_stmt -> . NAME
    (77) proc_stmt -> . NAME LP args_list RP
    (78) proc_stmt -> . SYS_PROC
    (79) proc_stmt -> . SYS_PROC LP expression_list RP
    (80) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (81) if_stmt -> . IF expression THEN stmt else_clause
    (84) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (85) while_stmt -> . WHILE expression DO stmt
    (86) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (89) case_stmt -> . CASE expression OF case_expr_list END
    (94) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 175
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 128

    (86) for_stmt -> FOR NAME ASSIGN . expression direction expression DO stmt
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expression                     shift and go to state 176
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 129

    (89) case_stmt -> CASE expression OF . case_expr_list END
    (90) case_expr_list -> . case_expr_list case_expr
    (91) case_expr_list -> . case_expr
    (92) case_expr -> . const_value COLON stmt SEMI
    (93) case_expr -> . ID COLON stmt SEMI
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    ID              shift and go to state 180
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    case_expr_list                 shift and go to state 177
    case_expr                      shift and go to state 178
    const_value                    shift and go to state 179

state 130

    (43) routine_part -> routine_part function_decl .

    FUNCTION        reduce using rule 43 (routine_part -> routine_part function_decl .)
    PROCEDURE       reduce using rule 43 (routine_part -> routine_part function_decl .)
    BEGIN           reduce using rule 43 (routine_part -> routine_part function_decl .)


state 131

    (44) routine_part -> routine_part procedure_decl .

    FUNCTION        reduce using rule 44 (routine_part -> routine_part procedure_decl .)
    PROCEDURE       reduce using rule 44 (routine_part -> routine_part procedure_decl .)
    BEGIN           reduce using rule 44 (routine_part -> routine_part procedure_decl .)


state 132

    (48) function_decl -> function_head SEMI . sub_routine SEMI
    (4) sub_routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . empty
    (125) empty -> .

    CONST           reduce using rule 125 (empty -> .)
    TYPE            reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    FUNCTION        reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    BEGIN           reduce using rule 125 (empty -> .)

    sub_routine                    shift and go to state 181
    routine_head                   shift and go to state 182
    label_part                     shift and go to state 6
    empty                          shift and go to state 7

state 133

    (50) procedure_decl -> procedure_head SEMI . sub_routine SEMI
    (4) sub_routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . empty
    (125) empty -> .

    CONST           reduce using rule 125 (empty -> .)
    TYPE            reduce using rule 125 (empty -> .)
    VAR             reduce using rule 125 (empty -> .)
    FUNCTION        reduce using rule 125 (empty -> .)
    PROCEDURE       reduce using rule 125 (empty -> .)
    BEGIN           reduce using rule 125 (empty -> .)

    sub_routine                    shift and go to state 183
    routine_head                   shift and go to state 182
    label_part                     shift and go to state 6
    empty                          shift and go to state 7

state 134

    (49) function_head -> FUNCTION NAME . parameters COLON simple_type_decl
    (52) parameters -> . LP para_decl_list RP
    (53) parameters -> . empty
    (125) empty -> .

    LP              shift and go to state 185
    COLON           reduce using rule 125 (empty -> .)

    parameters                     shift and go to state 184
    empty                          shift and go to state 186

state 135

    (51) procedure_head -> PROCEDURE NAME . parameters
    (52) parameters -> . LP para_decl_list RP
    (53) parameters -> . empty
    (125) empty -> .

    LP              shift and go to state 185
    SEMI            reduce using rule 125 (empty -> .)

    parameters                     shift and go to state 187
    empty                          shift and go to state 186

state 136

    (40) var_decl_list -> var_decl_list var_decl .

    NAME            reduce using rule 40 (var_decl_list -> var_decl_list var_decl .)
    FUNCTION        reduce using rule 40 (var_decl_list -> var_decl_list var_decl .)
    PROCEDURE       reduce using rule 40 (var_decl_list -> var_decl_list var_decl .)
    BEGIN           reduce using rule 40 (var_decl_list -> var_decl_list var_decl .)


state 137

    (42) var_decl -> name_list COLON . type_decl SEMI
    (24) type_decl -> . simple_type_decl
    (25) type_decl -> . array_type_decl
    (26) type_decl -> . record_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (31) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (32) record_type_decl -> . RECORD field_decl_list END
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 144
    NAME            shift and go to state 139
    LP              shift and go to state 145
    ARRAY           shift and go to state 147
    RECORD          shift and go to state 148
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    type_decl                      shift and go to state 188
    simple_type_decl               shift and go to state 141
    array_type_decl                shift and go to state 142
    record_type_decl               shift and go to state 143
    const_value                    shift and go to state 146

state 138

    (36) name_list -> name_list COMMA . NAME

    NAME            shift and go to state 189


state 139

    (28) simple_type_decl -> NAME .

    SEMI            reduce using rule 28 (simple_type_decl -> NAME .)
    RB              reduce using rule 28 (simple_type_decl -> NAME .)
    RP              reduce using rule 28 (simple_type_decl -> NAME .)


state 140

    (23) type_definition -> NAME EQUAL type_decl . SEMI

    SEMI            shift and go to state 190


state 141

    (24) type_decl -> simple_type_decl .

    SEMI            reduce using rule 24 (type_decl -> simple_type_decl .)


state 142

    (25) type_decl -> array_type_decl .

    SEMI            reduce using rule 25 (type_decl -> array_type_decl .)


state 143

    (26) type_decl -> record_type_decl .

    SEMI            reduce using rule 26 (type_decl -> record_type_decl .)


state 144

    (27) simple_type_decl -> SYS_TYPE .

    SEMI            reduce using rule 27 (simple_type_decl -> SYS_TYPE .)
    RB              reduce using rule 27 (simple_type_decl -> SYS_TYPE .)
    RP              reduce using rule 27 (simple_type_decl -> SYS_TYPE .)


state 145

    (29) simple_type_decl -> LP . name_list RP
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    NAME            shift and go to state 94

    name_list                      shift and go to state 191

state 146

    (30) simple_type_decl -> const_value . DOTDOT const_value

    DOTDOT          shift and go to state 192


state 147

    (31) array_type_decl -> ARRAY . LB simple_type_decl RB OF type_decl

    LB              shift and go to state 193


state 148

    (32) record_type_decl -> RECORD . field_decl_list END
    (33) field_decl_list -> . field_decl_list field_decl
    (34) field_decl_list -> . field_decl
    (35) field_decl -> . name_list COLON type_decl SEMI
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    NAME            shift and go to state 94

    field_decl_list                shift and go to state 194
    field_decl                     shift and go to state 195
    name_list                      shift and go to state 196

state 149

    (11) const_expr -> NAME EQUAL const_value SEMI .

    NAME            reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    TYPE            reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    VAR             reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    FUNCTION        reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    PROCEDURE       reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    BEGIN           reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)


state 150

    (77) proc_stmt -> NAME LP args_list RP .

    SEMI            reduce using rule 77 (proc_stmt -> NAME LP args_list RP .)
    ELSE            reduce using rule 77 (proc_stmt -> NAME LP args_list RP .)


state 151

    (123) args_list -> args_list COMMA . expression
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expression                     shift and go to state 197
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 152

    (79) proc_stmt -> SYS_PROC LP expression_list RP .

    SEMI            reduce using rule 79 (proc_stmt -> SYS_PROC LP expression_list RP .)
    ELSE            reduce using rule 79 (proc_stmt -> SYS_PROC LP expression_list RP .)


state 153

    (95) expression_list -> expression_list COMMA . expression
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expression                     shift and go to state 198
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 154

    (80) proc_stmt -> READ LP factor RP .

    SEMI            reduce using rule 80 (proc_stmt -> READ LP factor RP .)
    ELSE            reduce using rule 80 (proc_stmt -> READ LP factor RP .)


state 155

    (81) if_stmt -> IF expression THEN stmt . else_clause
    (82) else_clause -> . ELSE stmt
    (83) else_clause -> . empty
    (125) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 200
    SEMI            reduce using rule 125 (empty -> .)

  ! ELSE            [ reduce using rule 125 (empty -> .) ]

    else_clause                    shift and go to state 199
    empty                          shift and go to state 201

state 156

    (97) expression -> expression GE expr .
    (104) expr -> expr . PLUS term
    (105) expr -> expr . MINUS term
    (106) expr -> expr . OR term

    THEN            reduce using rule 97 (expression -> expression GE expr .)
    GE              reduce using rule 97 (expression -> expression GE expr .)
    GT              reduce using rule 97 (expression -> expression GE expr .)
    LE              reduce using rule 97 (expression -> expression GE expr .)
    LT              reduce using rule 97 (expression -> expression GE expr .)
    EQUAL           reduce using rule 97 (expression -> expression GE expr .)
    UNEQUAL         reduce using rule 97 (expression -> expression GE expr .)
    DO              reduce using rule 97 (expression -> expression GE expr .)
    OF              reduce using rule 97 (expression -> expression GE expr .)
    SEMI            reduce using rule 97 (expression -> expression GE expr .)
    ELSE            reduce using rule 97 (expression -> expression GE expr .)
    RP              reduce using rule 97 (expression -> expression GE expr .)
    COMMA           reduce using rule 97 (expression -> expression GE expr .)
    RB              reduce using rule 97 (expression -> expression GE expr .)
    TO              reduce using rule 97 (expression -> expression GE expr .)
    DOWNTO          reduce using rule 97 (expression -> expression GE expr .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    OR              shift and go to state 114


state 157

    (98) expression -> expression GT expr .
    (104) expr -> expr . PLUS term
    (105) expr -> expr . MINUS term
    (106) expr -> expr . OR term

    THEN            reduce using rule 98 (expression -> expression GT expr .)
    GE              reduce using rule 98 (expression -> expression GT expr .)
    GT              reduce using rule 98 (expression -> expression GT expr .)
    LE              reduce using rule 98 (expression -> expression GT expr .)
    LT              reduce using rule 98 (expression -> expression GT expr .)
    EQUAL           reduce using rule 98 (expression -> expression GT expr .)
    UNEQUAL         reduce using rule 98 (expression -> expression GT expr .)
    DO              reduce using rule 98 (expression -> expression GT expr .)
    OF              reduce using rule 98 (expression -> expression GT expr .)
    SEMI            reduce using rule 98 (expression -> expression GT expr .)
    ELSE            reduce using rule 98 (expression -> expression GT expr .)
    RP              reduce using rule 98 (expression -> expression GT expr .)
    COMMA           reduce using rule 98 (expression -> expression GT expr .)
    RB              reduce using rule 98 (expression -> expression GT expr .)
    TO              reduce using rule 98 (expression -> expression GT expr .)
    DOWNTO          reduce using rule 98 (expression -> expression GT expr .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    OR              shift and go to state 114


state 158

    (99) expression -> expression LE expr .
    (104) expr -> expr . PLUS term
    (105) expr -> expr . MINUS term
    (106) expr -> expr . OR term

    THEN            reduce using rule 99 (expression -> expression LE expr .)
    GE              reduce using rule 99 (expression -> expression LE expr .)
    GT              reduce using rule 99 (expression -> expression LE expr .)
    LE              reduce using rule 99 (expression -> expression LE expr .)
    LT              reduce using rule 99 (expression -> expression LE expr .)
    EQUAL           reduce using rule 99 (expression -> expression LE expr .)
    UNEQUAL         reduce using rule 99 (expression -> expression LE expr .)
    DO              reduce using rule 99 (expression -> expression LE expr .)
    OF              reduce using rule 99 (expression -> expression LE expr .)
    SEMI            reduce using rule 99 (expression -> expression LE expr .)
    ELSE            reduce using rule 99 (expression -> expression LE expr .)
    RP              reduce using rule 99 (expression -> expression LE expr .)
    COMMA           reduce using rule 99 (expression -> expression LE expr .)
    RB              reduce using rule 99 (expression -> expression LE expr .)
    TO              reduce using rule 99 (expression -> expression LE expr .)
    DOWNTO          reduce using rule 99 (expression -> expression LE expr .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    OR              shift and go to state 114


state 159

    (100) expression -> expression LT expr .
    (104) expr -> expr . PLUS term
    (105) expr -> expr . MINUS term
    (106) expr -> expr . OR term

    THEN            reduce using rule 100 (expression -> expression LT expr .)
    GE              reduce using rule 100 (expression -> expression LT expr .)
    GT              reduce using rule 100 (expression -> expression LT expr .)
    LE              reduce using rule 100 (expression -> expression LT expr .)
    LT              reduce using rule 100 (expression -> expression LT expr .)
    EQUAL           reduce using rule 100 (expression -> expression LT expr .)
    UNEQUAL         reduce using rule 100 (expression -> expression LT expr .)
    DO              reduce using rule 100 (expression -> expression LT expr .)
    OF              reduce using rule 100 (expression -> expression LT expr .)
    SEMI            reduce using rule 100 (expression -> expression LT expr .)
    ELSE            reduce using rule 100 (expression -> expression LT expr .)
    RP              reduce using rule 100 (expression -> expression LT expr .)
    COMMA           reduce using rule 100 (expression -> expression LT expr .)
    RB              reduce using rule 100 (expression -> expression LT expr .)
    TO              reduce using rule 100 (expression -> expression LT expr .)
    DOWNTO          reduce using rule 100 (expression -> expression LT expr .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    OR              shift and go to state 114


state 160

    (101) expression -> expression EQUAL expr .
    (104) expr -> expr . PLUS term
    (105) expr -> expr . MINUS term
    (106) expr -> expr . OR term

    THEN            reduce using rule 101 (expression -> expression EQUAL expr .)
    GE              reduce using rule 101 (expression -> expression EQUAL expr .)
    GT              reduce using rule 101 (expression -> expression EQUAL expr .)
    LE              reduce using rule 101 (expression -> expression EQUAL expr .)
    LT              reduce using rule 101 (expression -> expression EQUAL expr .)
    EQUAL           reduce using rule 101 (expression -> expression EQUAL expr .)
    UNEQUAL         reduce using rule 101 (expression -> expression EQUAL expr .)
    DO              reduce using rule 101 (expression -> expression EQUAL expr .)
    OF              reduce using rule 101 (expression -> expression EQUAL expr .)
    SEMI            reduce using rule 101 (expression -> expression EQUAL expr .)
    ELSE            reduce using rule 101 (expression -> expression EQUAL expr .)
    RP              reduce using rule 101 (expression -> expression EQUAL expr .)
    COMMA           reduce using rule 101 (expression -> expression EQUAL expr .)
    RB              reduce using rule 101 (expression -> expression EQUAL expr .)
    TO              reduce using rule 101 (expression -> expression EQUAL expr .)
    DOWNTO          reduce using rule 101 (expression -> expression EQUAL expr .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    OR              shift and go to state 114


state 161

    (102) expression -> expression UNEQUAL expr .
    (104) expr -> expr . PLUS term
    (105) expr -> expr . MINUS term
    (106) expr -> expr . OR term

    THEN            reduce using rule 102 (expression -> expression UNEQUAL expr .)
    GE              reduce using rule 102 (expression -> expression UNEQUAL expr .)
    GT              reduce using rule 102 (expression -> expression UNEQUAL expr .)
    LE              reduce using rule 102 (expression -> expression UNEQUAL expr .)
    LT              reduce using rule 102 (expression -> expression UNEQUAL expr .)
    EQUAL           reduce using rule 102 (expression -> expression UNEQUAL expr .)
    UNEQUAL         reduce using rule 102 (expression -> expression UNEQUAL expr .)
    DO              reduce using rule 102 (expression -> expression UNEQUAL expr .)
    OF              reduce using rule 102 (expression -> expression UNEQUAL expr .)
    SEMI            reduce using rule 102 (expression -> expression UNEQUAL expr .)
    ELSE            reduce using rule 102 (expression -> expression UNEQUAL expr .)
    RP              reduce using rule 102 (expression -> expression UNEQUAL expr .)
    COMMA           reduce using rule 102 (expression -> expression UNEQUAL expr .)
    RB              reduce using rule 102 (expression -> expression UNEQUAL expr .)
    TO              reduce using rule 102 (expression -> expression UNEQUAL expr .)
    DOWNTO          reduce using rule 102 (expression -> expression UNEQUAL expr .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113
    OR              shift and go to state 114


state 162

    (104) expr -> expr PLUS term .
    (108) term -> term . MUL factor
    (109) term -> term . DIV factor
    (110) term -> term . MOD factor
    (111) term -> term . AND factor

    PLUS            reduce using rule 104 (expr -> expr PLUS term .)
    MINUS           reduce using rule 104 (expr -> expr PLUS term .)
    OR              reduce using rule 104 (expr -> expr PLUS term .)
    THEN            reduce using rule 104 (expr -> expr PLUS term .)
    GE              reduce using rule 104 (expr -> expr PLUS term .)
    GT              reduce using rule 104 (expr -> expr PLUS term .)
    LE              reduce using rule 104 (expr -> expr PLUS term .)
    LT              reduce using rule 104 (expr -> expr PLUS term .)
    EQUAL           reduce using rule 104 (expr -> expr PLUS term .)
    UNEQUAL         reduce using rule 104 (expr -> expr PLUS term .)
    DO              reduce using rule 104 (expr -> expr PLUS term .)
    OF              reduce using rule 104 (expr -> expr PLUS term .)
    SEMI            reduce using rule 104 (expr -> expr PLUS term .)
    ELSE            reduce using rule 104 (expr -> expr PLUS term .)
    RP              reduce using rule 104 (expr -> expr PLUS term .)
    COMMA           reduce using rule 104 (expr -> expr PLUS term .)
    RB              reduce using rule 104 (expr -> expr PLUS term .)
    TO              reduce using rule 104 (expr -> expr PLUS term .)
    DOWNTO          reduce using rule 104 (expr -> expr PLUS term .)
    MUL             shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    AND             shift and go to state 118


state 163

    (105) expr -> expr MINUS term .
    (108) term -> term . MUL factor
    (109) term -> term . DIV factor
    (110) term -> term . MOD factor
    (111) term -> term . AND factor

    PLUS            reduce using rule 105 (expr -> expr MINUS term .)
    MINUS           reduce using rule 105 (expr -> expr MINUS term .)
    OR              reduce using rule 105 (expr -> expr MINUS term .)
    THEN            reduce using rule 105 (expr -> expr MINUS term .)
    GE              reduce using rule 105 (expr -> expr MINUS term .)
    GT              reduce using rule 105 (expr -> expr MINUS term .)
    LE              reduce using rule 105 (expr -> expr MINUS term .)
    LT              reduce using rule 105 (expr -> expr MINUS term .)
    EQUAL           reduce using rule 105 (expr -> expr MINUS term .)
    UNEQUAL         reduce using rule 105 (expr -> expr MINUS term .)
    DO              reduce using rule 105 (expr -> expr MINUS term .)
    OF              reduce using rule 105 (expr -> expr MINUS term .)
    SEMI            reduce using rule 105 (expr -> expr MINUS term .)
    ELSE            reduce using rule 105 (expr -> expr MINUS term .)
    RP              reduce using rule 105 (expr -> expr MINUS term .)
    COMMA           reduce using rule 105 (expr -> expr MINUS term .)
    RB              reduce using rule 105 (expr -> expr MINUS term .)
    TO              reduce using rule 105 (expr -> expr MINUS term .)
    DOWNTO          reduce using rule 105 (expr -> expr MINUS term .)
    MUL             shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    AND             shift and go to state 118


state 164

    (106) expr -> expr OR term .
    (108) term -> term . MUL factor
    (109) term -> term . DIV factor
    (110) term -> term . MOD factor
    (111) term -> term . AND factor

    PLUS            reduce using rule 106 (expr -> expr OR term .)
    MINUS           reduce using rule 106 (expr -> expr OR term .)
    OR              reduce using rule 106 (expr -> expr OR term .)
    THEN            reduce using rule 106 (expr -> expr OR term .)
    GE              reduce using rule 106 (expr -> expr OR term .)
    GT              reduce using rule 106 (expr -> expr OR term .)
    LE              reduce using rule 106 (expr -> expr OR term .)
    LT              reduce using rule 106 (expr -> expr OR term .)
    EQUAL           reduce using rule 106 (expr -> expr OR term .)
    UNEQUAL         reduce using rule 106 (expr -> expr OR term .)
    DO              reduce using rule 106 (expr -> expr OR term .)
    OF              reduce using rule 106 (expr -> expr OR term .)
    SEMI            reduce using rule 106 (expr -> expr OR term .)
    ELSE            reduce using rule 106 (expr -> expr OR term .)
    RP              reduce using rule 106 (expr -> expr OR term .)
    COMMA           reduce using rule 106 (expr -> expr OR term .)
    RB              reduce using rule 106 (expr -> expr OR term .)
    TO              reduce using rule 106 (expr -> expr OR term .)
    DOWNTO          reduce using rule 106 (expr -> expr OR term .)
    MUL             shift and go to state 115
    DIV             shift and go to state 116
    MOD             shift and go to state 117
    AND             shift and go to state 118


state 165

    (108) term -> term MUL factor .

    MUL             reduce using rule 108 (term -> term MUL factor .)
    DIV             reduce using rule 108 (term -> term MUL factor .)
    MOD             reduce using rule 108 (term -> term MUL factor .)
    AND             reduce using rule 108 (term -> term MUL factor .)
    PLUS            reduce using rule 108 (term -> term MUL factor .)
    MINUS           reduce using rule 108 (term -> term MUL factor .)
    OR              reduce using rule 108 (term -> term MUL factor .)
    THEN            reduce using rule 108 (term -> term MUL factor .)
    GE              reduce using rule 108 (term -> term MUL factor .)
    GT              reduce using rule 108 (term -> term MUL factor .)
    LE              reduce using rule 108 (term -> term MUL factor .)
    LT              reduce using rule 108 (term -> term MUL factor .)
    EQUAL           reduce using rule 108 (term -> term MUL factor .)
    UNEQUAL         reduce using rule 108 (term -> term MUL factor .)
    DO              reduce using rule 108 (term -> term MUL factor .)
    OF              reduce using rule 108 (term -> term MUL factor .)
    SEMI            reduce using rule 108 (term -> term MUL factor .)
    ELSE            reduce using rule 108 (term -> term MUL factor .)
    RP              reduce using rule 108 (term -> term MUL factor .)
    COMMA           reduce using rule 108 (term -> term MUL factor .)
    RB              reduce using rule 108 (term -> term MUL factor .)
    TO              reduce using rule 108 (term -> term MUL factor .)
    DOWNTO          reduce using rule 108 (term -> term MUL factor .)


state 166

    (109) term -> term DIV factor .

    MUL             reduce using rule 109 (term -> term DIV factor .)
    DIV             reduce using rule 109 (term -> term DIV factor .)
    MOD             reduce using rule 109 (term -> term DIV factor .)
    AND             reduce using rule 109 (term -> term DIV factor .)
    PLUS            reduce using rule 109 (term -> term DIV factor .)
    MINUS           reduce using rule 109 (term -> term DIV factor .)
    OR              reduce using rule 109 (term -> term DIV factor .)
    THEN            reduce using rule 109 (term -> term DIV factor .)
    GE              reduce using rule 109 (term -> term DIV factor .)
    GT              reduce using rule 109 (term -> term DIV factor .)
    LE              reduce using rule 109 (term -> term DIV factor .)
    LT              reduce using rule 109 (term -> term DIV factor .)
    EQUAL           reduce using rule 109 (term -> term DIV factor .)
    UNEQUAL         reduce using rule 109 (term -> term DIV factor .)
    DO              reduce using rule 109 (term -> term DIV factor .)
    OF              reduce using rule 109 (term -> term DIV factor .)
    SEMI            reduce using rule 109 (term -> term DIV factor .)
    ELSE            reduce using rule 109 (term -> term DIV factor .)
    RP              reduce using rule 109 (term -> term DIV factor .)
    COMMA           reduce using rule 109 (term -> term DIV factor .)
    RB              reduce using rule 109 (term -> term DIV factor .)
    TO              reduce using rule 109 (term -> term DIV factor .)
    DOWNTO          reduce using rule 109 (term -> term DIV factor .)


state 167

    (110) term -> term MOD factor .

    MUL             reduce using rule 110 (term -> term MOD factor .)
    DIV             reduce using rule 110 (term -> term MOD factor .)
    MOD             reduce using rule 110 (term -> term MOD factor .)
    AND             reduce using rule 110 (term -> term MOD factor .)
    PLUS            reduce using rule 110 (term -> term MOD factor .)
    MINUS           reduce using rule 110 (term -> term MOD factor .)
    OR              reduce using rule 110 (term -> term MOD factor .)
    THEN            reduce using rule 110 (term -> term MOD factor .)
    GE              reduce using rule 110 (term -> term MOD factor .)
    GT              reduce using rule 110 (term -> term MOD factor .)
    LE              reduce using rule 110 (term -> term MOD factor .)
    LT              reduce using rule 110 (term -> term MOD factor .)
    EQUAL           reduce using rule 110 (term -> term MOD factor .)
    UNEQUAL         reduce using rule 110 (term -> term MOD factor .)
    DO              reduce using rule 110 (term -> term MOD factor .)
    OF              reduce using rule 110 (term -> term MOD factor .)
    SEMI            reduce using rule 110 (term -> term MOD factor .)
    ELSE            reduce using rule 110 (term -> term MOD factor .)
    RP              reduce using rule 110 (term -> term MOD factor .)
    COMMA           reduce using rule 110 (term -> term MOD factor .)
    RB              reduce using rule 110 (term -> term MOD factor .)
    TO              reduce using rule 110 (term -> term MOD factor .)
    DOWNTO          reduce using rule 110 (term -> term MOD factor .)


state 168

    (111) term -> term AND factor .

    MUL             reduce using rule 111 (term -> term AND factor .)
    DIV             reduce using rule 111 (term -> term AND factor .)
    MOD             reduce using rule 111 (term -> term AND factor .)
    AND             reduce using rule 111 (term -> term AND factor .)
    PLUS            reduce using rule 111 (term -> term AND factor .)
    MINUS           reduce using rule 111 (term -> term AND factor .)
    OR              reduce using rule 111 (term -> term AND factor .)
    THEN            reduce using rule 111 (term -> term AND factor .)
    GE              reduce using rule 111 (term -> term AND factor .)
    GT              reduce using rule 111 (term -> term AND factor .)
    LE              reduce using rule 111 (term -> term AND factor .)
    LT              reduce using rule 111 (term -> term AND factor .)
    EQUAL           reduce using rule 111 (term -> term AND factor .)
    UNEQUAL         reduce using rule 111 (term -> term AND factor .)
    DO              reduce using rule 111 (term -> term AND factor .)
    OF              reduce using rule 111 (term -> term AND factor .)
    SEMI            reduce using rule 111 (term -> term AND factor .)
    ELSE            reduce using rule 111 (term -> term AND factor .)
    RP              reduce using rule 111 (term -> term AND factor .)
    COMMA           reduce using rule 111 (term -> term AND factor .)
    RB              reduce using rule 111 (term -> term AND factor .)
    TO              reduce using rule 111 (term -> term AND factor .)
    DOWNTO          reduce using rule 111 (term -> term AND factor .)


state 169

    (114) factor -> SYS_FUNCT LP args_list . RP
    (123) args_list -> args_list . COMMA expression

    RP              shift and go to state 202
    COMMA           shift and go to state 151


state 170

    (118) factor -> LP expression RP .

    MUL             reduce using rule 118 (factor -> LP expression RP .)
    DIV             reduce using rule 118 (factor -> LP expression RP .)
    MOD             reduce using rule 118 (factor -> LP expression RP .)
    AND             reduce using rule 118 (factor -> LP expression RP .)
    PLUS            reduce using rule 118 (factor -> LP expression RP .)
    MINUS           reduce using rule 118 (factor -> LP expression RP .)
    OR              reduce using rule 118 (factor -> LP expression RP .)
    THEN            reduce using rule 118 (factor -> LP expression RP .)
    GE              reduce using rule 118 (factor -> LP expression RP .)
    GT              reduce using rule 118 (factor -> LP expression RP .)
    LE              reduce using rule 118 (factor -> LP expression RP .)
    LT              reduce using rule 118 (factor -> LP expression RP .)
    EQUAL           reduce using rule 118 (factor -> LP expression RP .)
    UNEQUAL         reduce using rule 118 (factor -> LP expression RP .)
    DO              reduce using rule 118 (factor -> LP expression RP .)
    OF              reduce using rule 118 (factor -> LP expression RP .)
    SEMI            reduce using rule 118 (factor -> LP expression RP .)
    ELSE            reduce using rule 118 (factor -> LP expression RP .)
    RP              reduce using rule 118 (factor -> LP expression RP .)
    COMMA           reduce using rule 118 (factor -> LP expression RP .)
    RB              reduce using rule 118 (factor -> LP expression RP .)
    TO              reduce using rule 118 (factor -> LP expression RP .)
    DOWNTO          reduce using rule 118 (factor -> LP expression RP .)


state 171

    (115) factor -> NAME LP args_list . RP
    (123) args_list -> args_list . COMMA expression

    RP              shift and go to state 203
    COMMA           shift and go to state 151


state 172

    (121) factor -> NAME LB expression . RB
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr

    RB              shift and go to state 204
    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111


state 173

    (122) factor -> NAME DOT NAME .

    MUL             reduce using rule 122 (factor -> NAME DOT NAME .)
    DIV             reduce using rule 122 (factor -> NAME DOT NAME .)
    MOD             reduce using rule 122 (factor -> NAME DOT NAME .)
    AND             reduce using rule 122 (factor -> NAME DOT NAME .)
    PLUS            reduce using rule 122 (factor -> NAME DOT NAME .)
    MINUS           reduce using rule 122 (factor -> NAME DOT NAME .)
    OR              reduce using rule 122 (factor -> NAME DOT NAME .)
    THEN            reduce using rule 122 (factor -> NAME DOT NAME .)
    GE              reduce using rule 122 (factor -> NAME DOT NAME .)
    GT              reduce using rule 122 (factor -> NAME DOT NAME .)
    LE              reduce using rule 122 (factor -> NAME DOT NAME .)
    LT              reduce using rule 122 (factor -> NAME DOT NAME .)
    EQUAL           reduce using rule 122 (factor -> NAME DOT NAME .)
    UNEQUAL         reduce using rule 122 (factor -> NAME DOT NAME .)
    DO              reduce using rule 122 (factor -> NAME DOT NAME .)
    OF              reduce using rule 122 (factor -> NAME DOT NAME .)
    SEMI            reduce using rule 122 (factor -> NAME DOT NAME .)
    ELSE            reduce using rule 122 (factor -> NAME DOT NAME .)
    RP              reduce using rule 122 (factor -> NAME DOT NAME .)
    COMMA           reduce using rule 122 (factor -> NAME DOT NAME .)
    RB              reduce using rule 122 (factor -> NAME DOT NAME .)
    TO              reduce using rule 122 (factor -> NAME DOT NAME .)
    DOWNTO          reduce using rule 122 (factor -> NAME DOT NAME .)


state 174

    (84) repeat_stmt -> REPEAT stmt_list UNTIL expression .
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 84 (repeat_stmt -> REPEAT stmt_list UNTIL expression .)
    ELSE            reduce using rule 84 (repeat_stmt -> REPEAT stmt_list UNTIL expression .)
    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111


state 175

    (85) while_stmt -> WHILE expression DO stmt .

    SEMI            reduce using rule 85 (while_stmt -> WHILE expression DO stmt .)
    ELSE            reduce using rule 85 (while_stmt -> WHILE expression DO stmt .)


state 176

    (86) for_stmt -> FOR NAME ASSIGN expression . direction expression DO stmt
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr
    (87) direction -> . TO
    (88) direction -> . DOWNTO

    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111
    TO              shift and go to state 206
    DOWNTO          shift and go to state 207

    direction                      shift and go to state 205

state 177

    (89) case_stmt -> CASE expression OF case_expr_list . END
    (90) case_expr_list -> case_expr_list . case_expr
    (92) case_expr -> . const_value COLON stmt SEMI
    (93) case_expr -> . ID COLON stmt SEMI
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    END             shift and go to state 208
    ID              shift and go to state 180
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    case_expr                      shift and go to state 209
    const_value                    shift and go to state 179

state 178

    (91) case_expr_list -> case_expr .

    END             reduce using rule 91 (case_expr_list -> case_expr .)
    ID              reduce using rule 91 (case_expr_list -> case_expr .)
    INTEGER         reduce using rule 91 (case_expr_list -> case_expr .)
    REAL            reduce using rule 91 (case_expr_list -> case_expr .)
    CHAR            reduce using rule 91 (case_expr_list -> case_expr .)
    STRING          reduce using rule 91 (case_expr_list -> case_expr .)
    SYS_CON         reduce using rule 91 (case_expr_list -> case_expr .)
    true            reduce using rule 91 (case_expr_list -> case_expr .)
    false           reduce using rule 91 (case_expr_list -> case_expr .)


state 179

    (92) case_expr -> const_value . COLON stmt SEMI

    COLON           shift and go to state 210


state 180

    (93) case_expr -> ID . COLON stmt SEMI

    COLON           shift and go to state 211


state 181

    (48) function_decl -> function_head SEMI sub_routine . SEMI

    SEMI            shift and go to state 212


state 182

    (4) sub_routine -> routine_head . routine_body
    (60) routine_body -> . compound_stmt
    (61) compound_stmt -> . BEGIN stmt_list END

    BEGIN           shift and go to state 12

    routine_body                   shift and go to state 213
    compound_stmt                  shift and go to state 11

state 183

    (50) procedure_decl -> procedure_head SEMI sub_routine . SEMI

    SEMI            shift and go to state 214


state 184

    (49) function_head -> FUNCTION NAME parameters . COLON simple_type_decl

    COLON           shift and go to state 215


state 185

    (52) parameters -> LP . para_decl_list RP
    (54) para_decl_list -> . para_decl_list SEMI para_type_list
    (55) para_decl_list -> . para_type_list
    (56) para_type_list -> . var_para_list COLON simple_type_decl
    (57) para_type_list -> . val_para_list COLON simple_type_decl
    (58) var_para_list -> . VAR name_list
    (59) val_para_list -> . name_list
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    VAR             shift and go to state 220
    NAME            shift and go to state 94

    para_decl_list                 shift and go to state 216
    para_type_list                 shift and go to state 217
    var_para_list                  shift and go to state 218
    val_para_list                  shift and go to state 219
    name_list                      shift and go to state 221

state 186

    (53) parameters -> empty .

    COLON           reduce using rule 53 (parameters -> empty .)
    SEMI            reduce using rule 53 (parameters -> empty .)


state 187

    (51) procedure_head -> PROCEDURE NAME parameters .

    SEMI            reduce using rule 51 (procedure_head -> PROCEDURE NAME parameters .)


state 188

    (42) var_decl -> name_list COLON type_decl . SEMI

    SEMI            shift and go to state 222


state 189

    (36) name_list -> name_list COMMA NAME .

    COLON           reduce using rule 36 (name_list -> name_list COMMA NAME .)
    COMMA           reduce using rule 36 (name_list -> name_list COMMA NAME .)
    RP              reduce using rule 36 (name_list -> name_list COMMA NAME .)


state 190

    (23) type_definition -> NAME EQUAL type_decl SEMI .

    NAME            reduce using rule 23 (type_definition -> NAME EQUAL type_decl SEMI .)
    VAR             reduce using rule 23 (type_definition -> NAME EQUAL type_decl SEMI .)
    FUNCTION        reduce using rule 23 (type_definition -> NAME EQUAL type_decl SEMI .)
    PROCEDURE       reduce using rule 23 (type_definition -> NAME EQUAL type_decl SEMI .)
    BEGIN           reduce using rule 23 (type_definition -> NAME EQUAL type_decl SEMI .)


state 191

    (29) simple_type_decl -> LP name_list . RP
    (36) name_list -> name_list . COMMA NAME

    RP              shift and go to state 223
    COMMA           shift and go to state 138


state 192

    (30) simple_type_decl -> const_value DOTDOT . const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    const_value                    shift and go to state 224

state 193

    (31) array_type_decl -> ARRAY LB . simple_type_decl RB OF type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 144
    NAME            shift and go to state 139
    LP              shift and go to state 145
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    simple_type_decl               shift and go to state 225
    const_value                    shift and go to state 146

state 194

    (32) record_type_decl -> RECORD field_decl_list . END
    (33) field_decl_list -> field_decl_list . field_decl
    (35) field_decl -> . name_list COLON type_decl SEMI
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    END             shift and go to state 226
    NAME            shift and go to state 94

    field_decl                     shift and go to state 227
    name_list                      shift and go to state 196

state 195

    (34) field_decl_list -> field_decl .

    END             reduce using rule 34 (field_decl_list -> field_decl .)
    NAME            reduce using rule 34 (field_decl_list -> field_decl .)


state 196

    (35) field_decl -> name_list . COLON type_decl SEMI
    (36) name_list -> name_list . COMMA NAME

    COLON           shift and go to state 228
    COMMA           shift and go to state 138


state 197

    (123) args_list -> args_list COMMA expression .
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr

    RP              reduce using rule 123 (args_list -> args_list COMMA expression .)
    COMMA           reduce using rule 123 (args_list -> args_list COMMA expression .)
    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111


state 198

    (95) expression_list -> expression_list COMMA expression .
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr

    RP              reduce using rule 95 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 95 (expression_list -> expression_list COMMA expression .)
    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111


state 199

    (81) if_stmt -> IF expression THEN stmt else_clause .

    SEMI            reduce using rule 81 (if_stmt -> IF expression THEN stmt else_clause .)
    ELSE            reduce using rule 81 (if_stmt -> IF expression THEN stmt else_clause .)


state 200

    (82) else_clause -> ELSE . stmt
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) proc_stmt -> . NAME
    (77) proc_stmt -> . NAME LP args_list RP
    (78) proc_stmt -> . SYS_PROC
    (79) proc_stmt -> . SYS_PROC LP expression_list RP
    (80) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (81) if_stmt -> . IF expression THEN stmt else_clause
    (84) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (85) while_stmt -> . WHILE expression DO stmt
    (86) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (89) case_stmt -> . CASE expression OF case_expr_list END
    (94) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 229
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 201

    (83) else_clause -> empty .

    SEMI            reduce using rule 83 (else_clause -> empty .)
    ELSE            reduce using rule 83 (else_clause -> empty .)


state 202

    (114) factor -> SYS_FUNCT LP args_list RP .

    MUL             reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    DIV             reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    MOD             reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    AND             reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    PLUS            reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    MINUS           reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    OR              reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    THEN            reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    GE              reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    GT              reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    LE              reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    LT              reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    EQUAL           reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    UNEQUAL         reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    DO              reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    OF              reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    SEMI            reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    ELSE            reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    RP              reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    COMMA           reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    RB              reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    TO              reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)
    DOWNTO          reduce using rule 114 (factor -> SYS_FUNCT LP args_list RP .)


state 203

    (115) factor -> NAME LP args_list RP .

    MUL             reduce using rule 115 (factor -> NAME LP args_list RP .)
    DIV             reduce using rule 115 (factor -> NAME LP args_list RP .)
    MOD             reduce using rule 115 (factor -> NAME LP args_list RP .)
    AND             reduce using rule 115 (factor -> NAME LP args_list RP .)
    PLUS            reduce using rule 115 (factor -> NAME LP args_list RP .)
    MINUS           reduce using rule 115 (factor -> NAME LP args_list RP .)
    OR              reduce using rule 115 (factor -> NAME LP args_list RP .)
    THEN            reduce using rule 115 (factor -> NAME LP args_list RP .)
    GE              reduce using rule 115 (factor -> NAME LP args_list RP .)
    GT              reduce using rule 115 (factor -> NAME LP args_list RP .)
    LE              reduce using rule 115 (factor -> NAME LP args_list RP .)
    LT              reduce using rule 115 (factor -> NAME LP args_list RP .)
    EQUAL           reduce using rule 115 (factor -> NAME LP args_list RP .)
    UNEQUAL         reduce using rule 115 (factor -> NAME LP args_list RP .)
    DO              reduce using rule 115 (factor -> NAME LP args_list RP .)
    OF              reduce using rule 115 (factor -> NAME LP args_list RP .)
    SEMI            reduce using rule 115 (factor -> NAME LP args_list RP .)
    ELSE            reduce using rule 115 (factor -> NAME LP args_list RP .)
    RP              reduce using rule 115 (factor -> NAME LP args_list RP .)
    COMMA           reduce using rule 115 (factor -> NAME LP args_list RP .)
    RB              reduce using rule 115 (factor -> NAME LP args_list RP .)
    TO              reduce using rule 115 (factor -> NAME LP args_list RP .)
    DOWNTO          reduce using rule 115 (factor -> NAME LP args_list RP .)


state 204

    (121) factor -> NAME LB expression RB .

    MUL             reduce using rule 121 (factor -> NAME LB expression RB .)
    DIV             reduce using rule 121 (factor -> NAME LB expression RB .)
    MOD             reduce using rule 121 (factor -> NAME LB expression RB .)
    AND             reduce using rule 121 (factor -> NAME LB expression RB .)
    PLUS            reduce using rule 121 (factor -> NAME LB expression RB .)
    MINUS           reduce using rule 121 (factor -> NAME LB expression RB .)
    OR              reduce using rule 121 (factor -> NAME LB expression RB .)
    THEN            reduce using rule 121 (factor -> NAME LB expression RB .)
    GE              reduce using rule 121 (factor -> NAME LB expression RB .)
    GT              reduce using rule 121 (factor -> NAME LB expression RB .)
    LE              reduce using rule 121 (factor -> NAME LB expression RB .)
    LT              reduce using rule 121 (factor -> NAME LB expression RB .)
    EQUAL           reduce using rule 121 (factor -> NAME LB expression RB .)
    UNEQUAL         reduce using rule 121 (factor -> NAME LB expression RB .)
    DO              reduce using rule 121 (factor -> NAME LB expression RB .)
    OF              reduce using rule 121 (factor -> NAME LB expression RB .)
    SEMI            reduce using rule 121 (factor -> NAME LB expression RB .)
    ELSE            reduce using rule 121 (factor -> NAME LB expression RB .)
    RP              reduce using rule 121 (factor -> NAME LB expression RB .)
    COMMA           reduce using rule 121 (factor -> NAME LB expression RB .)
    RB              reduce using rule 121 (factor -> NAME LB expression RB .)
    TO              reduce using rule 121 (factor -> NAME LB expression RB .)
    DOWNTO          reduce using rule 121 (factor -> NAME LB expression RB .)


state 205

    (86) for_stmt -> FOR NAME ASSIGN expression direction . expression DO stmt
    (97) expression -> . expression GE expr
    (98) expression -> . expression GT expr
    (99) expression -> . expression LE expr
    (100) expression -> . expression LT expr
    (101) expression -> . expression EQUAL expr
    (102) expression -> . expression UNEQUAL expr
    (103) expression -> . expr
    (104) expr -> . expr PLUS term
    (105) expr -> . expr MINUS term
    (106) expr -> . expr OR term
    (107) expr -> . term
    (108) term -> . term MUL factor
    (109) term -> . term DIV factor
    (110) term -> . term MOD factor
    (111) term -> . term AND factor
    (112) term -> . factor
    (113) factor -> . SYS_FUNCT
    (114) factor -> . SYS_FUNCT LP args_list RP
    (115) factor -> . NAME LP args_list RP
    (116) factor -> . NAME
    (117) factor -> . const_value
    (118) factor -> . LP expression RP
    (119) factor -> . NOT factor
    (120) factor -> . MINUS factor
    (121) factor -> . NAME LB expression RB
    (122) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 66
    NAME            shift and go to state 68
    LP              shift and go to state 67
    NOT             shift and go to state 70
    MINUS           shift and go to state 64
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    expression                     shift and go to state 230
    expr                           shift and go to state 62
    term                           shift and go to state 63
    factor                         shift and go to state 65
    const_value                    shift and go to state 69

state 206

    (87) direction -> TO .

    SYS_FUNCT       reduce using rule 87 (direction -> TO .)
    NAME            reduce using rule 87 (direction -> TO .)
    LP              reduce using rule 87 (direction -> TO .)
    NOT             reduce using rule 87 (direction -> TO .)
    MINUS           reduce using rule 87 (direction -> TO .)
    INTEGER         reduce using rule 87 (direction -> TO .)
    REAL            reduce using rule 87 (direction -> TO .)
    CHAR            reduce using rule 87 (direction -> TO .)
    STRING          reduce using rule 87 (direction -> TO .)
    SYS_CON         reduce using rule 87 (direction -> TO .)
    true            reduce using rule 87 (direction -> TO .)
    false           reduce using rule 87 (direction -> TO .)


state 207

    (88) direction -> DOWNTO .

    SYS_FUNCT       reduce using rule 88 (direction -> DOWNTO .)
    NAME            reduce using rule 88 (direction -> DOWNTO .)
    LP              reduce using rule 88 (direction -> DOWNTO .)
    NOT             reduce using rule 88 (direction -> DOWNTO .)
    MINUS           reduce using rule 88 (direction -> DOWNTO .)
    INTEGER         reduce using rule 88 (direction -> DOWNTO .)
    REAL            reduce using rule 88 (direction -> DOWNTO .)
    CHAR            reduce using rule 88 (direction -> DOWNTO .)
    STRING          reduce using rule 88 (direction -> DOWNTO .)
    SYS_CON         reduce using rule 88 (direction -> DOWNTO .)
    true            reduce using rule 88 (direction -> DOWNTO .)
    false           reduce using rule 88 (direction -> DOWNTO .)


state 208

    (89) case_stmt -> CASE expression OF case_expr_list END .

    SEMI            reduce using rule 89 (case_stmt -> CASE expression OF case_expr_list END .)
    ELSE            reduce using rule 89 (case_stmt -> CASE expression OF case_expr_list END .)


state 209

    (90) case_expr_list -> case_expr_list case_expr .

    END             reduce using rule 90 (case_expr_list -> case_expr_list case_expr .)
    ID              reduce using rule 90 (case_expr_list -> case_expr_list case_expr .)
    INTEGER         reduce using rule 90 (case_expr_list -> case_expr_list case_expr .)
    REAL            reduce using rule 90 (case_expr_list -> case_expr_list case_expr .)
    CHAR            reduce using rule 90 (case_expr_list -> case_expr_list case_expr .)
    STRING          reduce using rule 90 (case_expr_list -> case_expr_list case_expr .)
    SYS_CON         reduce using rule 90 (case_expr_list -> case_expr_list case_expr .)
    true            reduce using rule 90 (case_expr_list -> case_expr_list case_expr .)
    false           reduce using rule 90 (case_expr_list -> case_expr_list case_expr .)


state 210

    (92) case_expr -> const_value COLON . stmt SEMI
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) proc_stmt -> . NAME
    (77) proc_stmt -> . NAME LP args_list RP
    (78) proc_stmt -> . SYS_PROC
    (79) proc_stmt -> . SYS_PROC LP expression_list RP
    (80) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (81) if_stmt -> . IF expression THEN stmt else_clause
    (84) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (85) while_stmt -> . WHILE expression DO stmt
    (86) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (89) case_stmt -> . CASE expression OF case_expr_list END
    (94) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 231
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 211

    (93) case_expr -> ID COLON . stmt SEMI
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) proc_stmt -> . NAME
    (77) proc_stmt -> . NAME LP args_list RP
    (78) proc_stmt -> . SYS_PROC
    (79) proc_stmt -> . SYS_PROC LP expression_list RP
    (80) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (81) if_stmt -> . IF expression THEN stmt else_clause
    (84) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (85) while_stmt -> . WHILE expression DO stmt
    (86) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (89) case_stmt -> . CASE expression OF case_expr_list END
    (94) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 232
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 212

    (48) function_decl -> function_head SEMI sub_routine SEMI .

    FUNCTION        reduce using rule 48 (function_decl -> function_head SEMI sub_routine SEMI .)
    PROCEDURE       reduce using rule 48 (function_decl -> function_head SEMI sub_routine SEMI .)
    BEGIN           reduce using rule 48 (function_decl -> function_head SEMI sub_routine SEMI .)


state 213

    (4) sub_routine -> routine_head routine_body .

    SEMI            reduce using rule 4 (sub_routine -> routine_head routine_body .)


state 214

    (50) procedure_decl -> procedure_head SEMI sub_routine SEMI .

    FUNCTION        reduce using rule 50 (procedure_decl -> procedure_head SEMI sub_routine SEMI .)
    PROCEDURE       reduce using rule 50 (procedure_decl -> procedure_head SEMI sub_routine SEMI .)
    BEGIN           reduce using rule 50 (procedure_decl -> procedure_head SEMI sub_routine SEMI .)


state 215

    (49) function_head -> FUNCTION NAME parameters COLON . simple_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 144
    NAME            shift and go to state 139
    LP              shift and go to state 145
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    simple_type_decl               shift and go to state 233
    const_value                    shift and go to state 146

state 216

    (52) parameters -> LP para_decl_list . RP
    (54) para_decl_list -> para_decl_list . SEMI para_type_list

    RP              shift and go to state 234
    SEMI            shift and go to state 235


state 217

    (55) para_decl_list -> para_type_list .

    RP              reduce using rule 55 (para_decl_list -> para_type_list .)
    SEMI            reduce using rule 55 (para_decl_list -> para_type_list .)


state 218

    (56) para_type_list -> var_para_list . COLON simple_type_decl

    COLON           shift and go to state 236


state 219

    (57) para_type_list -> val_para_list . COLON simple_type_decl

    COLON           shift and go to state 237


state 220

    (58) var_para_list -> VAR . name_list
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    NAME            shift and go to state 94

    name_list                      shift and go to state 238

state 221

    (59) val_para_list -> name_list .
    (36) name_list -> name_list . COMMA NAME

    COLON           reduce using rule 59 (val_para_list -> name_list .)
    COMMA           shift and go to state 138


state 222

    (42) var_decl -> name_list COLON type_decl SEMI .

    NAME            reduce using rule 42 (var_decl -> name_list COLON type_decl SEMI .)
    FUNCTION        reduce using rule 42 (var_decl -> name_list COLON type_decl SEMI .)
    PROCEDURE       reduce using rule 42 (var_decl -> name_list COLON type_decl SEMI .)
    BEGIN           reduce using rule 42 (var_decl -> name_list COLON type_decl SEMI .)


state 223

    (29) simple_type_decl -> LP name_list RP .

    SEMI            reduce using rule 29 (simple_type_decl -> LP name_list RP .)
    RB              reduce using rule 29 (simple_type_decl -> LP name_list RP .)
    RP              reduce using rule 29 (simple_type_decl -> LP name_list RP .)


state 224

    (30) simple_type_decl -> const_value DOTDOT const_value .

    SEMI            reduce using rule 30 (simple_type_decl -> const_value DOTDOT const_value .)
    RB              reduce using rule 30 (simple_type_decl -> const_value DOTDOT const_value .)
    RP              reduce using rule 30 (simple_type_decl -> const_value DOTDOT const_value .)


state 225

    (31) array_type_decl -> ARRAY LB simple_type_decl . RB OF type_decl

    RB              shift and go to state 239


state 226

    (32) record_type_decl -> RECORD field_decl_list END .

    SEMI            reduce using rule 32 (record_type_decl -> RECORD field_decl_list END .)


state 227

    (33) field_decl_list -> field_decl_list field_decl .

    END             reduce using rule 33 (field_decl_list -> field_decl_list field_decl .)
    NAME            reduce using rule 33 (field_decl_list -> field_decl_list field_decl .)


state 228

    (35) field_decl -> name_list COLON . type_decl SEMI
    (24) type_decl -> . simple_type_decl
    (25) type_decl -> . array_type_decl
    (26) type_decl -> . record_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (31) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (32) record_type_decl -> . RECORD field_decl_list END
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 144
    NAME            shift and go to state 139
    LP              shift and go to state 145
    ARRAY           shift and go to state 147
    RECORD          shift and go to state 148
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    type_decl                      shift and go to state 240
    simple_type_decl               shift and go to state 141
    array_type_decl                shift and go to state 142
    record_type_decl               shift and go to state 143
    const_value                    shift and go to state 146

state 229

    (82) else_clause -> ELSE stmt .

    SEMI            reduce using rule 82 (else_clause -> ELSE stmt .)
    ELSE            reduce using rule 82 (else_clause -> ELSE stmt .)


state 230

    (86) for_stmt -> FOR NAME ASSIGN expression direction expression . DO stmt
    (97) expression -> expression . GE expr
    (98) expression -> expression . GT expr
    (99) expression -> expression . LE expr
    (100) expression -> expression . LT expr
    (101) expression -> expression . EQUAL expr
    (102) expression -> expression . UNEQUAL expr

    DO              shift and go to state 241
    GE              shift and go to state 106
    GT              shift and go to state 107
    LE              shift and go to state 108
    LT              shift and go to state 109
    EQUAL           shift and go to state 110
    UNEQUAL         shift and go to state 111


state 231

    (92) case_expr -> const_value COLON stmt . SEMI

    SEMI            shift and go to state 242


state 232

    (93) case_expr -> ID COLON stmt . SEMI

    SEMI            shift and go to state 243


state 233

    (49) function_head -> FUNCTION NAME parameters COLON simple_type_decl .

    SEMI            reduce using rule 49 (function_head -> FUNCTION NAME parameters COLON simple_type_decl .)


state 234

    (52) parameters -> LP para_decl_list RP .

    COLON           reduce using rule 52 (parameters -> LP para_decl_list RP .)
    SEMI            reduce using rule 52 (parameters -> LP para_decl_list RP .)


state 235

    (54) para_decl_list -> para_decl_list SEMI . para_type_list
    (56) para_type_list -> . var_para_list COLON simple_type_decl
    (57) para_type_list -> . val_para_list COLON simple_type_decl
    (58) var_para_list -> . VAR name_list
    (59) val_para_list -> . name_list
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    VAR             shift and go to state 220
    NAME            shift and go to state 94

    para_type_list                 shift and go to state 244
    var_para_list                  shift and go to state 218
    val_para_list                  shift and go to state 219
    name_list                      shift and go to state 221

state 236

    (56) para_type_list -> var_para_list COLON . simple_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 144
    NAME            shift and go to state 139
    LP              shift and go to state 145
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    simple_type_decl               shift and go to state 245
    const_value                    shift and go to state 146

state 237

    (57) para_type_list -> val_para_list COLON . simple_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 144
    NAME            shift and go to state 139
    LP              shift and go to state 145
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    simple_type_decl               shift and go to state 246
    const_value                    shift and go to state 146

state 238

    (58) var_para_list -> VAR name_list .
    (36) name_list -> name_list . COMMA NAME

    COLON           reduce using rule 58 (var_para_list -> VAR name_list .)
    COMMA           shift and go to state 138


state 239

    (31) array_type_decl -> ARRAY LB simple_type_decl RB . OF type_decl

    OF              shift and go to state 247


state 240

    (35) field_decl -> name_list COLON type_decl . SEMI

    SEMI            shift and go to state 248


state 241

    (86) for_stmt -> FOR NAME ASSIGN expression direction expression DO . stmt
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) proc_stmt -> . NAME
    (77) proc_stmt -> . NAME LP args_list RP
    (78) proc_stmt -> . SYS_PROC
    (79) proc_stmt -> . SYS_PROC LP expression_list RP
    (80) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (81) if_stmt -> . IF expression THEN stmt else_clause
    (84) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (85) while_stmt -> . WHILE expression DO stmt
    (86) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (89) case_stmt -> . CASE expression OF case_expr_list END
    (94) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 249
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 242

    (92) case_expr -> const_value COLON stmt SEMI .

    END             reduce using rule 92 (case_expr -> const_value COLON stmt SEMI .)
    ID              reduce using rule 92 (case_expr -> const_value COLON stmt SEMI .)
    INTEGER         reduce using rule 92 (case_expr -> const_value COLON stmt SEMI .)
    REAL            reduce using rule 92 (case_expr -> const_value COLON stmt SEMI .)
    CHAR            reduce using rule 92 (case_expr -> const_value COLON stmt SEMI .)
    STRING          reduce using rule 92 (case_expr -> const_value COLON stmt SEMI .)
    SYS_CON         reduce using rule 92 (case_expr -> const_value COLON stmt SEMI .)
    true            reduce using rule 92 (case_expr -> const_value COLON stmt SEMI .)
    false           reduce using rule 92 (case_expr -> const_value COLON stmt SEMI .)


state 243

    (93) case_expr -> ID COLON stmt SEMI .

    END             reduce using rule 93 (case_expr -> ID COLON stmt SEMI .)
    ID              reduce using rule 93 (case_expr -> ID COLON stmt SEMI .)
    INTEGER         reduce using rule 93 (case_expr -> ID COLON stmt SEMI .)
    REAL            reduce using rule 93 (case_expr -> ID COLON stmt SEMI .)
    CHAR            reduce using rule 93 (case_expr -> ID COLON stmt SEMI .)
    STRING          reduce using rule 93 (case_expr -> ID COLON stmt SEMI .)
    SYS_CON         reduce using rule 93 (case_expr -> ID COLON stmt SEMI .)
    true            reduce using rule 93 (case_expr -> ID COLON stmt SEMI .)
    false           reduce using rule 93 (case_expr -> ID COLON stmt SEMI .)


state 244

    (54) para_decl_list -> para_decl_list SEMI para_type_list .

    RP              reduce using rule 54 (para_decl_list -> para_decl_list SEMI para_type_list .)
    SEMI            reduce using rule 54 (para_decl_list -> para_decl_list SEMI para_type_list .)


state 245

    (56) para_type_list -> var_para_list COLON simple_type_decl .

    RP              reduce using rule 56 (para_type_list -> var_para_list COLON simple_type_decl .)
    SEMI            reduce using rule 56 (para_type_list -> var_para_list COLON simple_type_decl .)


state 246

    (57) para_type_list -> val_para_list COLON simple_type_decl .

    RP              reduce using rule 57 (para_type_list -> val_para_list COLON simple_type_decl .)
    SEMI            reduce using rule 57 (para_type_list -> val_para_list COLON simple_type_decl .)


state 247

    (31) array_type_decl -> ARRAY LB simple_type_decl RB OF . type_decl
    (24) type_decl -> . simple_type_decl
    (25) type_decl -> . array_type_decl
    (26) type_decl -> . record_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (31) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (32) record_type_decl -> . RECORD field_decl_list END
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 144
    NAME            shift and go to state 139
    LP              shift and go to state 145
    ARRAY           shift and go to state 147
    RECORD          shift and go to state 148
    INTEGER         shift and go to state 71
    REAL            shift and go to state 72
    CHAR            shift and go to state 73
    STRING          shift and go to state 74
    SYS_CON         shift and go to state 75
    true            shift and go to state 76
    false           shift and go to state 77

    simple_type_decl               shift and go to state 141
    type_decl                      shift and go to state 250
    array_type_decl                shift and go to state 142
    record_type_decl               shift and go to state 143
    const_value                    shift and go to state 146

state 248

    (35) field_decl -> name_list COLON type_decl SEMI .

    END             reduce using rule 35 (field_decl -> name_list COLON type_decl SEMI .)
    NAME            reduce using rule 35 (field_decl -> name_list COLON type_decl SEMI .)


state 249

    (86) for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt .

    SEMI            reduce using rule 86 (for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt .)
    ELSE            reduce using rule 86 (for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt .)


state 250

    (31) array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl .

    SEMI            reduce using rule 31 (array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 47 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 47 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 155 resolved as shift
