Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NUMBER
    PACKED

Grammar

Rule 0     S' -> program
Rule 1     program -> program_head routine DOT
Rule 2     program_head -> PROGRAM NAME SEMI
Rule 3     routine -> routine_head routine_body
Rule 4     sub_routine -> routine_head routine_body
Rule 5     routine_head -> label_part const_part type_part var_part routine_part
Rule 6     label_part -> empty
Rule 7     const_part -> CONST const_expr_list
Rule 8     const_part -> empty
Rule 9     const_expr_list -> const_expr_list const_expr
Rule 10    const_expr_list -> const_expr
Rule 11    const_expr -> NAME EQUAL const_value SEMI
Rule 12    const_value -> INTEGER
Rule 13    const_value -> REAL
Rule 14    const_value -> CHAR
Rule 15    const_value -> STRING
Rule 16    const_value -> SYS_CON
Rule 17    const_value -> true
Rule 18    const_value -> false
Rule 19    type_part -> TYPE type_decl_list
Rule 20    type_part -> empty
Rule 21    type_decl_list -> type_decl_list type_definition
Rule 22    type_decl_list -> type_definition
Rule 23    type_definition -> NAME EQUAL type_decl SEMI
Rule 24    type_decl -> simple_type_decl
Rule 25    type_decl -> array_type_decl
Rule 26    type_decl -> record_type_decl
Rule 27    simple_type_decl -> SYS_TYPE
Rule 28    simple_type_decl -> NAME
Rule 29    simple_type_decl -> LP name_list RP
Rule 30    simple_type_decl -> const_value DOTDOT const_value
Rule 31    array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl
Rule 32    record_type_decl -> RECORD field_decl_list END
Rule 33    field_decl_list -> field_decl_list field_decl
Rule 34    field_decl_list -> field_decl
Rule 35    field_decl -> name_list COLON type_decl SEMI
Rule 36    name_list -> name_list COMMA NAME
Rule 37    name_list -> NAME
Rule 38    var_part -> VAR var_decl_list
Rule 39    var_part -> empty
Rule 40    var_decl_list -> var_decl_list var_decl
Rule 41    var_decl_list -> var_decl
Rule 42    var_decl -> name_list COLON type_decl SEMI
Rule 43    routine_part -> routine_part function_decl
Rule 44    routine_part -> routine_part procedure_decl
Rule 45    routine_part -> function_decl
Rule 46    routine_part -> procedure_decl
Rule 47    routine_part -> empty
Rule 48    function_decl -> function_head SEMI sub_routine SEMI
Rule 49    function_head -> FUNCTION NAME parameters COLON simple_type_decl
Rule 50    procedure_decl -> procedure_head SEMI sub_routine SEMI
Rule 51    procedure_head -> PROCEDURE NAME parameters
Rule 52    parameters -> LP para_decl_list RP
Rule 53    parameters -> empty
Rule 54    para_decl_list -> para_decl_list SEMI para_type_list
Rule 55    para_decl_list -> para_type_list
Rule 56    para_type_list -> var_para_list COLON simple_type_decl
Rule 57    para_type_list -> val_para_list COLON simple_type_decl
Rule 58    var_para_list -> VAR name_list
Rule 59    val_para_list -> name_list
Rule 60    routine_body -> compound_stmt
Rule 61    compound_stmt -> BEGIN stmt_list END
Rule 62    stmt_list -> stmt_list stmt SEMI
Rule 63    stmt_list -> empty
Rule 64    stmt -> INTEGER COLON non_label_stmt
Rule 65    stmt -> non_label_stmt
Rule 66    non_label_stmt -> assign_stmt
Rule 67    non_label_stmt -> proc_stmt
Rule 68    non_label_stmt -> compound_stmt
Rule 69    non_label_stmt -> if_stmt
Rule 70    non_label_stmt -> repeat_stmt
Rule 71    non_label_stmt -> while_stmt
Rule 72    non_label_stmt -> for_stmt
Rule 73    non_label_stmt -> case_stmt
Rule 74    non_label_stmt -> goto_stmt
Rule 75    assign_stmt -> NAME ASSIGN expression
Rule 76    assign_stmt -> NAME LB expression RB ASSIGN expression
Rule 77    assign_stmt -> NAME DOT NAME ASSIGN expression
Rule 78    proc_stmt -> NAME
Rule 79    proc_stmt -> NAME LP args_list RP
Rule 80    proc_stmt -> SYS_PROC
Rule 81    proc_stmt -> SYS_PROC LP expression_list RP
Rule 82    proc_stmt -> READ LP factor RP
Rule 83    if_stmt -> IF expression THEN stmt else_clause
Rule 84    else_clause -> ELSE stmt
Rule 85    else_clause -> empty
Rule 86    repeat_stmt -> REPEAT stmt_list UNTIL expression
Rule 87    while_stmt -> WHILE expression DO stmt
Rule 88    for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt
Rule 89    direction -> TO
Rule 90    direction -> DOWNTO
Rule 91    case_stmt -> CASE expression OF case_expr_list END
Rule 92    case_expr_list -> case_expr_list case_expr
Rule 93    case_expr_list -> case_expr
Rule 94    case_expr -> const_value COLON stmt SEMI
Rule 95    case_expr -> ID COLON stmt SEMI
Rule 96    goto_stmt -> GOTO INTEGER
Rule 97    expression_list -> expression_list COMMA expression
Rule 98    expression_list -> expression
Rule 99    expression -> expression GE expr
Rule 100   expression -> expression GT expr
Rule 101   expression -> expression LE expr
Rule 102   expression -> expression LT expr
Rule 103   expression -> expression EQUAL expr
Rule 104   expression -> expression UNEQUAL expr
Rule 105   expression -> expr
Rule 106   expr -> expr PLUS term
Rule 107   expr -> expr MINUS term
Rule 108   expr -> expr OR term
Rule 109   expr -> term
Rule 110   term -> term MUL factor
Rule 111   term -> term DIV factor
Rule 112   term -> term MOD factor
Rule 113   term -> term AND factor
Rule 114   term -> factor
Rule 115   factor -> SYS_FUNCT
Rule 116   factor -> SYS_FUNCT LP args_list RP
Rule 117   factor -> NAME LP args_list RP
Rule 118   factor -> NAME
Rule 119   factor -> const_value
Rule 120   factor -> LP expression RP
Rule 121   factor -> NOT factor
Rule 122   factor -> MINUS factor
Rule 123   factor -> NAME LB expression RB
Rule 124   factor -> NAME DOT NAME
Rule 125   args_list -> args_list COMMA expression
Rule 126   args_list -> expression
Rule 127   empty -> <empty>

Terminals, with rules where they appear

AND                  : 113
ARRAY                : 31
ASSIGN               : 75 76 77 88
BEGIN                : 61
CASE                 : 91
CHAR                 : 14
COLON                : 35 42 49 56 57 64 94 95
COMMA                : 36 97 125
CONST                : 7
DIV                  : 111
DO                   : 87 88
DOT                  : 1 77 124
DOTDOT               : 30
DOWNTO               : 90
ELSE                 : 84
END                  : 32 61 91
EQUAL                : 11 23 103
FOR                  : 88
FUNCTION             : 49
GE                   : 99
GOTO                 : 96
GT                   : 100
ID                   : 95
IF                   : 83
INTEGER              : 12 64 96
LB                   : 31 76 123
LE                   : 101
LP                   : 29 52 79 81 82 116 117 120
LT                   : 102
MINUS                : 107 122
MOD                  : 112
MUL                  : 110
NAME                 : 2 11 23 28 36 37 49 51 75 76 77 77 78 79 88 117 118 123 124 124
NOT                  : 121
NUMBER               : 
OF                   : 31 91
OR                   : 108
PACKED               : 
PLUS                 : 106
PROCEDURE            : 51
PROGRAM              : 2
RB                   : 31 76 123
READ                 : 82
REAL                 : 13
RECORD               : 32
REPEAT               : 86
RP                   : 29 52 79 81 82 116 117 120
SEMI                 : 2 11 23 35 42 48 48 50 50 54 62 94 95
STRING               : 15
SYS_CON              : 16
SYS_FUNCT            : 115 116
SYS_PROC             : 80 81
SYS_TYPE             : 27
THEN                 : 83
TO                   : 89
TYPE                 : 19
UNEQUAL              : 104
UNTIL                : 86
VAR                  : 38 58
WHILE                : 87
error                : 
false                : 18
true                 : 17

Nonterminals, with rules where they appear

args_list            : 79 116 117 125
array_type_decl      : 25
assign_stmt          : 66
case_expr            : 92 93
case_expr_list       : 91 92
case_stmt            : 73
compound_stmt        : 60 68
const_expr           : 9 10
const_expr_list      : 7 9
const_part           : 5
const_value          : 11 30 30 94 119
direction            : 88
else_clause          : 83
empty                : 6 8 20 39 47 53 63 85
expr                 : 99 100 101 102 103 104 105 106 107 108
expression           : 75 76 76 77 83 86 87 88 88 91 97 98 99 100 101 102 103 104 120 123 125 126
expression_list      : 81 97
factor               : 82 110 111 112 113 114 121 122
field_decl           : 33 34
field_decl_list      : 32 33
for_stmt             : 72
function_decl        : 43 45
function_head        : 48
goto_stmt            : 74
if_stmt              : 69
label_part           : 5
name_list            : 29 35 36 42 58 59
non_label_stmt       : 64 65
para_decl_list       : 52 54
para_type_list       : 54 55
parameters           : 49 51
proc_stmt            : 67
procedure_decl       : 44 46
procedure_head       : 50
program              : 0
program_head         : 1
record_type_decl     : 26
repeat_stmt          : 70
routine              : 1
routine_body         : 3 4
routine_head         : 3 4
routine_part         : 5 43 44
simple_type_decl     : 24 31 49 56 57
stmt                 : 62 83 84 87 88 94 95
stmt_list            : 61 62 86
sub_routine          : 48 50
term                 : 106 107 108 109 110 111 112 113
type_decl            : 23 31 35 42
type_decl_list       : 19 21
type_definition      : 21 22
type_part            : 5
val_para_list        : 57
var_decl             : 40 41
var_decl_list        : 38 40
var_para_list        : 56
var_part             : 5
while_stmt           : 71

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_head routine DOT
    (2) program_head -> . PROGRAM NAME SEMI

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    program_head                   shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> program_head . routine DOT
    (3) routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . empty
    (127) empty -> .

    CONST           reduce using rule 127 (empty -> .)
    TYPE            reduce using rule 127 (empty -> .)
    VAR             reduce using rule 127 (empty -> .)
    FUNCTION        reduce using rule 127 (empty -> .)
    PROCEDURE       reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)

    routine                        shift and go to state 4
    routine_head                   shift and go to state 5
    label_part                     shift and go to state 6
    empty                          shift and go to state 7

state 3

    (2) program_head -> PROGRAM . NAME SEMI

    NAME            shift and go to state 8


state 4

    (1) program -> program_head routine . DOT

    DOT             shift and go to state 9


state 5

    (3) routine -> routine_head . routine_body
    (60) routine_body -> . compound_stmt
    (61) compound_stmt -> . BEGIN stmt_list END

    BEGIN           shift and go to state 12

    routine_body                   shift and go to state 10
    compound_stmt                  shift and go to state 11

state 6

    (5) routine_head -> label_part . const_part type_part var_part routine_part
    (7) const_part -> . CONST const_expr_list
    (8) const_part -> . empty
    (127) empty -> .

    CONST           shift and go to state 14
    TYPE            reduce using rule 127 (empty -> .)
    VAR             reduce using rule 127 (empty -> .)
    FUNCTION        reduce using rule 127 (empty -> .)
    PROCEDURE       reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)

    const_part                     shift and go to state 13
    empty                          shift and go to state 15

state 7

    (6) label_part -> empty .

    CONST           reduce using rule 6 (label_part -> empty .)
    TYPE            reduce using rule 6 (label_part -> empty .)
    VAR             reduce using rule 6 (label_part -> empty .)
    FUNCTION        reduce using rule 6 (label_part -> empty .)
    PROCEDURE       reduce using rule 6 (label_part -> empty .)
    BEGIN           reduce using rule 6 (label_part -> empty .)


state 8

    (2) program_head -> PROGRAM NAME . SEMI

    SEMI            shift and go to state 16


state 9

    (1) program -> program_head routine DOT .

    $end            reduce using rule 1 (program -> program_head routine DOT .)


state 10

    (3) routine -> routine_head routine_body .

    DOT             reduce using rule 3 (routine -> routine_head routine_body .)


state 11

    (60) routine_body -> compound_stmt .

    DOT             reduce using rule 60 (routine_body -> compound_stmt .)
    SEMI            reduce using rule 60 (routine_body -> compound_stmt .)


state 12

    (61) compound_stmt -> BEGIN . stmt_list END
    (62) stmt_list -> . stmt_list stmt SEMI
    (63) stmt_list -> . empty
    (127) empty -> .

    END             reduce using rule 127 (empty -> .)
    INTEGER         reduce using rule 127 (empty -> .)
    NAME            reduce using rule 127 (empty -> .)
    SYS_PROC        reduce using rule 127 (empty -> .)
    READ            reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    IF              reduce using rule 127 (empty -> .)
    REPEAT          reduce using rule 127 (empty -> .)
    WHILE           reduce using rule 127 (empty -> .)
    FOR             reduce using rule 127 (empty -> .)
    CASE            reduce using rule 127 (empty -> .)
    GOTO            reduce using rule 127 (empty -> .)

    stmt_list                      shift and go to state 17
    empty                          shift and go to state 18

state 13

    (5) routine_head -> label_part const_part . type_part var_part routine_part
    (19) type_part -> . TYPE type_decl_list
    (20) type_part -> . empty
    (127) empty -> .

    TYPE            shift and go to state 20
    VAR             reduce using rule 127 (empty -> .)
    FUNCTION        reduce using rule 127 (empty -> .)
    PROCEDURE       reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)

    type_part                      shift and go to state 19
    empty                          shift and go to state 21

state 14

    (7) const_part -> CONST . const_expr_list
    (9) const_expr_list -> . const_expr_list const_expr
    (10) const_expr_list -> . const_expr
    (11) const_expr -> . NAME EQUAL const_value SEMI

    NAME            shift and go to state 24

    const_expr_list                shift and go to state 22
    const_expr                     shift and go to state 23

state 15

    (8) const_part -> empty .

    TYPE            reduce using rule 8 (const_part -> empty .)
    VAR             reduce using rule 8 (const_part -> empty .)
    FUNCTION        reduce using rule 8 (const_part -> empty .)
    PROCEDURE       reduce using rule 8 (const_part -> empty .)
    BEGIN           reduce using rule 8 (const_part -> empty .)


state 16

    (2) program_head -> PROGRAM NAME SEMI .

    BEGIN           reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    CONST           reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    TYPE            reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    VAR             reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    FUNCTION        reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    PROCEDURE       reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)


state 17

    (61) compound_stmt -> BEGIN stmt_list . END
    (62) stmt_list -> stmt_list . stmt SEMI
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (77) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (78) proc_stmt -> . NAME
    (79) proc_stmt -> . NAME LP args_list RP
    (80) proc_stmt -> . SYS_PROC
    (81) proc_stmt -> . SYS_PROC LP expression_list RP
    (82) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (83) if_stmt -> . IF expression THEN stmt else_clause
    (86) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (87) while_stmt -> . WHILE expression DO stmt
    (88) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (91) case_stmt -> . CASE expression OF case_expr_list END
    (96) goto_stmt -> . GOTO INTEGER

    END             shift and go to state 25
    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 26
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 18

    (63) stmt_list -> empty .

    END             reduce using rule 63 (stmt_list -> empty .)
    INTEGER         reduce using rule 63 (stmt_list -> empty .)
    NAME            reduce using rule 63 (stmt_list -> empty .)
    SYS_PROC        reduce using rule 63 (stmt_list -> empty .)
    READ            reduce using rule 63 (stmt_list -> empty .)
    BEGIN           reduce using rule 63 (stmt_list -> empty .)
    IF              reduce using rule 63 (stmt_list -> empty .)
    REPEAT          reduce using rule 63 (stmt_list -> empty .)
    WHILE           reduce using rule 63 (stmt_list -> empty .)
    FOR             reduce using rule 63 (stmt_list -> empty .)
    CASE            reduce using rule 63 (stmt_list -> empty .)
    GOTO            reduce using rule 63 (stmt_list -> empty .)
    UNTIL           reduce using rule 63 (stmt_list -> empty .)


state 19

    (5) routine_head -> label_part const_part type_part . var_part routine_part
    (38) var_part -> . VAR var_decl_list
    (39) var_part -> . empty
    (127) empty -> .

    VAR             shift and go to state 48
    FUNCTION        reduce using rule 127 (empty -> .)
    PROCEDURE       reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)

    var_part                       shift and go to state 47
    empty                          shift and go to state 49

state 20

    (19) type_part -> TYPE . type_decl_list
    (21) type_decl_list -> . type_decl_list type_definition
    (22) type_decl_list -> . type_definition
    (23) type_definition -> . NAME EQUAL type_decl SEMI

    NAME            shift and go to state 52

    type_decl_list                 shift and go to state 50
    type_definition                shift and go to state 51

state 21

    (20) type_part -> empty .

    VAR             reduce using rule 20 (type_part -> empty .)
    FUNCTION        reduce using rule 20 (type_part -> empty .)
    PROCEDURE       reduce using rule 20 (type_part -> empty .)
    BEGIN           reduce using rule 20 (type_part -> empty .)


state 22

    (7) const_part -> CONST const_expr_list .
    (9) const_expr_list -> const_expr_list . const_expr
    (11) const_expr -> . NAME EQUAL const_value SEMI

    TYPE            reduce using rule 7 (const_part -> CONST const_expr_list .)
    VAR             reduce using rule 7 (const_part -> CONST const_expr_list .)
    FUNCTION        reduce using rule 7 (const_part -> CONST const_expr_list .)
    PROCEDURE       reduce using rule 7 (const_part -> CONST const_expr_list .)
    BEGIN           reduce using rule 7 (const_part -> CONST const_expr_list .)
    NAME            shift and go to state 24

    const_expr                     shift and go to state 53

state 23

    (10) const_expr_list -> const_expr .

    NAME            reduce using rule 10 (const_expr_list -> const_expr .)
    TYPE            reduce using rule 10 (const_expr_list -> const_expr .)
    VAR             reduce using rule 10 (const_expr_list -> const_expr .)
    FUNCTION        reduce using rule 10 (const_expr_list -> const_expr .)
    PROCEDURE       reduce using rule 10 (const_expr_list -> const_expr .)
    BEGIN           reduce using rule 10 (const_expr_list -> const_expr .)


state 24

    (11) const_expr -> NAME . EQUAL const_value SEMI

    EQUAL           shift and go to state 54


state 25

    (61) compound_stmt -> BEGIN stmt_list END .

    DOT             reduce using rule 61 (compound_stmt -> BEGIN stmt_list END .)
    SEMI            reduce using rule 61 (compound_stmt -> BEGIN stmt_list END .)
    ELSE            reduce using rule 61 (compound_stmt -> BEGIN stmt_list END .)


state 26

    (62) stmt_list -> stmt_list stmt . SEMI

    SEMI            shift and go to state 55


state 27

    (64) stmt -> INTEGER . COLON non_label_stmt

    COLON           shift and go to state 56


state 28

    (65) stmt -> non_label_stmt .

    SEMI            reduce using rule 65 (stmt -> non_label_stmt .)
    ELSE            reduce using rule 65 (stmt -> non_label_stmt .)


state 29

    (66) non_label_stmt -> assign_stmt .

    SEMI            reduce using rule 66 (non_label_stmt -> assign_stmt .)
    ELSE            reduce using rule 66 (non_label_stmt -> assign_stmt .)


state 30

    (67) non_label_stmt -> proc_stmt .

    SEMI            reduce using rule 67 (non_label_stmt -> proc_stmt .)
    ELSE            reduce using rule 67 (non_label_stmt -> proc_stmt .)


state 31

    (68) non_label_stmt -> compound_stmt .

    SEMI            reduce using rule 68 (non_label_stmt -> compound_stmt .)
    ELSE            reduce using rule 68 (non_label_stmt -> compound_stmt .)


state 32

    (69) non_label_stmt -> if_stmt .

    SEMI            reduce using rule 69 (non_label_stmt -> if_stmt .)
    ELSE            reduce using rule 69 (non_label_stmt -> if_stmt .)


state 33

    (70) non_label_stmt -> repeat_stmt .

    SEMI            reduce using rule 70 (non_label_stmt -> repeat_stmt .)
    ELSE            reduce using rule 70 (non_label_stmt -> repeat_stmt .)


state 34

    (71) non_label_stmt -> while_stmt .

    SEMI            reduce using rule 71 (non_label_stmt -> while_stmt .)
    ELSE            reduce using rule 71 (non_label_stmt -> while_stmt .)


state 35

    (72) non_label_stmt -> for_stmt .

    SEMI            reduce using rule 72 (non_label_stmt -> for_stmt .)
    ELSE            reduce using rule 72 (non_label_stmt -> for_stmt .)


state 36

    (73) non_label_stmt -> case_stmt .

    SEMI            reduce using rule 73 (non_label_stmt -> case_stmt .)
    ELSE            reduce using rule 73 (non_label_stmt -> case_stmt .)


state 37

    (74) non_label_stmt -> goto_stmt .

    SEMI            reduce using rule 74 (non_label_stmt -> goto_stmt .)
    ELSE            reduce using rule 74 (non_label_stmt -> goto_stmt .)


state 38

    (75) assign_stmt -> NAME . ASSIGN expression
    (76) assign_stmt -> NAME . LB expression RB ASSIGN expression
    (77) assign_stmt -> NAME . DOT NAME ASSIGN expression
    (78) proc_stmt -> NAME .
    (79) proc_stmt -> NAME . LP args_list RP

    ASSIGN          shift and go to state 57
    LB              shift and go to state 58
    DOT             shift and go to state 59
    SEMI            reduce using rule 78 (proc_stmt -> NAME .)
    ELSE            reduce using rule 78 (proc_stmt -> NAME .)
    LP              shift and go to state 60


state 39

    (80) proc_stmt -> SYS_PROC .
    (81) proc_stmt -> SYS_PROC . LP expression_list RP

    SEMI            reduce using rule 80 (proc_stmt -> SYS_PROC .)
    ELSE            reduce using rule 80 (proc_stmt -> SYS_PROC .)
    LP              shift and go to state 61


state 40

    (82) proc_stmt -> READ . LP factor RP

    LP              shift and go to state 62


state 41

    (83) if_stmt -> IF . expression THEN stmt else_clause
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 63
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 42

    (86) repeat_stmt -> REPEAT . stmt_list UNTIL expression
    (62) stmt_list -> . stmt_list stmt SEMI
    (63) stmt_list -> . empty
    (127) empty -> .

    UNTIL           reduce using rule 127 (empty -> .)
    INTEGER         reduce using rule 127 (empty -> .)
    NAME            reduce using rule 127 (empty -> .)
    SYS_PROC        reduce using rule 127 (empty -> .)
    READ            reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)
    IF              reduce using rule 127 (empty -> .)
    REPEAT          reduce using rule 127 (empty -> .)
    WHILE           reduce using rule 127 (empty -> .)
    FOR             reduce using rule 127 (empty -> .)
    CASE            reduce using rule 127 (empty -> .)
    GOTO            reduce using rule 127 (empty -> .)

    stmt_list                      shift and go to state 80
    empty                          shift and go to state 18

state 43

    (87) while_stmt -> WHILE . expression DO stmt
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 81
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 44

    (88) for_stmt -> FOR . NAME ASSIGN expression direction expression DO stmt

    NAME            shift and go to state 82


state 45

    (91) case_stmt -> CASE . expression OF case_expr_list END
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 83
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 46

    (96) goto_stmt -> GOTO . INTEGER

    INTEGER         shift and go to state 84


state 47

    (5) routine_head -> label_part const_part type_part var_part . routine_part
    (43) routine_part -> . routine_part function_decl
    (44) routine_part -> . routine_part procedure_decl
    (45) routine_part -> . function_decl
    (46) routine_part -> . procedure_decl
    (47) routine_part -> . empty
    (48) function_decl -> . function_head SEMI sub_routine SEMI
    (50) procedure_decl -> . procedure_head SEMI sub_routine SEMI
    (127) empty -> .
    (49) function_head -> . FUNCTION NAME parameters COLON simple_type_decl
    (51) procedure_head -> . PROCEDURE NAME parameters

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PROCEDURE resolved as shift
    BEGIN           reduce using rule 127 (empty -> .)
    FUNCTION        shift and go to state 91
    PROCEDURE       shift and go to state 92

  ! FUNCTION        [ reduce using rule 127 (empty -> .) ]
  ! PROCEDURE       [ reduce using rule 127 (empty -> .) ]

    routine_part                   shift and go to state 85
    function_decl                  shift and go to state 86
    procedure_decl                 shift and go to state 87
    empty                          shift and go to state 88
    function_head                  shift and go to state 89
    procedure_head                 shift and go to state 90

state 48

    (38) var_part -> VAR . var_decl_list
    (40) var_decl_list -> . var_decl_list var_decl
    (41) var_decl_list -> . var_decl
    (42) var_decl -> . name_list COLON type_decl SEMI
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    NAME            shift and go to state 96

    var_decl_list                  shift and go to state 93
    var_decl                       shift and go to state 94
    name_list                      shift and go to state 95

state 49

    (39) var_part -> empty .

    FUNCTION        reduce using rule 39 (var_part -> empty .)
    PROCEDURE       reduce using rule 39 (var_part -> empty .)
    BEGIN           reduce using rule 39 (var_part -> empty .)


state 50

    (19) type_part -> TYPE type_decl_list .
    (21) type_decl_list -> type_decl_list . type_definition
    (23) type_definition -> . NAME EQUAL type_decl SEMI

    VAR             reduce using rule 19 (type_part -> TYPE type_decl_list .)
    FUNCTION        reduce using rule 19 (type_part -> TYPE type_decl_list .)
    PROCEDURE       reduce using rule 19 (type_part -> TYPE type_decl_list .)
    BEGIN           reduce using rule 19 (type_part -> TYPE type_decl_list .)
    NAME            shift and go to state 52

    type_definition                shift and go to state 97

state 51

    (22) type_decl_list -> type_definition .

    NAME            reduce using rule 22 (type_decl_list -> type_definition .)
    VAR             reduce using rule 22 (type_decl_list -> type_definition .)
    FUNCTION        reduce using rule 22 (type_decl_list -> type_definition .)
    PROCEDURE       reduce using rule 22 (type_decl_list -> type_definition .)
    BEGIN           reduce using rule 22 (type_decl_list -> type_definition .)


state 52

    (23) type_definition -> NAME . EQUAL type_decl SEMI

    EQUAL           shift and go to state 98


state 53

    (9) const_expr_list -> const_expr_list const_expr .

    NAME            reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    TYPE            reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    VAR             reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    FUNCTION        reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    PROCEDURE       reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)
    BEGIN           reduce using rule 9 (const_expr_list -> const_expr_list const_expr .)


state 54

    (11) const_expr -> NAME EQUAL . const_value SEMI
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    const_value                    shift and go to state 99

state 55

    (62) stmt_list -> stmt_list stmt SEMI .

    END             reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    INTEGER         reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    NAME            reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    SYS_PROC        reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    READ            reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    BEGIN           reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    IF              reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    REPEAT          reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    WHILE           reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    FOR             reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    CASE            reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    GOTO            reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)
    UNTIL           reduce using rule 62 (stmt_list -> stmt_list stmt SEMI .)


state 56

    (64) stmt -> INTEGER COLON . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (77) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (78) proc_stmt -> . NAME
    (79) proc_stmt -> . NAME LP args_list RP
    (80) proc_stmt -> . SYS_PROC
    (81) proc_stmt -> . SYS_PROC LP expression_list RP
    (82) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (83) if_stmt -> . IF expression THEN stmt else_clause
    (86) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (87) while_stmt -> . WHILE expression DO stmt
    (88) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (91) case_stmt -> . CASE expression OF case_expr_list END
    (96) goto_stmt -> . GOTO INTEGER

    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    non_label_stmt                 shift and go to state 100
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 57

    (75) assign_stmt -> NAME ASSIGN . expression
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 101
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 58

    (76) assign_stmt -> NAME LB . expression RB ASSIGN expression
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 102
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 59

    (77) assign_stmt -> NAME DOT . NAME ASSIGN expression

    NAME            shift and go to state 103


state 60

    (79) proc_stmt -> NAME LP . args_list RP
    (125) args_list -> . args_list COMMA expression
    (126) args_list -> . expression
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    args_list                      shift and go to state 104
    expression                     shift and go to state 105
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 61

    (81) proc_stmt -> SYS_PROC LP . expression_list RP
    (97) expression_list -> . expression_list COMMA expression
    (98) expression_list -> . expression
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression_list                shift and go to state 106
    expression                     shift and go to state 107
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 62

    (82) proc_stmt -> READ LP . factor RP
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    factor                         shift and go to state 108
    const_value                    shift and go to state 71

state 63

    (83) if_stmt -> IF expression . THEN stmt else_clause
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    THEN            shift and go to state 109
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 64

    (105) expression -> expr .
    (106) expr -> expr . PLUS term
    (107) expr -> expr . MINUS term
    (108) expr -> expr . OR term

    THEN            reduce using rule 105 (expression -> expr .)
    GE              reduce using rule 105 (expression -> expr .)
    GT              reduce using rule 105 (expression -> expr .)
    LE              reduce using rule 105 (expression -> expr .)
    LT              reduce using rule 105 (expression -> expr .)
    EQUAL           reduce using rule 105 (expression -> expr .)
    UNEQUAL         reduce using rule 105 (expression -> expr .)
    DO              reduce using rule 105 (expression -> expr .)
    OF              reduce using rule 105 (expression -> expr .)
    SEMI            reduce using rule 105 (expression -> expr .)
    ELSE            reduce using rule 105 (expression -> expr .)
    RB              reduce using rule 105 (expression -> expr .)
    RP              reduce using rule 105 (expression -> expr .)
    COMMA           reduce using rule 105 (expression -> expr .)
    TO              reduce using rule 105 (expression -> expr .)
    DOWNTO          reduce using rule 105 (expression -> expr .)
    PLUS            shift and go to state 116
    MINUS           shift and go to state 117
    OR              shift and go to state 118


state 65

    (109) expr -> term .
    (110) term -> term . MUL factor
    (111) term -> term . DIV factor
    (112) term -> term . MOD factor
    (113) term -> term . AND factor

    PLUS            reduce using rule 109 (expr -> term .)
    MINUS           reduce using rule 109 (expr -> term .)
    OR              reduce using rule 109 (expr -> term .)
    THEN            reduce using rule 109 (expr -> term .)
    GE              reduce using rule 109 (expr -> term .)
    GT              reduce using rule 109 (expr -> term .)
    LE              reduce using rule 109 (expr -> term .)
    LT              reduce using rule 109 (expr -> term .)
    EQUAL           reduce using rule 109 (expr -> term .)
    UNEQUAL         reduce using rule 109 (expr -> term .)
    DO              reduce using rule 109 (expr -> term .)
    OF              reduce using rule 109 (expr -> term .)
    SEMI            reduce using rule 109 (expr -> term .)
    ELSE            reduce using rule 109 (expr -> term .)
    RB              reduce using rule 109 (expr -> term .)
    RP              reduce using rule 109 (expr -> term .)
    COMMA           reduce using rule 109 (expr -> term .)
    TO              reduce using rule 109 (expr -> term .)
    DOWNTO          reduce using rule 109 (expr -> term .)
    MUL             shift and go to state 119
    DIV             shift and go to state 120
    MOD             shift and go to state 121
    AND             shift and go to state 122


state 66

    (122) factor -> MINUS . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    factor                         shift and go to state 123
    const_value                    shift and go to state 71

state 67

    (114) term -> factor .

    MUL             reduce using rule 114 (term -> factor .)
    DIV             reduce using rule 114 (term -> factor .)
    MOD             reduce using rule 114 (term -> factor .)
    AND             reduce using rule 114 (term -> factor .)
    PLUS            reduce using rule 114 (term -> factor .)
    MINUS           reduce using rule 114 (term -> factor .)
    OR              reduce using rule 114 (term -> factor .)
    THEN            reduce using rule 114 (term -> factor .)
    GE              reduce using rule 114 (term -> factor .)
    GT              reduce using rule 114 (term -> factor .)
    LE              reduce using rule 114 (term -> factor .)
    LT              reduce using rule 114 (term -> factor .)
    EQUAL           reduce using rule 114 (term -> factor .)
    UNEQUAL         reduce using rule 114 (term -> factor .)
    DO              reduce using rule 114 (term -> factor .)
    OF              reduce using rule 114 (term -> factor .)
    SEMI            reduce using rule 114 (term -> factor .)
    ELSE            reduce using rule 114 (term -> factor .)
    RB              reduce using rule 114 (term -> factor .)
    RP              reduce using rule 114 (term -> factor .)
    COMMA           reduce using rule 114 (term -> factor .)
    TO              reduce using rule 114 (term -> factor .)
    DOWNTO          reduce using rule 114 (term -> factor .)


state 68

    (115) factor -> SYS_FUNCT .
    (116) factor -> SYS_FUNCT . LP args_list RP

    MUL             reduce using rule 115 (factor -> SYS_FUNCT .)
    DIV             reduce using rule 115 (factor -> SYS_FUNCT .)
    MOD             reduce using rule 115 (factor -> SYS_FUNCT .)
    AND             reduce using rule 115 (factor -> SYS_FUNCT .)
    PLUS            reduce using rule 115 (factor -> SYS_FUNCT .)
    MINUS           reduce using rule 115 (factor -> SYS_FUNCT .)
    OR              reduce using rule 115 (factor -> SYS_FUNCT .)
    THEN            reduce using rule 115 (factor -> SYS_FUNCT .)
    GE              reduce using rule 115 (factor -> SYS_FUNCT .)
    GT              reduce using rule 115 (factor -> SYS_FUNCT .)
    LE              reduce using rule 115 (factor -> SYS_FUNCT .)
    LT              reduce using rule 115 (factor -> SYS_FUNCT .)
    EQUAL           reduce using rule 115 (factor -> SYS_FUNCT .)
    UNEQUAL         reduce using rule 115 (factor -> SYS_FUNCT .)
    DO              reduce using rule 115 (factor -> SYS_FUNCT .)
    OF              reduce using rule 115 (factor -> SYS_FUNCT .)
    SEMI            reduce using rule 115 (factor -> SYS_FUNCT .)
    ELSE            reduce using rule 115 (factor -> SYS_FUNCT .)
    RB              reduce using rule 115 (factor -> SYS_FUNCT .)
    RP              reduce using rule 115 (factor -> SYS_FUNCT .)
    COMMA           reduce using rule 115 (factor -> SYS_FUNCT .)
    TO              reduce using rule 115 (factor -> SYS_FUNCT .)
    DOWNTO          reduce using rule 115 (factor -> SYS_FUNCT .)
    LP              shift and go to state 124


state 69

    (120) factor -> LP . expression RP
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 125
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 70

    (117) factor -> NAME . LP args_list RP
    (118) factor -> NAME .
    (123) factor -> NAME . LB expression RB
    (124) factor -> NAME . DOT NAME

    LP              shift and go to state 126
    MUL             reduce using rule 118 (factor -> NAME .)
    DIV             reduce using rule 118 (factor -> NAME .)
    MOD             reduce using rule 118 (factor -> NAME .)
    AND             reduce using rule 118 (factor -> NAME .)
    PLUS            reduce using rule 118 (factor -> NAME .)
    MINUS           reduce using rule 118 (factor -> NAME .)
    OR              reduce using rule 118 (factor -> NAME .)
    THEN            reduce using rule 118 (factor -> NAME .)
    GE              reduce using rule 118 (factor -> NAME .)
    GT              reduce using rule 118 (factor -> NAME .)
    LE              reduce using rule 118 (factor -> NAME .)
    LT              reduce using rule 118 (factor -> NAME .)
    EQUAL           reduce using rule 118 (factor -> NAME .)
    UNEQUAL         reduce using rule 118 (factor -> NAME .)
    DO              reduce using rule 118 (factor -> NAME .)
    OF              reduce using rule 118 (factor -> NAME .)
    SEMI            reduce using rule 118 (factor -> NAME .)
    ELSE            reduce using rule 118 (factor -> NAME .)
    RB              reduce using rule 118 (factor -> NAME .)
    RP              reduce using rule 118 (factor -> NAME .)
    COMMA           reduce using rule 118 (factor -> NAME .)
    TO              reduce using rule 118 (factor -> NAME .)
    DOWNTO          reduce using rule 118 (factor -> NAME .)
    LB              shift and go to state 127
    DOT             shift and go to state 128


state 71

    (119) factor -> const_value .

    MUL             reduce using rule 119 (factor -> const_value .)
    DIV             reduce using rule 119 (factor -> const_value .)
    MOD             reduce using rule 119 (factor -> const_value .)
    AND             reduce using rule 119 (factor -> const_value .)
    PLUS            reduce using rule 119 (factor -> const_value .)
    MINUS           reduce using rule 119 (factor -> const_value .)
    OR              reduce using rule 119 (factor -> const_value .)
    THEN            reduce using rule 119 (factor -> const_value .)
    GE              reduce using rule 119 (factor -> const_value .)
    GT              reduce using rule 119 (factor -> const_value .)
    LE              reduce using rule 119 (factor -> const_value .)
    LT              reduce using rule 119 (factor -> const_value .)
    EQUAL           reduce using rule 119 (factor -> const_value .)
    UNEQUAL         reduce using rule 119 (factor -> const_value .)
    DO              reduce using rule 119 (factor -> const_value .)
    OF              reduce using rule 119 (factor -> const_value .)
    SEMI            reduce using rule 119 (factor -> const_value .)
    ELSE            reduce using rule 119 (factor -> const_value .)
    RB              reduce using rule 119 (factor -> const_value .)
    RP              reduce using rule 119 (factor -> const_value .)
    COMMA           reduce using rule 119 (factor -> const_value .)
    TO              reduce using rule 119 (factor -> const_value .)
    DOWNTO          reduce using rule 119 (factor -> const_value .)


state 72

    (121) factor -> NOT . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    factor                         shift and go to state 129
    const_value                    shift and go to state 71

state 73

    (12) const_value -> INTEGER .

    MUL             reduce using rule 12 (const_value -> INTEGER .)
    DIV             reduce using rule 12 (const_value -> INTEGER .)
    MOD             reduce using rule 12 (const_value -> INTEGER .)
    AND             reduce using rule 12 (const_value -> INTEGER .)
    PLUS            reduce using rule 12 (const_value -> INTEGER .)
    MINUS           reduce using rule 12 (const_value -> INTEGER .)
    OR              reduce using rule 12 (const_value -> INTEGER .)
    THEN            reduce using rule 12 (const_value -> INTEGER .)
    GE              reduce using rule 12 (const_value -> INTEGER .)
    GT              reduce using rule 12 (const_value -> INTEGER .)
    LE              reduce using rule 12 (const_value -> INTEGER .)
    LT              reduce using rule 12 (const_value -> INTEGER .)
    EQUAL           reduce using rule 12 (const_value -> INTEGER .)
    UNEQUAL         reduce using rule 12 (const_value -> INTEGER .)
    DO              reduce using rule 12 (const_value -> INTEGER .)
    OF              reduce using rule 12 (const_value -> INTEGER .)
    SEMI            reduce using rule 12 (const_value -> INTEGER .)
    ELSE            reduce using rule 12 (const_value -> INTEGER .)
    RB              reduce using rule 12 (const_value -> INTEGER .)
    RP              reduce using rule 12 (const_value -> INTEGER .)
    COMMA           reduce using rule 12 (const_value -> INTEGER .)
    TO              reduce using rule 12 (const_value -> INTEGER .)
    DOWNTO          reduce using rule 12 (const_value -> INTEGER .)
    DOTDOT          reduce using rule 12 (const_value -> INTEGER .)
    COLON           reduce using rule 12 (const_value -> INTEGER .)


state 74

    (13) const_value -> REAL .

    MUL             reduce using rule 13 (const_value -> REAL .)
    DIV             reduce using rule 13 (const_value -> REAL .)
    MOD             reduce using rule 13 (const_value -> REAL .)
    AND             reduce using rule 13 (const_value -> REAL .)
    PLUS            reduce using rule 13 (const_value -> REAL .)
    MINUS           reduce using rule 13 (const_value -> REAL .)
    OR              reduce using rule 13 (const_value -> REAL .)
    THEN            reduce using rule 13 (const_value -> REAL .)
    GE              reduce using rule 13 (const_value -> REAL .)
    GT              reduce using rule 13 (const_value -> REAL .)
    LE              reduce using rule 13 (const_value -> REAL .)
    LT              reduce using rule 13 (const_value -> REAL .)
    EQUAL           reduce using rule 13 (const_value -> REAL .)
    UNEQUAL         reduce using rule 13 (const_value -> REAL .)
    DO              reduce using rule 13 (const_value -> REAL .)
    OF              reduce using rule 13 (const_value -> REAL .)
    SEMI            reduce using rule 13 (const_value -> REAL .)
    ELSE            reduce using rule 13 (const_value -> REAL .)
    RB              reduce using rule 13 (const_value -> REAL .)
    RP              reduce using rule 13 (const_value -> REAL .)
    COMMA           reduce using rule 13 (const_value -> REAL .)
    TO              reduce using rule 13 (const_value -> REAL .)
    DOWNTO          reduce using rule 13 (const_value -> REAL .)
    DOTDOT          reduce using rule 13 (const_value -> REAL .)
    COLON           reduce using rule 13 (const_value -> REAL .)


state 75

    (14) const_value -> CHAR .

    MUL             reduce using rule 14 (const_value -> CHAR .)
    DIV             reduce using rule 14 (const_value -> CHAR .)
    MOD             reduce using rule 14 (const_value -> CHAR .)
    AND             reduce using rule 14 (const_value -> CHAR .)
    PLUS            reduce using rule 14 (const_value -> CHAR .)
    MINUS           reduce using rule 14 (const_value -> CHAR .)
    OR              reduce using rule 14 (const_value -> CHAR .)
    THEN            reduce using rule 14 (const_value -> CHAR .)
    GE              reduce using rule 14 (const_value -> CHAR .)
    GT              reduce using rule 14 (const_value -> CHAR .)
    LE              reduce using rule 14 (const_value -> CHAR .)
    LT              reduce using rule 14 (const_value -> CHAR .)
    EQUAL           reduce using rule 14 (const_value -> CHAR .)
    UNEQUAL         reduce using rule 14 (const_value -> CHAR .)
    DO              reduce using rule 14 (const_value -> CHAR .)
    OF              reduce using rule 14 (const_value -> CHAR .)
    SEMI            reduce using rule 14 (const_value -> CHAR .)
    ELSE            reduce using rule 14 (const_value -> CHAR .)
    RB              reduce using rule 14 (const_value -> CHAR .)
    RP              reduce using rule 14 (const_value -> CHAR .)
    COMMA           reduce using rule 14 (const_value -> CHAR .)
    TO              reduce using rule 14 (const_value -> CHAR .)
    DOWNTO          reduce using rule 14 (const_value -> CHAR .)
    DOTDOT          reduce using rule 14 (const_value -> CHAR .)
    COLON           reduce using rule 14 (const_value -> CHAR .)


state 76

    (15) const_value -> STRING .

    MUL             reduce using rule 15 (const_value -> STRING .)
    DIV             reduce using rule 15 (const_value -> STRING .)
    MOD             reduce using rule 15 (const_value -> STRING .)
    AND             reduce using rule 15 (const_value -> STRING .)
    PLUS            reduce using rule 15 (const_value -> STRING .)
    MINUS           reduce using rule 15 (const_value -> STRING .)
    OR              reduce using rule 15 (const_value -> STRING .)
    THEN            reduce using rule 15 (const_value -> STRING .)
    GE              reduce using rule 15 (const_value -> STRING .)
    GT              reduce using rule 15 (const_value -> STRING .)
    LE              reduce using rule 15 (const_value -> STRING .)
    LT              reduce using rule 15 (const_value -> STRING .)
    EQUAL           reduce using rule 15 (const_value -> STRING .)
    UNEQUAL         reduce using rule 15 (const_value -> STRING .)
    DO              reduce using rule 15 (const_value -> STRING .)
    OF              reduce using rule 15 (const_value -> STRING .)
    SEMI            reduce using rule 15 (const_value -> STRING .)
    ELSE            reduce using rule 15 (const_value -> STRING .)
    RB              reduce using rule 15 (const_value -> STRING .)
    RP              reduce using rule 15 (const_value -> STRING .)
    COMMA           reduce using rule 15 (const_value -> STRING .)
    TO              reduce using rule 15 (const_value -> STRING .)
    DOWNTO          reduce using rule 15 (const_value -> STRING .)
    DOTDOT          reduce using rule 15 (const_value -> STRING .)
    COLON           reduce using rule 15 (const_value -> STRING .)


state 77

    (16) const_value -> SYS_CON .

    MUL             reduce using rule 16 (const_value -> SYS_CON .)
    DIV             reduce using rule 16 (const_value -> SYS_CON .)
    MOD             reduce using rule 16 (const_value -> SYS_CON .)
    AND             reduce using rule 16 (const_value -> SYS_CON .)
    PLUS            reduce using rule 16 (const_value -> SYS_CON .)
    MINUS           reduce using rule 16 (const_value -> SYS_CON .)
    OR              reduce using rule 16 (const_value -> SYS_CON .)
    THEN            reduce using rule 16 (const_value -> SYS_CON .)
    GE              reduce using rule 16 (const_value -> SYS_CON .)
    GT              reduce using rule 16 (const_value -> SYS_CON .)
    LE              reduce using rule 16 (const_value -> SYS_CON .)
    LT              reduce using rule 16 (const_value -> SYS_CON .)
    EQUAL           reduce using rule 16 (const_value -> SYS_CON .)
    UNEQUAL         reduce using rule 16 (const_value -> SYS_CON .)
    DO              reduce using rule 16 (const_value -> SYS_CON .)
    OF              reduce using rule 16 (const_value -> SYS_CON .)
    SEMI            reduce using rule 16 (const_value -> SYS_CON .)
    ELSE            reduce using rule 16 (const_value -> SYS_CON .)
    RB              reduce using rule 16 (const_value -> SYS_CON .)
    RP              reduce using rule 16 (const_value -> SYS_CON .)
    COMMA           reduce using rule 16 (const_value -> SYS_CON .)
    TO              reduce using rule 16 (const_value -> SYS_CON .)
    DOWNTO          reduce using rule 16 (const_value -> SYS_CON .)
    DOTDOT          reduce using rule 16 (const_value -> SYS_CON .)
    COLON           reduce using rule 16 (const_value -> SYS_CON .)


state 78

    (17) const_value -> true .

    MUL             reduce using rule 17 (const_value -> true .)
    DIV             reduce using rule 17 (const_value -> true .)
    MOD             reduce using rule 17 (const_value -> true .)
    AND             reduce using rule 17 (const_value -> true .)
    PLUS            reduce using rule 17 (const_value -> true .)
    MINUS           reduce using rule 17 (const_value -> true .)
    OR              reduce using rule 17 (const_value -> true .)
    THEN            reduce using rule 17 (const_value -> true .)
    GE              reduce using rule 17 (const_value -> true .)
    GT              reduce using rule 17 (const_value -> true .)
    LE              reduce using rule 17 (const_value -> true .)
    LT              reduce using rule 17 (const_value -> true .)
    EQUAL           reduce using rule 17 (const_value -> true .)
    UNEQUAL         reduce using rule 17 (const_value -> true .)
    DO              reduce using rule 17 (const_value -> true .)
    OF              reduce using rule 17 (const_value -> true .)
    SEMI            reduce using rule 17 (const_value -> true .)
    ELSE            reduce using rule 17 (const_value -> true .)
    RB              reduce using rule 17 (const_value -> true .)
    RP              reduce using rule 17 (const_value -> true .)
    COMMA           reduce using rule 17 (const_value -> true .)
    TO              reduce using rule 17 (const_value -> true .)
    DOWNTO          reduce using rule 17 (const_value -> true .)
    DOTDOT          reduce using rule 17 (const_value -> true .)
    COLON           reduce using rule 17 (const_value -> true .)


state 79

    (18) const_value -> false .

    MUL             reduce using rule 18 (const_value -> false .)
    DIV             reduce using rule 18 (const_value -> false .)
    MOD             reduce using rule 18 (const_value -> false .)
    AND             reduce using rule 18 (const_value -> false .)
    PLUS            reduce using rule 18 (const_value -> false .)
    MINUS           reduce using rule 18 (const_value -> false .)
    OR              reduce using rule 18 (const_value -> false .)
    THEN            reduce using rule 18 (const_value -> false .)
    GE              reduce using rule 18 (const_value -> false .)
    GT              reduce using rule 18 (const_value -> false .)
    LE              reduce using rule 18 (const_value -> false .)
    LT              reduce using rule 18 (const_value -> false .)
    EQUAL           reduce using rule 18 (const_value -> false .)
    UNEQUAL         reduce using rule 18 (const_value -> false .)
    DO              reduce using rule 18 (const_value -> false .)
    OF              reduce using rule 18 (const_value -> false .)
    SEMI            reduce using rule 18 (const_value -> false .)
    ELSE            reduce using rule 18 (const_value -> false .)
    RB              reduce using rule 18 (const_value -> false .)
    RP              reduce using rule 18 (const_value -> false .)
    COMMA           reduce using rule 18 (const_value -> false .)
    TO              reduce using rule 18 (const_value -> false .)
    DOWNTO          reduce using rule 18 (const_value -> false .)
    DOTDOT          reduce using rule 18 (const_value -> false .)
    COLON           reduce using rule 18 (const_value -> false .)


state 80

    (86) repeat_stmt -> REPEAT stmt_list . UNTIL expression
    (62) stmt_list -> stmt_list . stmt SEMI
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (77) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (78) proc_stmt -> . NAME
    (79) proc_stmt -> . NAME LP args_list RP
    (80) proc_stmt -> . SYS_PROC
    (81) proc_stmt -> . SYS_PROC LP expression_list RP
    (82) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (83) if_stmt -> . IF expression THEN stmt else_clause
    (86) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (87) while_stmt -> . WHILE expression DO stmt
    (88) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (91) case_stmt -> . CASE expression OF case_expr_list END
    (96) goto_stmt -> . GOTO INTEGER

    UNTIL           shift and go to state 130
    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 26
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 81

    (87) while_stmt -> WHILE expression . DO stmt
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    DO              shift and go to state 131
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 82

    (88) for_stmt -> FOR NAME . ASSIGN expression direction expression DO stmt

    ASSIGN          shift and go to state 132


state 83

    (91) case_stmt -> CASE expression . OF case_expr_list END
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    OF              shift and go to state 133
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 84

    (96) goto_stmt -> GOTO INTEGER .

    SEMI            reduce using rule 96 (goto_stmt -> GOTO INTEGER .)
    ELSE            reduce using rule 96 (goto_stmt -> GOTO INTEGER .)


state 85

    (5) routine_head -> label_part const_part type_part var_part routine_part .
    (43) routine_part -> routine_part . function_decl
    (44) routine_part -> routine_part . procedure_decl
    (48) function_decl -> . function_head SEMI sub_routine SEMI
    (50) procedure_decl -> . procedure_head SEMI sub_routine SEMI
    (49) function_head -> . FUNCTION NAME parameters COLON simple_type_decl
    (51) procedure_head -> . PROCEDURE NAME parameters

    BEGIN           reduce using rule 5 (routine_head -> label_part const_part type_part var_part routine_part .)
    FUNCTION        shift and go to state 91
    PROCEDURE       shift and go to state 92

    function_decl                  shift and go to state 134
    procedure_decl                 shift and go to state 135
    function_head                  shift and go to state 89
    procedure_head                 shift and go to state 90

state 86

    (45) routine_part -> function_decl .

    FUNCTION        reduce using rule 45 (routine_part -> function_decl .)
    PROCEDURE       reduce using rule 45 (routine_part -> function_decl .)
    BEGIN           reduce using rule 45 (routine_part -> function_decl .)


state 87

    (46) routine_part -> procedure_decl .

    FUNCTION        reduce using rule 46 (routine_part -> procedure_decl .)
    PROCEDURE       reduce using rule 46 (routine_part -> procedure_decl .)
    BEGIN           reduce using rule 46 (routine_part -> procedure_decl .)


state 88

    (47) routine_part -> empty .

    FUNCTION        reduce using rule 47 (routine_part -> empty .)
    PROCEDURE       reduce using rule 47 (routine_part -> empty .)
    BEGIN           reduce using rule 47 (routine_part -> empty .)


state 89

    (48) function_decl -> function_head . SEMI sub_routine SEMI

    SEMI            shift and go to state 136


state 90

    (50) procedure_decl -> procedure_head . SEMI sub_routine SEMI

    SEMI            shift and go to state 137


state 91

    (49) function_head -> FUNCTION . NAME parameters COLON simple_type_decl

    NAME            shift and go to state 138


state 92

    (51) procedure_head -> PROCEDURE . NAME parameters

    NAME            shift and go to state 139


state 93

    (38) var_part -> VAR var_decl_list .
    (40) var_decl_list -> var_decl_list . var_decl
    (42) var_decl -> . name_list COLON type_decl SEMI
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    FUNCTION        reduce using rule 38 (var_part -> VAR var_decl_list .)
    PROCEDURE       reduce using rule 38 (var_part -> VAR var_decl_list .)
    BEGIN           reduce using rule 38 (var_part -> VAR var_decl_list .)
    NAME            shift and go to state 96

    var_decl                       shift and go to state 140
    name_list                      shift and go to state 95

state 94

    (41) var_decl_list -> var_decl .

    NAME            reduce using rule 41 (var_decl_list -> var_decl .)
    FUNCTION        reduce using rule 41 (var_decl_list -> var_decl .)
    PROCEDURE       reduce using rule 41 (var_decl_list -> var_decl .)
    BEGIN           reduce using rule 41 (var_decl_list -> var_decl .)


state 95

    (42) var_decl -> name_list . COLON type_decl SEMI
    (36) name_list -> name_list . COMMA NAME

    COLON           shift and go to state 141
    COMMA           shift and go to state 142


state 96

    (37) name_list -> NAME .

    COLON           reduce using rule 37 (name_list -> NAME .)
    COMMA           reduce using rule 37 (name_list -> NAME .)
    RP              reduce using rule 37 (name_list -> NAME .)


state 97

    (21) type_decl_list -> type_decl_list type_definition .

    NAME            reduce using rule 21 (type_decl_list -> type_decl_list type_definition .)
    VAR             reduce using rule 21 (type_decl_list -> type_decl_list type_definition .)
    FUNCTION        reduce using rule 21 (type_decl_list -> type_decl_list type_definition .)
    PROCEDURE       reduce using rule 21 (type_decl_list -> type_decl_list type_definition .)
    BEGIN           reduce using rule 21 (type_decl_list -> type_decl_list type_definition .)


state 98

    (23) type_definition -> NAME EQUAL . type_decl SEMI
    (24) type_decl -> . simple_type_decl
    (25) type_decl -> . array_type_decl
    (26) type_decl -> . record_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (31) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (32) record_type_decl -> . RECORD field_decl_list END
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 148
    NAME            shift and go to state 143
    LP              shift and go to state 149
    ARRAY           shift and go to state 151
    RECORD          shift and go to state 152
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    type_decl                      shift and go to state 144
    simple_type_decl               shift and go to state 145
    array_type_decl                shift and go to state 146
    record_type_decl               shift and go to state 147
    const_value                    shift and go to state 150

state 99

    (11) const_expr -> NAME EQUAL const_value . SEMI

    SEMI            shift and go to state 153


state 100

    (64) stmt -> INTEGER COLON non_label_stmt .

    SEMI            reduce using rule 64 (stmt -> INTEGER COLON non_label_stmt .)
    ELSE            reduce using rule 64 (stmt -> INTEGER COLON non_label_stmt .)


state 101

    (75) assign_stmt -> NAME ASSIGN expression .
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 75 (assign_stmt -> NAME ASSIGN expression .)
    ELSE            reduce using rule 75 (assign_stmt -> NAME ASSIGN expression .)
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 102

    (76) assign_stmt -> NAME LB expression . RB ASSIGN expression
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    RB              shift and go to state 154
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 103

    (77) assign_stmt -> NAME DOT NAME . ASSIGN expression

    ASSIGN          shift and go to state 155


state 104

    (79) proc_stmt -> NAME LP args_list . RP
    (125) args_list -> args_list . COMMA expression

    RP              shift and go to state 156
    COMMA           shift and go to state 157


state 105

    (126) args_list -> expression .
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    RP              reduce using rule 126 (args_list -> expression .)
    COMMA           reduce using rule 126 (args_list -> expression .)
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 106

    (81) proc_stmt -> SYS_PROC LP expression_list . RP
    (97) expression_list -> expression_list . COMMA expression

    RP              shift and go to state 158
    COMMA           shift and go to state 159


state 107

    (98) expression_list -> expression .
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    RP              reduce using rule 98 (expression_list -> expression .)
    COMMA           reduce using rule 98 (expression_list -> expression .)
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 108

    (82) proc_stmt -> READ LP factor . RP

    RP              shift and go to state 160


state 109

    (83) if_stmt -> IF expression THEN . stmt else_clause
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (77) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (78) proc_stmt -> . NAME
    (79) proc_stmt -> . NAME LP args_list RP
    (80) proc_stmt -> . SYS_PROC
    (81) proc_stmt -> . SYS_PROC LP expression_list RP
    (82) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (83) if_stmt -> . IF expression THEN stmt else_clause
    (86) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (87) while_stmt -> . WHILE expression DO stmt
    (88) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (91) case_stmt -> . CASE expression OF case_expr_list END
    (96) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 161
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 110

    (99) expression -> expression GE . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expr                           shift and go to state 162
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 111

    (100) expression -> expression GT . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expr                           shift and go to state 163
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 112

    (101) expression -> expression LE . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expr                           shift and go to state 164
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 113

    (102) expression -> expression LT . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expr                           shift and go to state 165
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 114

    (103) expression -> expression EQUAL . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expr                           shift and go to state 166
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 115

    (104) expression -> expression UNEQUAL . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expr                           shift and go to state 167
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 116

    (106) expr -> expr PLUS . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    term                           shift and go to state 168
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 117

    (107) expr -> expr MINUS . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    term                           shift and go to state 169
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 118

    (108) expr -> expr OR . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    term                           shift and go to state 170
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 119

    (110) term -> term MUL . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    factor                         shift and go to state 171
    const_value                    shift and go to state 71

state 120

    (111) term -> term DIV . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    factor                         shift and go to state 172
    const_value                    shift and go to state 71

state 121

    (112) term -> term MOD . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    factor                         shift and go to state 173
    const_value                    shift and go to state 71

state 122

    (113) term -> term AND . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    factor                         shift and go to state 174
    const_value                    shift and go to state 71

state 123

    (122) factor -> MINUS factor .

    MUL             reduce using rule 122 (factor -> MINUS factor .)
    DIV             reduce using rule 122 (factor -> MINUS factor .)
    MOD             reduce using rule 122 (factor -> MINUS factor .)
    AND             reduce using rule 122 (factor -> MINUS factor .)
    PLUS            reduce using rule 122 (factor -> MINUS factor .)
    MINUS           reduce using rule 122 (factor -> MINUS factor .)
    OR              reduce using rule 122 (factor -> MINUS factor .)
    THEN            reduce using rule 122 (factor -> MINUS factor .)
    GE              reduce using rule 122 (factor -> MINUS factor .)
    GT              reduce using rule 122 (factor -> MINUS factor .)
    LE              reduce using rule 122 (factor -> MINUS factor .)
    LT              reduce using rule 122 (factor -> MINUS factor .)
    EQUAL           reduce using rule 122 (factor -> MINUS factor .)
    UNEQUAL         reduce using rule 122 (factor -> MINUS factor .)
    DO              reduce using rule 122 (factor -> MINUS factor .)
    OF              reduce using rule 122 (factor -> MINUS factor .)
    SEMI            reduce using rule 122 (factor -> MINUS factor .)
    ELSE            reduce using rule 122 (factor -> MINUS factor .)
    RB              reduce using rule 122 (factor -> MINUS factor .)
    RP              reduce using rule 122 (factor -> MINUS factor .)
    COMMA           reduce using rule 122 (factor -> MINUS factor .)
    TO              reduce using rule 122 (factor -> MINUS factor .)
    DOWNTO          reduce using rule 122 (factor -> MINUS factor .)


state 124

    (116) factor -> SYS_FUNCT LP . args_list RP
    (125) args_list -> . args_list COMMA expression
    (126) args_list -> . expression
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    args_list                      shift and go to state 175
    expression                     shift and go to state 105
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 125

    (120) factor -> LP expression . RP
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    RP              shift and go to state 176
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 126

    (117) factor -> NAME LP . args_list RP
    (125) args_list -> . args_list COMMA expression
    (126) args_list -> . expression
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    args_list                      shift and go to state 177
    expression                     shift and go to state 105
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 127

    (123) factor -> NAME LB . expression RB
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 178
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 128

    (124) factor -> NAME DOT . NAME

    NAME            shift and go to state 179


state 129

    (121) factor -> NOT factor .

    MUL             reduce using rule 121 (factor -> NOT factor .)
    DIV             reduce using rule 121 (factor -> NOT factor .)
    MOD             reduce using rule 121 (factor -> NOT factor .)
    AND             reduce using rule 121 (factor -> NOT factor .)
    PLUS            reduce using rule 121 (factor -> NOT factor .)
    MINUS           reduce using rule 121 (factor -> NOT factor .)
    OR              reduce using rule 121 (factor -> NOT factor .)
    THEN            reduce using rule 121 (factor -> NOT factor .)
    GE              reduce using rule 121 (factor -> NOT factor .)
    GT              reduce using rule 121 (factor -> NOT factor .)
    LE              reduce using rule 121 (factor -> NOT factor .)
    LT              reduce using rule 121 (factor -> NOT factor .)
    EQUAL           reduce using rule 121 (factor -> NOT factor .)
    UNEQUAL         reduce using rule 121 (factor -> NOT factor .)
    DO              reduce using rule 121 (factor -> NOT factor .)
    OF              reduce using rule 121 (factor -> NOT factor .)
    SEMI            reduce using rule 121 (factor -> NOT factor .)
    ELSE            reduce using rule 121 (factor -> NOT factor .)
    RB              reduce using rule 121 (factor -> NOT factor .)
    RP              reduce using rule 121 (factor -> NOT factor .)
    COMMA           reduce using rule 121 (factor -> NOT factor .)
    TO              reduce using rule 121 (factor -> NOT factor .)
    DOWNTO          reduce using rule 121 (factor -> NOT factor .)


state 130

    (86) repeat_stmt -> REPEAT stmt_list UNTIL . expression
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 180
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 131

    (87) while_stmt -> WHILE expression DO . stmt
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (77) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (78) proc_stmt -> . NAME
    (79) proc_stmt -> . NAME LP args_list RP
    (80) proc_stmt -> . SYS_PROC
    (81) proc_stmt -> . SYS_PROC LP expression_list RP
    (82) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (83) if_stmt -> . IF expression THEN stmt else_clause
    (86) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (87) while_stmt -> . WHILE expression DO stmt
    (88) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (91) case_stmt -> . CASE expression OF case_expr_list END
    (96) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 181
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 132

    (88) for_stmt -> FOR NAME ASSIGN . expression direction expression DO stmt
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 182
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 133

    (91) case_stmt -> CASE expression OF . case_expr_list END
    (92) case_expr_list -> . case_expr_list case_expr
    (93) case_expr_list -> . case_expr
    (94) case_expr -> . const_value COLON stmt SEMI
    (95) case_expr -> . ID COLON stmt SEMI
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    ID              shift and go to state 186
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    case_expr_list                 shift and go to state 183
    case_expr                      shift and go to state 184
    const_value                    shift and go to state 185

state 134

    (43) routine_part -> routine_part function_decl .

    FUNCTION        reduce using rule 43 (routine_part -> routine_part function_decl .)
    PROCEDURE       reduce using rule 43 (routine_part -> routine_part function_decl .)
    BEGIN           reduce using rule 43 (routine_part -> routine_part function_decl .)


state 135

    (44) routine_part -> routine_part procedure_decl .

    FUNCTION        reduce using rule 44 (routine_part -> routine_part procedure_decl .)
    PROCEDURE       reduce using rule 44 (routine_part -> routine_part procedure_decl .)
    BEGIN           reduce using rule 44 (routine_part -> routine_part procedure_decl .)


state 136

    (48) function_decl -> function_head SEMI . sub_routine SEMI
    (4) sub_routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . empty
    (127) empty -> .

    CONST           reduce using rule 127 (empty -> .)
    TYPE            reduce using rule 127 (empty -> .)
    VAR             reduce using rule 127 (empty -> .)
    FUNCTION        reduce using rule 127 (empty -> .)
    PROCEDURE       reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)

    sub_routine                    shift and go to state 187
    routine_head                   shift and go to state 188
    label_part                     shift and go to state 6
    empty                          shift and go to state 7

state 137

    (50) procedure_decl -> procedure_head SEMI . sub_routine SEMI
    (4) sub_routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . empty
    (127) empty -> .

    CONST           reduce using rule 127 (empty -> .)
    TYPE            reduce using rule 127 (empty -> .)
    VAR             reduce using rule 127 (empty -> .)
    FUNCTION        reduce using rule 127 (empty -> .)
    PROCEDURE       reduce using rule 127 (empty -> .)
    BEGIN           reduce using rule 127 (empty -> .)

    sub_routine                    shift and go to state 189
    routine_head                   shift and go to state 188
    label_part                     shift and go to state 6
    empty                          shift and go to state 7

state 138

    (49) function_head -> FUNCTION NAME . parameters COLON simple_type_decl
    (52) parameters -> . LP para_decl_list RP
    (53) parameters -> . empty
    (127) empty -> .

    LP              shift and go to state 191
    COLON           reduce using rule 127 (empty -> .)

    parameters                     shift and go to state 190
    empty                          shift and go to state 192

state 139

    (51) procedure_head -> PROCEDURE NAME . parameters
    (52) parameters -> . LP para_decl_list RP
    (53) parameters -> . empty
    (127) empty -> .

    LP              shift and go to state 191
    SEMI            reduce using rule 127 (empty -> .)

    parameters                     shift and go to state 193
    empty                          shift and go to state 192

state 140

    (40) var_decl_list -> var_decl_list var_decl .

    NAME            reduce using rule 40 (var_decl_list -> var_decl_list var_decl .)
    FUNCTION        reduce using rule 40 (var_decl_list -> var_decl_list var_decl .)
    PROCEDURE       reduce using rule 40 (var_decl_list -> var_decl_list var_decl .)
    BEGIN           reduce using rule 40 (var_decl_list -> var_decl_list var_decl .)


state 141

    (42) var_decl -> name_list COLON . type_decl SEMI
    (24) type_decl -> . simple_type_decl
    (25) type_decl -> . array_type_decl
    (26) type_decl -> . record_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (31) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (32) record_type_decl -> . RECORD field_decl_list END
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 148
    NAME            shift and go to state 143
    LP              shift and go to state 149
    ARRAY           shift and go to state 151
    RECORD          shift and go to state 152
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    type_decl                      shift and go to state 194
    simple_type_decl               shift and go to state 145
    array_type_decl                shift and go to state 146
    record_type_decl               shift and go to state 147
    const_value                    shift and go to state 150

state 142

    (36) name_list -> name_list COMMA . NAME

    NAME            shift and go to state 195


state 143

    (28) simple_type_decl -> NAME .

    SEMI            reduce using rule 28 (simple_type_decl -> NAME .)
    RB              reduce using rule 28 (simple_type_decl -> NAME .)
    RP              reduce using rule 28 (simple_type_decl -> NAME .)


state 144

    (23) type_definition -> NAME EQUAL type_decl . SEMI

    SEMI            shift and go to state 196


state 145

    (24) type_decl -> simple_type_decl .

    SEMI            reduce using rule 24 (type_decl -> simple_type_decl .)


state 146

    (25) type_decl -> array_type_decl .

    SEMI            reduce using rule 25 (type_decl -> array_type_decl .)


state 147

    (26) type_decl -> record_type_decl .

    SEMI            reduce using rule 26 (type_decl -> record_type_decl .)


state 148

    (27) simple_type_decl -> SYS_TYPE .

    SEMI            reduce using rule 27 (simple_type_decl -> SYS_TYPE .)
    RB              reduce using rule 27 (simple_type_decl -> SYS_TYPE .)
    RP              reduce using rule 27 (simple_type_decl -> SYS_TYPE .)


state 149

    (29) simple_type_decl -> LP . name_list RP
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    NAME            shift and go to state 96

    name_list                      shift and go to state 197

state 150

    (30) simple_type_decl -> const_value . DOTDOT const_value

    DOTDOT          shift and go to state 198


state 151

    (31) array_type_decl -> ARRAY . LB simple_type_decl RB OF type_decl

    LB              shift and go to state 199


state 152

    (32) record_type_decl -> RECORD . field_decl_list END
    (33) field_decl_list -> . field_decl_list field_decl
    (34) field_decl_list -> . field_decl
    (35) field_decl -> . name_list COLON type_decl SEMI
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    NAME            shift and go to state 96

    field_decl_list                shift and go to state 200
    field_decl                     shift and go to state 201
    name_list                      shift and go to state 202

state 153

    (11) const_expr -> NAME EQUAL const_value SEMI .

    NAME            reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    TYPE            reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    VAR             reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    FUNCTION        reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    PROCEDURE       reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)
    BEGIN           reduce using rule 11 (const_expr -> NAME EQUAL const_value SEMI .)


state 154

    (76) assign_stmt -> NAME LB expression RB . ASSIGN expression

    ASSIGN          shift and go to state 203


state 155

    (77) assign_stmt -> NAME DOT NAME ASSIGN . expression
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 204
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 156

    (79) proc_stmt -> NAME LP args_list RP .

    SEMI            reduce using rule 79 (proc_stmt -> NAME LP args_list RP .)
    ELSE            reduce using rule 79 (proc_stmt -> NAME LP args_list RP .)


state 157

    (125) args_list -> args_list COMMA . expression
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 205
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 158

    (81) proc_stmt -> SYS_PROC LP expression_list RP .

    SEMI            reduce using rule 81 (proc_stmt -> SYS_PROC LP expression_list RP .)
    ELSE            reduce using rule 81 (proc_stmt -> SYS_PROC LP expression_list RP .)


state 159

    (97) expression_list -> expression_list COMMA . expression
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 206
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 160

    (82) proc_stmt -> READ LP factor RP .

    SEMI            reduce using rule 82 (proc_stmt -> READ LP factor RP .)
    ELSE            reduce using rule 82 (proc_stmt -> READ LP factor RP .)


state 161

    (83) if_stmt -> IF expression THEN stmt . else_clause
    (84) else_clause -> . ELSE stmt
    (85) else_clause -> . empty
    (127) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 208
    SEMI            reduce using rule 127 (empty -> .)

  ! ELSE            [ reduce using rule 127 (empty -> .) ]

    else_clause                    shift and go to state 207
    empty                          shift and go to state 209

state 162

    (99) expression -> expression GE expr .
    (106) expr -> expr . PLUS term
    (107) expr -> expr . MINUS term
    (108) expr -> expr . OR term

    THEN            reduce using rule 99 (expression -> expression GE expr .)
    GE              reduce using rule 99 (expression -> expression GE expr .)
    GT              reduce using rule 99 (expression -> expression GE expr .)
    LE              reduce using rule 99 (expression -> expression GE expr .)
    LT              reduce using rule 99 (expression -> expression GE expr .)
    EQUAL           reduce using rule 99 (expression -> expression GE expr .)
    UNEQUAL         reduce using rule 99 (expression -> expression GE expr .)
    DO              reduce using rule 99 (expression -> expression GE expr .)
    OF              reduce using rule 99 (expression -> expression GE expr .)
    SEMI            reduce using rule 99 (expression -> expression GE expr .)
    ELSE            reduce using rule 99 (expression -> expression GE expr .)
    RB              reduce using rule 99 (expression -> expression GE expr .)
    RP              reduce using rule 99 (expression -> expression GE expr .)
    COMMA           reduce using rule 99 (expression -> expression GE expr .)
    TO              reduce using rule 99 (expression -> expression GE expr .)
    DOWNTO          reduce using rule 99 (expression -> expression GE expr .)
    PLUS            shift and go to state 116
    MINUS           shift and go to state 117
    OR              shift and go to state 118


state 163

    (100) expression -> expression GT expr .
    (106) expr -> expr . PLUS term
    (107) expr -> expr . MINUS term
    (108) expr -> expr . OR term

    THEN            reduce using rule 100 (expression -> expression GT expr .)
    GE              reduce using rule 100 (expression -> expression GT expr .)
    GT              reduce using rule 100 (expression -> expression GT expr .)
    LE              reduce using rule 100 (expression -> expression GT expr .)
    LT              reduce using rule 100 (expression -> expression GT expr .)
    EQUAL           reduce using rule 100 (expression -> expression GT expr .)
    UNEQUAL         reduce using rule 100 (expression -> expression GT expr .)
    DO              reduce using rule 100 (expression -> expression GT expr .)
    OF              reduce using rule 100 (expression -> expression GT expr .)
    SEMI            reduce using rule 100 (expression -> expression GT expr .)
    ELSE            reduce using rule 100 (expression -> expression GT expr .)
    RB              reduce using rule 100 (expression -> expression GT expr .)
    RP              reduce using rule 100 (expression -> expression GT expr .)
    COMMA           reduce using rule 100 (expression -> expression GT expr .)
    TO              reduce using rule 100 (expression -> expression GT expr .)
    DOWNTO          reduce using rule 100 (expression -> expression GT expr .)
    PLUS            shift and go to state 116
    MINUS           shift and go to state 117
    OR              shift and go to state 118


state 164

    (101) expression -> expression LE expr .
    (106) expr -> expr . PLUS term
    (107) expr -> expr . MINUS term
    (108) expr -> expr . OR term

    THEN            reduce using rule 101 (expression -> expression LE expr .)
    GE              reduce using rule 101 (expression -> expression LE expr .)
    GT              reduce using rule 101 (expression -> expression LE expr .)
    LE              reduce using rule 101 (expression -> expression LE expr .)
    LT              reduce using rule 101 (expression -> expression LE expr .)
    EQUAL           reduce using rule 101 (expression -> expression LE expr .)
    UNEQUAL         reduce using rule 101 (expression -> expression LE expr .)
    DO              reduce using rule 101 (expression -> expression LE expr .)
    OF              reduce using rule 101 (expression -> expression LE expr .)
    SEMI            reduce using rule 101 (expression -> expression LE expr .)
    ELSE            reduce using rule 101 (expression -> expression LE expr .)
    RB              reduce using rule 101 (expression -> expression LE expr .)
    RP              reduce using rule 101 (expression -> expression LE expr .)
    COMMA           reduce using rule 101 (expression -> expression LE expr .)
    TO              reduce using rule 101 (expression -> expression LE expr .)
    DOWNTO          reduce using rule 101 (expression -> expression LE expr .)
    PLUS            shift and go to state 116
    MINUS           shift and go to state 117
    OR              shift and go to state 118


state 165

    (102) expression -> expression LT expr .
    (106) expr -> expr . PLUS term
    (107) expr -> expr . MINUS term
    (108) expr -> expr . OR term

    THEN            reduce using rule 102 (expression -> expression LT expr .)
    GE              reduce using rule 102 (expression -> expression LT expr .)
    GT              reduce using rule 102 (expression -> expression LT expr .)
    LE              reduce using rule 102 (expression -> expression LT expr .)
    LT              reduce using rule 102 (expression -> expression LT expr .)
    EQUAL           reduce using rule 102 (expression -> expression LT expr .)
    UNEQUAL         reduce using rule 102 (expression -> expression LT expr .)
    DO              reduce using rule 102 (expression -> expression LT expr .)
    OF              reduce using rule 102 (expression -> expression LT expr .)
    SEMI            reduce using rule 102 (expression -> expression LT expr .)
    ELSE            reduce using rule 102 (expression -> expression LT expr .)
    RB              reduce using rule 102 (expression -> expression LT expr .)
    RP              reduce using rule 102 (expression -> expression LT expr .)
    COMMA           reduce using rule 102 (expression -> expression LT expr .)
    TO              reduce using rule 102 (expression -> expression LT expr .)
    DOWNTO          reduce using rule 102 (expression -> expression LT expr .)
    PLUS            shift and go to state 116
    MINUS           shift and go to state 117
    OR              shift and go to state 118


state 166

    (103) expression -> expression EQUAL expr .
    (106) expr -> expr . PLUS term
    (107) expr -> expr . MINUS term
    (108) expr -> expr . OR term

    THEN            reduce using rule 103 (expression -> expression EQUAL expr .)
    GE              reduce using rule 103 (expression -> expression EQUAL expr .)
    GT              reduce using rule 103 (expression -> expression EQUAL expr .)
    LE              reduce using rule 103 (expression -> expression EQUAL expr .)
    LT              reduce using rule 103 (expression -> expression EQUAL expr .)
    EQUAL           reduce using rule 103 (expression -> expression EQUAL expr .)
    UNEQUAL         reduce using rule 103 (expression -> expression EQUAL expr .)
    DO              reduce using rule 103 (expression -> expression EQUAL expr .)
    OF              reduce using rule 103 (expression -> expression EQUAL expr .)
    SEMI            reduce using rule 103 (expression -> expression EQUAL expr .)
    ELSE            reduce using rule 103 (expression -> expression EQUAL expr .)
    RB              reduce using rule 103 (expression -> expression EQUAL expr .)
    RP              reduce using rule 103 (expression -> expression EQUAL expr .)
    COMMA           reduce using rule 103 (expression -> expression EQUAL expr .)
    TO              reduce using rule 103 (expression -> expression EQUAL expr .)
    DOWNTO          reduce using rule 103 (expression -> expression EQUAL expr .)
    PLUS            shift and go to state 116
    MINUS           shift and go to state 117
    OR              shift and go to state 118


state 167

    (104) expression -> expression UNEQUAL expr .
    (106) expr -> expr . PLUS term
    (107) expr -> expr . MINUS term
    (108) expr -> expr . OR term

    THEN            reduce using rule 104 (expression -> expression UNEQUAL expr .)
    GE              reduce using rule 104 (expression -> expression UNEQUAL expr .)
    GT              reduce using rule 104 (expression -> expression UNEQUAL expr .)
    LE              reduce using rule 104 (expression -> expression UNEQUAL expr .)
    LT              reduce using rule 104 (expression -> expression UNEQUAL expr .)
    EQUAL           reduce using rule 104 (expression -> expression UNEQUAL expr .)
    UNEQUAL         reduce using rule 104 (expression -> expression UNEQUAL expr .)
    DO              reduce using rule 104 (expression -> expression UNEQUAL expr .)
    OF              reduce using rule 104 (expression -> expression UNEQUAL expr .)
    SEMI            reduce using rule 104 (expression -> expression UNEQUAL expr .)
    ELSE            reduce using rule 104 (expression -> expression UNEQUAL expr .)
    RB              reduce using rule 104 (expression -> expression UNEQUAL expr .)
    RP              reduce using rule 104 (expression -> expression UNEQUAL expr .)
    COMMA           reduce using rule 104 (expression -> expression UNEQUAL expr .)
    TO              reduce using rule 104 (expression -> expression UNEQUAL expr .)
    DOWNTO          reduce using rule 104 (expression -> expression UNEQUAL expr .)
    PLUS            shift and go to state 116
    MINUS           shift and go to state 117
    OR              shift and go to state 118


state 168

    (106) expr -> expr PLUS term .
    (110) term -> term . MUL factor
    (111) term -> term . DIV factor
    (112) term -> term . MOD factor
    (113) term -> term . AND factor

    PLUS            reduce using rule 106 (expr -> expr PLUS term .)
    MINUS           reduce using rule 106 (expr -> expr PLUS term .)
    OR              reduce using rule 106 (expr -> expr PLUS term .)
    THEN            reduce using rule 106 (expr -> expr PLUS term .)
    GE              reduce using rule 106 (expr -> expr PLUS term .)
    GT              reduce using rule 106 (expr -> expr PLUS term .)
    LE              reduce using rule 106 (expr -> expr PLUS term .)
    LT              reduce using rule 106 (expr -> expr PLUS term .)
    EQUAL           reduce using rule 106 (expr -> expr PLUS term .)
    UNEQUAL         reduce using rule 106 (expr -> expr PLUS term .)
    DO              reduce using rule 106 (expr -> expr PLUS term .)
    OF              reduce using rule 106 (expr -> expr PLUS term .)
    SEMI            reduce using rule 106 (expr -> expr PLUS term .)
    ELSE            reduce using rule 106 (expr -> expr PLUS term .)
    RB              reduce using rule 106 (expr -> expr PLUS term .)
    RP              reduce using rule 106 (expr -> expr PLUS term .)
    COMMA           reduce using rule 106 (expr -> expr PLUS term .)
    TO              reduce using rule 106 (expr -> expr PLUS term .)
    DOWNTO          reduce using rule 106 (expr -> expr PLUS term .)
    MUL             shift and go to state 119
    DIV             shift and go to state 120
    MOD             shift and go to state 121
    AND             shift and go to state 122


state 169

    (107) expr -> expr MINUS term .
    (110) term -> term . MUL factor
    (111) term -> term . DIV factor
    (112) term -> term . MOD factor
    (113) term -> term . AND factor

    PLUS            reduce using rule 107 (expr -> expr MINUS term .)
    MINUS           reduce using rule 107 (expr -> expr MINUS term .)
    OR              reduce using rule 107 (expr -> expr MINUS term .)
    THEN            reduce using rule 107 (expr -> expr MINUS term .)
    GE              reduce using rule 107 (expr -> expr MINUS term .)
    GT              reduce using rule 107 (expr -> expr MINUS term .)
    LE              reduce using rule 107 (expr -> expr MINUS term .)
    LT              reduce using rule 107 (expr -> expr MINUS term .)
    EQUAL           reduce using rule 107 (expr -> expr MINUS term .)
    UNEQUAL         reduce using rule 107 (expr -> expr MINUS term .)
    DO              reduce using rule 107 (expr -> expr MINUS term .)
    OF              reduce using rule 107 (expr -> expr MINUS term .)
    SEMI            reduce using rule 107 (expr -> expr MINUS term .)
    ELSE            reduce using rule 107 (expr -> expr MINUS term .)
    RB              reduce using rule 107 (expr -> expr MINUS term .)
    RP              reduce using rule 107 (expr -> expr MINUS term .)
    COMMA           reduce using rule 107 (expr -> expr MINUS term .)
    TO              reduce using rule 107 (expr -> expr MINUS term .)
    DOWNTO          reduce using rule 107 (expr -> expr MINUS term .)
    MUL             shift and go to state 119
    DIV             shift and go to state 120
    MOD             shift and go to state 121
    AND             shift and go to state 122


state 170

    (108) expr -> expr OR term .
    (110) term -> term . MUL factor
    (111) term -> term . DIV factor
    (112) term -> term . MOD factor
    (113) term -> term . AND factor

    PLUS            reduce using rule 108 (expr -> expr OR term .)
    MINUS           reduce using rule 108 (expr -> expr OR term .)
    OR              reduce using rule 108 (expr -> expr OR term .)
    THEN            reduce using rule 108 (expr -> expr OR term .)
    GE              reduce using rule 108 (expr -> expr OR term .)
    GT              reduce using rule 108 (expr -> expr OR term .)
    LE              reduce using rule 108 (expr -> expr OR term .)
    LT              reduce using rule 108 (expr -> expr OR term .)
    EQUAL           reduce using rule 108 (expr -> expr OR term .)
    UNEQUAL         reduce using rule 108 (expr -> expr OR term .)
    DO              reduce using rule 108 (expr -> expr OR term .)
    OF              reduce using rule 108 (expr -> expr OR term .)
    SEMI            reduce using rule 108 (expr -> expr OR term .)
    ELSE            reduce using rule 108 (expr -> expr OR term .)
    RB              reduce using rule 108 (expr -> expr OR term .)
    RP              reduce using rule 108 (expr -> expr OR term .)
    COMMA           reduce using rule 108 (expr -> expr OR term .)
    TO              reduce using rule 108 (expr -> expr OR term .)
    DOWNTO          reduce using rule 108 (expr -> expr OR term .)
    MUL             shift and go to state 119
    DIV             shift and go to state 120
    MOD             shift and go to state 121
    AND             shift and go to state 122


state 171

    (110) term -> term MUL factor .

    MUL             reduce using rule 110 (term -> term MUL factor .)
    DIV             reduce using rule 110 (term -> term MUL factor .)
    MOD             reduce using rule 110 (term -> term MUL factor .)
    AND             reduce using rule 110 (term -> term MUL factor .)
    PLUS            reduce using rule 110 (term -> term MUL factor .)
    MINUS           reduce using rule 110 (term -> term MUL factor .)
    OR              reduce using rule 110 (term -> term MUL factor .)
    THEN            reduce using rule 110 (term -> term MUL factor .)
    GE              reduce using rule 110 (term -> term MUL factor .)
    GT              reduce using rule 110 (term -> term MUL factor .)
    LE              reduce using rule 110 (term -> term MUL factor .)
    LT              reduce using rule 110 (term -> term MUL factor .)
    EQUAL           reduce using rule 110 (term -> term MUL factor .)
    UNEQUAL         reduce using rule 110 (term -> term MUL factor .)
    DO              reduce using rule 110 (term -> term MUL factor .)
    OF              reduce using rule 110 (term -> term MUL factor .)
    SEMI            reduce using rule 110 (term -> term MUL factor .)
    ELSE            reduce using rule 110 (term -> term MUL factor .)
    RB              reduce using rule 110 (term -> term MUL factor .)
    RP              reduce using rule 110 (term -> term MUL factor .)
    COMMA           reduce using rule 110 (term -> term MUL factor .)
    TO              reduce using rule 110 (term -> term MUL factor .)
    DOWNTO          reduce using rule 110 (term -> term MUL factor .)


state 172

    (111) term -> term DIV factor .

    MUL             reduce using rule 111 (term -> term DIV factor .)
    DIV             reduce using rule 111 (term -> term DIV factor .)
    MOD             reduce using rule 111 (term -> term DIV factor .)
    AND             reduce using rule 111 (term -> term DIV factor .)
    PLUS            reduce using rule 111 (term -> term DIV factor .)
    MINUS           reduce using rule 111 (term -> term DIV factor .)
    OR              reduce using rule 111 (term -> term DIV factor .)
    THEN            reduce using rule 111 (term -> term DIV factor .)
    GE              reduce using rule 111 (term -> term DIV factor .)
    GT              reduce using rule 111 (term -> term DIV factor .)
    LE              reduce using rule 111 (term -> term DIV factor .)
    LT              reduce using rule 111 (term -> term DIV factor .)
    EQUAL           reduce using rule 111 (term -> term DIV factor .)
    UNEQUAL         reduce using rule 111 (term -> term DIV factor .)
    DO              reduce using rule 111 (term -> term DIV factor .)
    OF              reduce using rule 111 (term -> term DIV factor .)
    SEMI            reduce using rule 111 (term -> term DIV factor .)
    ELSE            reduce using rule 111 (term -> term DIV factor .)
    RB              reduce using rule 111 (term -> term DIV factor .)
    RP              reduce using rule 111 (term -> term DIV factor .)
    COMMA           reduce using rule 111 (term -> term DIV factor .)
    TO              reduce using rule 111 (term -> term DIV factor .)
    DOWNTO          reduce using rule 111 (term -> term DIV factor .)


state 173

    (112) term -> term MOD factor .

    MUL             reduce using rule 112 (term -> term MOD factor .)
    DIV             reduce using rule 112 (term -> term MOD factor .)
    MOD             reduce using rule 112 (term -> term MOD factor .)
    AND             reduce using rule 112 (term -> term MOD factor .)
    PLUS            reduce using rule 112 (term -> term MOD factor .)
    MINUS           reduce using rule 112 (term -> term MOD factor .)
    OR              reduce using rule 112 (term -> term MOD factor .)
    THEN            reduce using rule 112 (term -> term MOD factor .)
    GE              reduce using rule 112 (term -> term MOD factor .)
    GT              reduce using rule 112 (term -> term MOD factor .)
    LE              reduce using rule 112 (term -> term MOD factor .)
    LT              reduce using rule 112 (term -> term MOD factor .)
    EQUAL           reduce using rule 112 (term -> term MOD factor .)
    UNEQUAL         reduce using rule 112 (term -> term MOD factor .)
    DO              reduce using rule 112 (term -> term MOD factor .)
    OF              reduce using rule 112 (term -> term MOD factor .)
    SEMI            reduce using rule 112 (term -> term MOD factor .)
    ELSE            reduce using rule 112 (term -> term MOD factor .)
    RB              reduce using rule 112 (term -> term MOD factor .)
    RP              reduce using rule 112 (term -> term MOD factor .)
    COMMA           reduce using rule 112 (term -> term MOD factor .)
    TO              reduce using rule 112 (term -> term MOD factor .)
    DOWNTO          reduce using rule 112 (term -> term MOD factor .)


state 174

    (113) term -> term AND factor .

    MUL             reduce using rule 113 (term -> term AND factor .)
    DIV             reduce using rule 113 (term -> term AND factor .)
    MOD             reduce using rule 113 (term -> term AND factor .)
    AND             reduce using rule 113 (term -> term AND factor .)
    PLUS            reduce using rule 113 (term -> term AND factor .)
    MINUS           reduce using rule 113 (term -> term AND factor .)
    OR              reduce using rule 113 (term -> term AND factor .)
    THEN            reduce using rule 113 (term -> term AND factor .)
    GE              reduce using rule 113 (term -> term AND factor .)
    GT              reduce using rule 113 (term -> term AND factor .)
    LE              reduce using rule 113 (term -> term AND factor .)
    LT              reduce using rule 113 (term -> term AND factor .)
    EQUAL           reduce using rule 113 (term -> term AND factor .)
    UNEQUAL         reduce using rule 113 (term -> term AND factor .)
    DO              reduce using rule 113 (term -> term AND factor .)
    OF              reduce using rule 113 (term -> term AND factor .)
    SEMI            reduce using rule 113 (term -> term AND factor .)
    ELSE            reduce using rule 113 (term -> term AND factor .)
    RB              reduce using rule 113 (term -> term AND factor .)
    RP              reduce using rule 113 (term -> term AND factor .)
    COMMA           reduce using rule 113 (term -> term AND factor .)
    TO              reduce using rule 113 (term -> term AND factor .)
    DOWNTO          reduce using rule 113 (term -> term AND factor .)


state 175

    (116) factor -> SYS_FUNCT LP args_list . RP
    (125) args_list -> args_list . COMMA expression

    RP              shift and go to state 210
    COMMA           shift and go to state 157


state 176

    (120) factor -> LP expression RP .

    MUL             reduce using rule 120 (factor -> LP expression RP .)
    DIV             reduce using rule 120 (factor -> LP expression RP .)
    MOD             reduce using rule 120 (factor -> LP expression RP .)
    AND             reduce using rule 120 (factor -> LP expression RP .)
    PLUS            reduce using rule 120 (factor -> LP expression RP .)
    MINUS           reduce using rule 120 (factor -> LP expression RP .)
    OR              reduce using rule 120 (factor -> LP expression RP .)
    THEN            reduce using rule 120 (factor -> LP expression RP .)
    GE              reduce using rule 120 (factor -> LP expression RP .)
    GT              reduce using rule 120 (factor -> LP expression RP .)
    LE              reduce using rule 120 (factor -> LP expression RP .)
    LT              reduce using rule 120 (factor -> LP expression RP .)
    EQUAL           reduce using rule 120 (factor -> LP expression RP .)
    UNEQUAL         reduce using rule 120 (factor -> LP expression RP .)
    DO              reduce using rule 120 (factor -> LP expression RP .)
    OF              reduce using rule 120 (factor -> LP expression RP .)
    SEMI            reduce using rule 120 (factor -> LP expression RP .)
    ELSE            reduce using rule 120 (factor -> LP expression RP .)
    RB              reduce using rule 120 (factor -> LP expression RP .)
    RP              reduce using rule 120 (factor -> LP expression RP .)
    COMMA           reduce using rule 120 (factor -> LP expression RP .)
    TO              reduce using rule 120 (factor -> LP expression RP .)
    DOWNTO          reduce using rule 120 (factor -> LP expression RP .)


state 177

    (117) factor -> NAME LP args_list . RP
    (125) args_list -> args_list . COMMA expression

    RP              shift and go to state 211
    COMMA           shift and go to state 157


state 178

    (123) factor -> NAME LB expression . RB
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    RB              shift and go to state 212
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 179

    (124) factor -> NAME DOT NAME .

    MUL             reduce using rule 124 (factor -> NAME DOT NAME .)
    DIV             reduce using rule 124 (factor -> NAME DOT NAME .)
    MOD             reduce using rule 124 (factor -> NAME DOT NAME .)
    AND             reduce using rule 124 (factor -> NAME DOT NAME .)
    PLUS            reduce using rule 124 (factor -> NAME DOT NAME .)
    MINUS           reduce using rule 124 (factor -> NAME DOT NAME .)
    OR              reduce using rule 124 (factor -> NAME DOT NAME .)
    THEN            reduce using rule 124 (factor -> NAME DOT NAME .)
    GE              reduce using rule 124 (factor -> NAME DOT NAME .)
    GT              reduce using rule 124 (factor -> NAME DOT NAME .)
    LE              reduce using rule 124 (factor -> NAME DOT NAME .)
    LT              reduce using rule 124 (factor -> NAME DOT NAME .)
    EQUAL           reduce using rule 124 (factor -> NAME DOT NAME .)
    UNEQUAL         reduce using rule 124 (factor -> NAME DOT NAME .)
    DO              reduce using rule 124 (factor -> NAME DOT NAME .)
    OF              reduce using rule 124 (factor -> NAME DOT NAME .)
    SEMI            reduce using rule 124 (factor -> NAME DOT NAME .)
    ELSE            reduce using rule 124 (factor -> NAME DOT NAME .)
    RB              reduce using rule 124 (factor -> NAME DOT NAME .)
    RP              reduce using rule 124 (factor -> NAME DOT NAME .)
    COMMA           reduce using rule 124 (factor -> NAME DOT NAME .)
    TO              reduce using rule 124 (factor -> NAME DOT NAME .)
    DOWNTO          reduce using rule 124 (factor -> NAME DOT NAME .)


state 180

    (86) repeat_stmt -> REPEAT stmt_list UNTIL expression .
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 86 (repeat_stmt -> REPEAT stmt_list UNTIL expression .)
    ELSE            reduce using rule 86 (repeat_stmt -> REPEAT stmt_list UNTIL expression .)
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 181

    (87) while_stmt -> WHILE expression DO stmt .

    SEMI            reduce using rule 87 (while_stmt -> WHILE expression DO stmt .)
    ELSE            reduce using rule 87 (while_stmt -> WHILE expression DO stmt .)


state 182

    (88) for_stmt -> FOR NAME ASSIGN expression . direction expression DO stmt
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr
    (89) direction -> . TO
    (90) direction -> . DOWNTO

    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115
    TO              shift and go to state 214
    DOWNTO          shift and go to state 215

    direction                      shift and go to state 213

state 183

    (91) case_stmt -> CASE expression OF case_expr_list . END
    (92) case_expr_list -> case_expr_list . case_expr
    (94) case_expr -> . const_value COLON stmt SEMI
    (95) case_expr -> . ID COLON stmt SEMI
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    END             shift and go to state 216
    ID              shift and go to state 186
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    case_expr                      shift and go to state 217
    const_value                    shift and go to state 185

state 184

    (93) case_expr_list -> case_expr .

    END             reduce using rule 93 (case_expr_list -> case_expr .)
    ID              reduce using rule 93 (case_expr_list -> case_expr .)
    INTEGER         reduce using rule 93 (case_expr_list -> case_expr .)
    REAL            reduce using rule 93 (case_expr_list -> case_expr .)
    CHAR            reduce using rule 93 (case_expr_list -> case_expr .)
    STRING          reduce using rule 93 (case_expr_list -> case_expr .)
    SYS_CON         reduce using rule 93 (case_expr_list -> case_expr .)
    true            reduce using rule 93 (case_expr_list -> case_expr .)
    false           reduce using rule 93 (case_expr_list -> case_expr .)


state 185

    (94) case_expr -> const_value . COLON stmt SEMI

    COLON           shift and go to state 218


state 186

    (95) case_expr -> ID . COLON stmt SEMI

    COLON           shift and go to state 219


state 187

    (48) function_decl -> function_head SEMI sub_routine . SEMI

    SEMI            shift and go to state 220


state 188

    (4) sub_routine -> routine_head . routine_body
    (60) routine_body -> . compound_stmt
    (61) compound_stmt -> . BEGIN stmt_list END

    BEGIN           shift and go to state 12

    routine_body                   shift and go to state 221
    compound_stmt                  shift and go to state 11

state 189

    (50) procedure_decl -> procedure_head SEMI sub_routine . SEMI

    SEMI            shift and go to state 222


state 190

    (49) function_head -> FUNCTION NAME parameters . COLON simple_type_decl

    COLON           shift and go to state 223


state 191

    (52) parameters -> LP . para_decl_list RP
    (54) para_decl_list -> . para_decl_list SEMI para_type_list
    (55) para_decl_list -> . para_type_list
    (56) para_type_list -> . var_para_list COLON simple_type_decl
    (57) para_type_list -> . val_para_list COLON simple_type_decl
    (58) var_para_list -> . VAR name_list
    (59) val_para_list -> . name_list
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    VAR             shift and go to state 228
    NAME            shift and go to state 96

    para_decl_list                 shift and go to state 224
    para_type_list                 shift and go to state 225
    var_para_list                  shift and go to state 226
    val_para_list                  shift and go to state 227
    name_list                      shift and go to state 229

state 192

    (53) parameters -> empty .

    COLON           reduce using rule 53 (parameters -> empty .)
    SEMI            reduce using rule 53 (parameters -> empty .)


state 193

    (51) procedure_head -> PROCEDURE NAME parameters .

    SEMI            reduce using rule 51 (procedure_head -> PROCEDURE NAME parameters .)


state 194

    (42) var_decl -> name_list COLON type_decl . SEMI

    SEMI            shift and go to state 230


state 195

    (36) name_list -> name_list COMMA NAME .

    COLON           reduce using rule 36 (name_list -> name_list COMMA NAME .)
    COMMA           reduce using rule 36 (name_list -> name_list COMMA NAME .)
    RP              reduce using rule 36 (name_list -> name_list COMMA NAME .)


state 196

    (23) type_definition -> NAME EQUAL type_decl SEMI .

    NAME            reduce using rule 23 (type_definition -> NAME EQUAL type_decl SEMI .)
    VAR             reduce using rule 23 (type_definition -> NAME EQUAL type_decl SEMI .)
    FUNCTION        reduce using rule 23 (type_definition -> NAME EQUAL type_decl SEMI .)
    PROCEDURE       reduce using rule 23 (type_definition -> NAME EQUAL type_decl SEMI .)
    BEGIN           reduce using rule 23 (type_definition -> NAME EQUAL type_decl SEMI .)


state 197

    (29) simple_type_decl -> LP name_list . RP
    (36) name_list -> name_list . COMMA NAME

    RP              shift and go to state 231
    COMMA           shift and go to state 142


state 198

    (30) simple_type_decl -> const_value DOTDOT . const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    const_value                    shift and go to state 232

state 199

    (31) array_type_decl -> ARRAY LB . simple_type_decl RB OF type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 148
    NAME            shift and go to state 143
    LP              shift and go to state 149
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    simple_type_decl               shift and go to state 233
    const_value                    shift and go to state 150

state 200

    (32) record_type_decl -> RECORD field_decl_list . END
    (33) field_decl_list -> field_decl_list . field_decl
    (35) field_decl -> . name_list COLON type_decl SEMI
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    END             shift and go to state 234
    NAME            shift and go to state 96

    field_decl                     shift and go to state 235
    name_list                      shift and go to state 202

state 201

    (34) field_decl_list -> field_decl .

    END             reduce using rule 34 (field_decl_list -> field_decl .)
    NAME            reduce using rule 34 (field_decl_list -> field_decl .)


state 202

    (35) field_decl -> name_list . COLON type_decl SEMI
    (36) name_list -> name_list . COMMA NAME

    COLON           shift and go to state 236
    COMMA           shift and go to state 142


state 203

    (76) assign_stmt -> NAME LB expression RB ASSIGN . expression
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 237
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 204

    (77) assign_stmt -> NAME DOT NAME ASSIGN expression .
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 77 (assign_stmt -> NAME DOT NAME ASSIGN expression .)
    ELSE            reduce using rule 77 (assign_stmt -> NAME DOT NAME ASSIGN expression .)
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 205

    (125) args_list -> args_list COMMA expression .
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    RP              reduce using rule 125 (args_list -> args_list COMMA expression .)
    COMMA           reduce using rule 125 (args_list -> args_list COMMA expression .)
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 206

    (97) expression_list -> expression_list COMMA expression .
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    RP              reduce using rule 97 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 97 (expression_list -> expression_list COMMA expression .)
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 207

    (83) if_stmt -> IF expression THEN stmt else_clause .

    SEMI            reduce using rule 83 (if_stmt -> IF expression THEN stmt else_clause .)
    ELSE            reduce using rule 83 (if_stmt -> IF expression THEN stmt else_clause .)


state 208

    (84) else_clause -> ELSE . stmt
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (77) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (78) proc_stmt -> . NAME
    (79) proc_stmt -> . NAME LP args_list RP
    (80) proc_stmt -> . SYS_PROC
    (81) proc_stmt -> . SYS_PROC LP expression_list RP
    (82) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (83) if_stmt -> . IF expression THEN stmt else_clause
    (86) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (87) while_stmt -> . WHILE expression DO stmt
    (88) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (91) case_stmt -> . CASE expression OF case_expr_list END
    (96) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 238
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 209

    (85) else_clause -> empty .

    SEMI            reduce using rule 85 (else_clause -> empty .)
    ELSE            reduce using rule 85 (else_clause -> empty .)


state 210

    (116) factor -> SYS_FUNCT LP args_list RP .

    MUL             reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    DIV             reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    MOD             reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    AND             reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    PLUS            reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    MINUS           reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    OR              reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    THEN            reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    GE              reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    GT              reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    LE              reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    LT              reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    EQUAL           reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    UNEQUAL         reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    DO              reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    OF              reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    SEMI            reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    ELSE            reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    RB              reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    RP              reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    COMMA           reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    TO              reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)
    DOWNTO          reduce using rule 116 (factor -> SYS_FUNCT LP args_list RP .)


state 211

    (117) factor -> NAME LP args_list RP .

    MUL             reduce using rule 117 (factor -> NAME LP args_list RP .)
    DIV             reduce using rule 117 (factor -> NAME LP args_list RP .)
    MOD             reduce using rule 117 (factor -> NAME LP args_list RP .)
    AND             reduce using rule 117 (factor -> NAME LP args_list RP .)
    PLUS            reduce using rule 117 (factor -> NAME LP args_list RP .)
    MINUS           reduce using rule 117 (factor -> NAME LP args_list RP .)
    OR              reduce using rule 117 (factor -> NAME LP args_list RP .)
    THEN            reduce using rule 117 (factor -> NAME LP args_list RP .)
    GE              reduce using rule 117 (factor -> NAME LP args_list RP .)
    GT              reduce using rule 117 (factor -> NAME LP args_list RP .)
    LE              reduce using rule 117 (factor -> NAME LP args_list RP .)
    LT              reduce using rule 117 (factor -> NAME LP args_list RP .)
    EQUAL           reduce using rule 117 (factor -> NAME LP args_list RP .)
    UNEQUAL         reduce using rule 117 (factor -> NAME LP args_list RP .)
    DO              reduce using rule 117 (factor -> NAME LP args_list RP .)
    OF              reduce using rule 117 (factor -> NAME LP args_list RP .)
    SEMI            reduce using rule 117 (factor -> NAME LP args_list RP .)
    ELSE            reduce using rule 117 (factor -> NAME LP args_list RP .)
    RB              reduce using rule 117 (factor -> NAME LP args_list RP .)
    RP              reduce using rule 117 (factor -> NAME LP args_list RP .)
    COMMA           reduce using rule 117 (factor -> NAME LP args_list RP .)
    TO              reduce using rule 117 (factor -> NAME LP args_list RP .)
    DOWNTO          reduce using rule 117 (factor -> NAME LP args_list RP .)


state 212

    (123) factor -> NAME LB expression RB .

    MUL             reduce using rule 123 (factor -> NAME LB expression RB .)
    DIV             reduce using rule 123 (factor -> NAME LB expression RB .)
    MOD             reduce using rule 123 (factor -> NAME LB expression RB .)
    AND             reduce using rule 123 (factor -> NAME LB expression RB .)
    PLUS            reduce using rule 123 (factor -> NAME LB expression RB .)
    MINUS           reduce using rule 123 (factor -> NAME LB expression RB .)
    OR              reduce using rule 123 (factor -> NAME LB expression RB .)
    THEN            reduce using rule 123 (factor -> NAME LB expression RB .)
    GE              reduce using rule 123 (factor -> NAME LB expression RB .)
    GT              reduce using rule 123 (factor -> NAME LB expression RB .)
    LE              reduce using rule 123 (factor -> NAME LB expression RB .)
    LT              reduce using rule 123 (factor -> NAME LB expression RB .)
    EQUAL           reduce using rule 123 (factor -> NAME LB expression RB .)
    UNEQUAL         reduce using rule 123 (factor -> NAME LB expression RB .)
    DO              reduce using rule 123 (factor -> NAME LB expression RB .)
    OF              reduce using rule 123 (factor -> NAME LB expression RB .)
    SEMI            reduce using rule 123 (factor -> NAME LB expression RB .)
    ELSE            reduce using rule 123 (factor -> NAME LB expression RB .)
    RB              reduce using rule 123 (factor -> NAME LB expression RB .)
    RP              reduce using rule 123 (factor -> NAME LB expression RB .)
    COMMA           reduce using rule 123 (factor -> NAME LB expression RB .)
    TO              reduce using rule 123 (factor -> NAME LB expression RB .)
    DOWNTO          reduce using rule 123 (factor -> NAME LB expression RB .)


state 213

    (88) for_stmt -> FOR NAME ASSIGN expression direction . expression DO stmt
    (99) expression -> . expression GE expr
    (100) expression -> . expression GT expr
    (101) expression -> . expression LE expr
    (102) expression -> . expression LT expr
    (103) expression -> . expression EQUAL expr
    (104) expression -> . expression UNEQUAL expr
    (105) expression -> . expr
    (106) expr -> . expr PLUS term
    (107) expr -> . expr MINUS term
    (108) expr -> . expr OR term
    (109) expr -> . term
    (110) term -> . term MUL factor
    (111) term -> . term DIV factor
    (112) term -> . term MOD factor
    (113) term -> . term AND factor
    (114) term -> . factor
    (115) factor -> . SYS_FUNCT
    (116) factor -> . SYS_FUNCT LP args_list RP
    (117) factor -> . NAME LP args_list RP
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . LP expression RP
    (121) factor -> . NOT factor
    (122) factor -> . MINUS factor
    (123) factor -> . NAME LB expression RB
    (124) factor -> . NAME DOT NAME
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    LP              shift and go to state 69
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    expression                     shift and go to state 239
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 214

    (89) direction -> TO .

    SYS_FUNCT       reduce using rule 89 (direction -> TO .)
    NAME            reduce using rule 89 (direction -> TO .)
    LP              reduce using rule 89 (direction -> TO .)
    NOT             reduce using rule 89 (direction -> TO .)
    MINUS           reduce using rule 89 (direction -> TO .)
    INTEGER         reduce using rule 89 (direction -> TO .)
    REAL            reduce using rule 89 (direction -> TO .)
    CHAR            reduce using rule 89 (direction -> TO .)
    STRING          reduce using rule 89 (direction -> TO .)
    SYS_CON         reduce using rule 89 (direction -> TO .)
    true            reduce using rule 89 (direction -> TO .)
    false           reduce using rule 89 (direction -> TO .)


state 215

    (90) direction -> DOWNTO .

    SYS_FUNCT       reduce using rule 90 (direction -> DOWNTO .)
    NAME            reduce using rule 90 (direction -> DOWNTO .)
    LP              reduce using rule 90 (direction -> DOWNTO .)
    NOT             reduce using rule 90 (direction -> DOWNTO .)
    MINUS           reduce using rule 90 (direction -> DOWNTO .)
    INTEGER         reduce using rule 90 (direction -> DOWNTO .)
    REAL            reduce using rule 90 (direction -> DOWNTO .)
    CHAR            reduce using rule 90 (direction -> DOWNTO .)
    STRING          reduce using rule 90 (direction -> DOWNTO .)
    SYS_CON         reduce using rule 90 (direction -> DOWNTO .)
    true            reduce using rule 90 (direction -> DOWNTO .)
    false           reduce using rule 90 (direction -> DOWNTO .)


state 216

    (91) case_stmt -> CASE expression OF case_expr_list END .

    SEMI            reduce using rule 91 (case_stmt -> CASE expression OF case_expr_list END .)
    ELSE            reduce using rule 91 (case_stmt -> CASE expression OF case_expr_list END .)


state 217

    (92) case_expr_list -> case_expr_list case_expr .

    END             reduce using rule 92 (case_expr_list -> case_expr_list case_expr .)
    ID              reduce using rule 92 (case_expr_list -> case_expr_list case_expr .)
    INTEGER         reduce using rule 92 (case_expr_list -> case_expr_list case_expr .)
    REAL            reduce using rule 92 (case_expr_list -> case_expr_list case_expr .)
    CHAR            reduce using rule 92 (case_expr_list -> case_expr_list case_expr .)
    STRING          reduce using rule 92 (case_expr_list -> case_expr_list case_expr .)
    SYS_CON         reduce using rule 92 (case_expr_list -> case_expr_list case_expr .)
    true            reduce using rule 92 (case_expr_list -> case_expr_list case_expr .)
    false           reduce using rule 92 (case_expr_list -> case_expr_list case_expr .)


state 218

    (94) case_expr -> const_value COLON . stmt SEMI
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (77) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (78) proc_stmt -> . NAME
    (79) proc_stmt -> . NAME LP args_list RP
    (80) proc_stmt -> . SYS_PROC
    (81) proc_stmt -> . SYS_PROC LP expression_list RP
    (82) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (83) if_stmt -> . IF expression THEN stmt else_clause
    (86) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (87) while_stmt -> . WHILE expression DO stmt
    (88) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (91) case_stmt -> . CASE expression OF case_expr_list END
    (96) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 240
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 219

    (95) case_expr -> ID COLON . stmt SEMI
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (77) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (78) proc_stmt -> . NAME
    (79) proc_stmt -> . NAME LP args_list RP
    (80) proc_stmt -> . SYS_PROC
    (81) proc_stmt -> . SYS_PROC LP expression_list RP
    (82) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (83) if_stmt -> . IF expression THEN stmt else_clause
    (86) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (87) while_stmt -> . WHILE expression DO stmt
    (88) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (91) case_stmt -> . CASE expression OF case_expr_list END
    (96) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 241
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 220

    (48) function_decl -> function_head SEMI sub_routine SEMI .

    FUNCTION        reduce using rule 48 (function_decl -> function_head SEMI sub_routine SEMI .)
    PROCEDURE       reduce using rule 48 (function_decl -> function_head SEMI sub_routine SEMI .)
    BEGIN           reduce using rule 48 (function_decl -> function_head SEMI sub_routine SEMI .)


state 221

    (4) sub_routine -> routine_head routine_body .

    SEMI            reduce using rule 4 (sub_routine -> routine_head routine_body .)


state 222

    (50) procedure_decl -> procedure_head SEMI sub_routine SEMI .

    FUNCTION        reduce using rule 50 (procedure_decl -> procedure_head SEMI sub_routine SEMI .)
    PROCEDURE       reduce using rule 50 (procedure_decl -> procedure_head SEMI sub_routine SEMI .)
    BEGIN           reduce using rule 50 (procedure_decl -> procedure_head SEMI sub_routine SEMI .)


state 223

    (49) function_head -> FUNCTION NAME parameters COLON . simple_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 148
    NAME            shift and go to state 143
    LP              shift and go to state 149
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    simple_type_decl               shift and go to state 242
    const_value                    shift and go to state 150

state 224

    (52) parameters -> LP para_decl_list . RP
    (54) para_decl_list -> para_decl_list . SEMI para_type_list

    RP              shift and go to state 243
    SEMI            shift and go to state 244


state 225

    (55) para_decl_list -> para_type_list .

    RP              reduce using rule 55 (para_decl_list -> para_type_list .)
    SEMI            reduce using rule 55 (para_decl_list -> para_type_list .)


state 226

    (56) para_type_list -> var_para_list . COLON simple_type_decl

    COLON           shift and go to state 245


state 227

    (57) para_type_list -> val_para_list . COLON simple_type_decl

    COLON           shift and go to state 246


state 228

    (58) var_para_list -> VAR . name_list
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    NAME            shift and go to state 96

    name_list                      shift and go to state 247

state 229

    (59) val_para_list -> name_list .
    (36) name_list -> name_list . COMMA NAME

    COLON           reduce using rule 59 (val_para_list -> name_list .)
    COMMA           shift and go to state 142


state 230

    (42) var_decl -> name_list COLON type_decl SEMI .

    NAME            reduce using rule 42 (var_decl -> name_list COLON type_decl SEMI .)
    FUNCTION        reduce using rule 42 (var_decl -> name_list COLON type_decl SEMI .)
    PROCEDURE       reduce using rule 42 (var_decl -> name_list COLON type_decl SEMI .)
    BEGIN           reduce using rule 42 (var_decl -> name_list COLON type_decl SEMI .)


state 231

    (29) simple_type_decl -> LP name_list RP .

    SEMI            reduce using rule 29 (simple_type_decl -> LP name_list RP .)
    RB              reduce using rule 29 (simple_type_decl -> LP name_list RP .)
    RP              reduce using rule 29 (simple_type_decl -> LP name_list RP .)


state 232

    (30) simple_type_decl -> const_value DOTDOT const_value .

    SEMI            reduce using rule 30 (simple_type_decl -> const_value DOTDOT const_value .)
    RB              reduce using rule 30 (simple_type_decl -> const_value DOTDOT const_value .)
    RP              reduce using rule 30 (simple_type_decl -> const_value DOTDOT const_value .)


state 233

    (31) array_type_decl -> ARRAY LB simple_type_decl . RB OF type_decl

    RB              shift and go to state 248


state 234

    (32) record_type_decl -> RECORD field_decl_list END .

    SEMI            reduce using rule 32 (record_type_decl -> RECORD field_decl_list END .)


state 235

    (33) field_decl_list -> field_decl_list field_decl .

    END             reduce using rule 33 (field_decl_list -> field_decl_list field_decl .)
    NAME            reduce using rule 33 (field_decl_list -> field_decl_list field_decl .)


state 236

    (35) field_decl -> name_list COLON . type_decl SEMI
    (24) type_decl -> . simple_type_decl
    (25) type_decl -> . array_type_decl
    (26) type_decl -> . record_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (31) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (32) record_type_decl -> . RECORD field_decl_list END
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 148
    NAME            shift and go to state 143
    LP              shift and go to state 149
    ARRAY           shift and go to state 151
    RECORD          shift and go to state 152
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    type_decl                      shift and go to state 249
    simple_type_decl               shift and go to state 145
    array_type_decl                shift and go to state 146
    record_type_decl               shift and go to state 147
    const_value                    shift and go to state 150

state 237

    (76) assign_stmt -> NAME LB expression RB ASSIGN expression .
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 76 (assign_stmt -> NAME LB expression RB ASSIGN expression .)
    ELSE            reduce using rule 76 (assign_stmt -> NAME LB expression RB ASSIGN expression .)
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 238

    (84) else_clause -> ELSE stmt .

    SEMI            reduce using rule 84 (else_clause -> ELSE stmt .)
    ELSE            reduce using rule 84 (else_clause -> ELSE stmt .)


state 239

    (88) for_stmt -> FOR NAME ASSIGN expression direction expression . DO stmt
    (99) expression -> expression . GE expr
    (100) expression -> expression . GT expr
    (101) expression -> expression . LE expr
    (102) expression -> expression . LT expr
    (103) expression -> expression . EQUAL expr
    (104) expression -> expression . UNEQUAL expr

    DO              shift and go to state 250
    GE              shift and go to state 110
    GT              shift and go to state 111
    LE              shift and go to state 112
    LT              shift and go to state 113
    EQUAL           shift and go to state 114
    UNEQUAL         shift and go to state 115


state 240

    (94) case_expr -> const_value COLON stmt . SEMI

    SEMI            shift and go to state 251


state 241

    (95) case_expr -> ID COLON stmt . SEMI

    SEMI            shift and go to state 252


state 242

    (49) function_head -> FUNCTION NAME parameters COLON simple_type_decl .

    SEMI            reduce using rule 49 (function_head -> FUNCTION NAME parameters COLON simple_type_decl .)


state 243

    (52) parameters -> LP para_decl_list RP .

    COLON           reduce using rule 52 (parameters -> LP para_decl_list RP .)
    SEMI            reduce using rule 52 (parameters -> LP para_decl_list RP .)


state 244

    (54) para_decl_list -> para_decl_list SEMI . para_type_list
    (56) para_type_list -> . var_para_list COLON simple_type_decl
    (57) para_type_list -> . val_para_list COLON simple_type_decl
    (58) var_para_list -> . VAR name_list
    (59) val_para_list -> . name_list
    (36) name_list -> . name_list COMMA NAME
    (37) name_list -> . NAME

    VAR             shift and go to state 228
    NAME            shift and go to state 96

    para_type_list                 shift and go to state 253
    var_para_list                  shift and go to state 226
    val_para_list                  shift and go to state 227
    name_list                      shift and go to state 229

state 245

    (56) para_type_list -> var_para_list COLON . simple_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 148
    NAME            shift and go to state 143
    LP              shift and go to state 149
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    simple_type_decl               shift and go to state 254
    const_value                    shift and go to state 150

state 246

    (57) para_type_list -> val_para_list COLON . simple_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 148
    NAME            shift and go to state 143
    LP              shift and go to state 149
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    simple_type_decl               shift and go to state 255
    const_value                    shift and go to state 150

state 247

    (58) var_para_list -> VAR name_list .
    (36) name_list -> name_list . COMMA NAME

    COLON           reduce using rule 58 (var_para_list -> VAR name_list .)
    COMMA           shift and go to state 142


state 248

    (31) array_type_decl -> ARRAY LB simple_type_decl RB . OF type_decl

    OF              shift and go to state 256


state 249

    (35) field_decl -> name_list COLON type_decl . SEMI

    SEMI            shift and go to state 257


state 250

    (88) for_stmt -> FOR NAME ASSIGN expression direction expression DO . stmt
    (64) stmt -> . INTEGER COLON non_label_stmt
    (65) stmt -> . non_label_stmt
    (66) non_label_stmt -> . assign_stmt
    (67) non_label_stmt -> . proc_stmt
    (68) non_label_stmt -> . compound_stmt
    (69) non_label_stmt -> . if_stmt
    (70) non_label_stmt -> . repeat_stmt
    (71) non_label_stmt -> . while_stmt
    (72) non_label_stmt -> . for_stmt
    (73) non_label_stmt -> . case_stmt
    (74) non_label_stmt -> . goto_stmt
    (75) assign_stmt -> . NAME ASSIGN expression
    (76) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (77) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (78) proc_stmt -> . NAME
    (79) proc_stmt -> . NAME LP args_list RP
    (80) proc_stmt -> . SYS_PROC
    (81) proc_stmt -> . SYS_PROC LP expression_list RP
    (82) proc_stmt -> . READ LP factor RP
    (61) compound_stmt -> . BEGIN stmt_list END
    (83) if_stmt -> . IF expression THEN stmt else_clause
    (86) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (87) while_stmt -> . WHILE expression DO stmt
    (88) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (91) case_stmt -> . CASE expression OF case_expr_list END
    (96) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 258
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 251

    (94) case_expr -> const_value COLON stmt SEMI .

    END             reduce using rule 94 (case_expr -> const_value COLON stmt SEMI .)
    ID              reduce using rule 94 (case_expr -> const_value COLON stmt SEMI .)
    INTEGER         reduce using rule 94 (case_expr -> const_value COLON stmt SEMI .)
    REAL            reduce using rule 94 (case_expr -> const_value COLON stmt SEMI .)
    CHAR            reduce using rule 94 (case_expr -> const_value COLON stmt SEMI .)
    STRING          reduce using rule 94 (case_expr -> const_value COLON stmt SEMI .)
    SYS_CON         reduce using rule 94 (case_expr -> const_value COLON stmt SEMI .)
    true            reduce using rule 94 (case_expr -> const_value COLON stmt SEMI .)
    false           reduce using rule 94 (case_expr -> const_value COLON stmt SEMI .)


state 252

    (95) case_expr -> ID COLON stmt SEMI .

    END             reduce using rule 95 (case_expr -> ID COLON stmt SEMI .)
    ID              reduce using rule 95 (case_expr -> ID COLON stmt SEMI .)
    INTEGER         reduce using rule 95 (case_expr -> ID COLON stmt SEMI .)
    REAL            reduce using rule 95 (case_expr -> ID COLON stmt SEMI .)
    CHAR            reduce using rule 95 (case_expr -> ID COLON stmt SEMI .)
    STRING          reduce using rule 95 (case_expr -> ID COLON stmt SEMI .)
    SYS_CON         reduce using rule 95 (case_expr -> ID COLON stmt SEMI .)
    true            reduce using rule 95 (case_expr -> ID COLON stmt SEMI .)
    false           reduce using rule 95 (case_expr -> ID COLON stmt SEMI .)


state 253

    (54) para_decl_list -> para_decl_list SEMI para_type_list .

    RP              reduce using rule 54 (para_decl_list -> para_decl_list SEMI para_type_list .)
    SEMI            reduce using rule 54 (para_decl_list -> para_decl_list SEMI para_type_list .)


state 254

    (56) para_type_list -> var_para_list COLON simple_type_decl .

    RP              reduce using rule 56 (para_type_list -> var_para_list COLON simple_type_decl .)
    SEMI            reduce using rule 56 (para_type_list -> var_para_list COLON simple_type_decl .)


state 255

    (57) para_type_list -> val_para_list COLON simple_type_decl .

    RP              reduce using rule 57 (para_type_list -> val_para_list COLON simple_type_decl .)
    SEMI            reduce using rule 57 (para_type_list -> val_para_list COLON simple_type_decl .)


state 256

    (31) array_type_decl -> ARRAY LB simple_type_decl RB OF . type_decl
    (24) type_decl -> . simple_type_decl
    (25) type_decl -> . array_type_decl
    (26) type_decl -> . record_type_decl
    (27) simple_type_decl -> . SYS_TYPE
    (28) simple_type_decl -> . NAME
    (29) simple_type_decl -> . LP name_list RP
    (30) simple_type_decl -> . const_value DOTDOT const_value
    (31) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (32) record_type_decl -> . RECORD field_decl_list END
    (12) const_value -> . INTEGER
    (13) const_value -> . REAL
    (14) const_value -> . CHAR
    (15) const_value -> . STRING
    (16) const_value -> . SYS_CON
    (17) const_value -> . true
    (18) const_value -> . false

    SYS_TYPE        shift and go to state 148
    NAME            shift and go to state 143
    LP              shift and go to state 149
    ARRAY           shift and go to state 151
    RECORD          shift and go to state 152
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77
    true            shift and go to state 78
    false           shift and go to state 79

    simple_type_decl               shift and go to state 145
    type_decl                      shift and go to state 259
    array_type_decl                shift and go to state 146
    record_type_decl               shift and go to state 147
    const_value                    shift and go to state 150

state 257

    (35) field_decl -> name_list COLON type_decl SEMI .

    END             reduce using rule 35 (field_decl -> name_list COLON type_decl SEMI .)
    NAME            reduce using rule 35 (field_decl -> name_list COLON type_decl SEMI .)


state 258

    (88) for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt .

    SEMI            reduce using rule 88 (for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt .)
    ELSE            reduce using rule 88 (for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt .)


state 259

    (31) array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl .

    SEMI            reduce using rule 31 (array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 47 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 47 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 161 resolved as shift
